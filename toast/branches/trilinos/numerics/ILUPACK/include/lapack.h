#ifndef _LAPACK_H
#define _LAPACK_H

/************ nameslapack.h einbinden, falls noch nicht geschehen *********/
#include <nameslapack.h>

#include "long_integer.h"

void cbdsqr(character *uplo, integer *n, integer *ncvt, integer *nru, integer *ncc, real *d, real *e, complex *vt, integer *ldvt, complex *u, integer *ldu, complex *c, integer *ldc, real *rwork, integer *info, ftnlen uplolen);
void cgbbrd(character *vect, integer *m, integer *n, integer *ncc, integer *kl, integer *ku, complex *ab, integer *ldab, real *d, real *e, complex *q, integer *ldq, complex *pt, integer *ldpt, complex *c, integer *ldc, complex *work, real *rwork, integer *info, ftnlen vectlen);
void cgbcon(character *norm, integer *n, integer *kl, integer *ku, complex *ab, integer *ldab, integer *ipiv, real *anorm, real *rcond, complex *work, real *rwork, integer *info, ftnlen normlen);
void cgbequ(integer *m, integer *n, integer *kl, integer *ku, complex *ab, integer *ldab, real *r, real *c, real *rowcnd, real *colcnd, real *amax, integer *info);
void cgbrfs(character *trans, integer *n, integer *kl, integer *ku, integer *nrhs, complex *ab, integer *ldab, complex *afb, integer *ldafb, integer *ipiv, complex *b, integer *ldb, complex *x, integer *ldx, real *ferr, real *berr, complex *work, real *rwork, integer *info, ftnlen translen);
void cgbsv(integer *n, integer *kl, integer *ku, integer *nrhs, complex *ab, integer *ldab, integer *ipiv, complex *b, integer *ldb, integer *info);
void cgbsvx(character *fact, character *trans, integer *n, integer *kl, integer *ku, integer *nrhs, complex *ab, integer *ldab, complex *afb, integer *ldafb, integer *ipiv, character *equed, real *r, real *c, complex *b, integer *ldb, complex *x, integer *ldx, real *rcond, real *ferr, real *berr, complex *work, real *rwork, integer *info, ftnlen factlen, ftnlen translen, ftnlen equedlen);
void cgbtf2(integer *m, integer *n, integer *kl, integer *ku, complex *ab, integer *ldab, integer *ipiv, integer *info);
void cgbtrf(integer *m, integer *n, integer *kl, integer *ku, complex *ab, integer *ldab, integer *ipiv, integer *info);
void cgbtrs(character *trans, integer *n, integer *kl, integer *ku, integer *nrhs, complex *ab, integer *ldab, integer *ipiv, complex *b, integer *ldb, integer *info, ftnlen translen);
void cgebak(character *job, character *side, integer *n, integer *ilo, integer *ihi, real *scale, integer *m, complex *v, integer *ldv, integer *info, ftnlen joblen, ftnlen sidelen);
void cgebal(character *job, integer *n, complex *a, integer *lda, integer *ilo, integer *ihi, real *scale, integer *info, ftnlen joblen);
void cgebd2(integer *m, integer *n, complex *a, integer *lda, real *d, real *e, complex *tauq, complex *taup, complex *work, integer *info);
void cgebrd(integer *m, integer *n, complex *a, integer *lda, real *d, real *e, complex *tauq, complex *taup, complex *work, integer *lwork, integer *info);
void cgecon(character *norm, integer *n, complex *a, integer *lda, real *anorm, real *rcond, complex *work, real *rwork, integer *info, ftnlen normlen);
void cgeequ(integer *m, integer *n, complex *a, integer *lda, real *r, real *c, real *rowcnd, real *colcnd, real *amax, integer *info);
void cgees(character *jobvs, character *sort, logical (*select)(complex *w), integer *n, complex *a, integer *lda, integer *sdim, complex *w, complex *vs, integer *ldvs, complex *work, integer *lwork, real *rwork, logical *bwork, integer *info, ftnlen jobvslen, ftnlen sortlen);
void cgeesx(character *jobvs, character *sort, logical (*select)(complex *w), character *sense, integer *n, complex *a, integer *lda, integer *sdim, complex *w, complex *vs, integer *ldvs, real *rconde, real *rcondv, complex *work, integer *lwork, real *rwork, logical *bwork, integer *info, ftnlen jobvslen, ftnlen sortlen, ftnlen senselen);
void cgeev(character *jobvl, character *jobvr, integer *n, complex *a, integer *lda, complex *w, complex *vl, integer *ldvl, complex *vr, integer *ldvr, complex *work, integer *lwork, real *rwork, integer *info, ftnlen jobvllen, ftnlen jobvrlen);
void cgeevx(character *balanc, character *jobvl, character *jobvr, character *sense, integer *n, complex *a, integer *lda, complex *w, complex *vl, integer *ldvl, complex *vr, integer *ldvr, integer *ilo, integer *ihi, real *scale, real *abnrm, real *rconde, real *rcondv, complex *work, integer *lwork, real *rwork, integer *info, ftnlen balanclen, ftnlen jobvllen, ftnlen jobvrlen, ftnlen senselen);
void cgegs(character *jobvsl, character *jobvsr, integer *n, complex *a, integer *lda, complex *b, integer *ldb, complex *alpha, complex *beta, complex *vsl, integer *ldvsl, complex *vsr, integer *ldvsr, complex *work, integer *lwork, real *rwork, integer *info, ftnlen jobvsllen, ftnlen jobvsrlen);
void cgegv(character *jobvl, character *jobvr, integer *n, complex *a, integer *lda, complex *b, integer *ldb, complex *alpha, complex *beta, complex *vl, integer *ldvl, complex *vr, integer *ldvr, complex *work, integer *lwork, real *rwork, integer *info, ftnlen jobvllen, ftnlen jobvrlen);
void cgehd2(integer *n, integer *ilo, integer *ihi, complex *a, integer *lda, complex *tau, complex *work, integer *info);
void cgehrd(integer *n, integer *ilo, integer *ihi, complex *a, integer *lda, complex *tau, complex *work, integer *lwork, integer *info);
void cgelq2(integer *m, integer *n, complex *a, integer *lda, complex *tau, complex *work, integer *info);
void cgelqf(integer *m, integer *n, complex *a, integer *lda, complex *tau, complex *work, integer *lwork, integer *info);
void cgels(character *trans, integer *m, integer *n, integer *nrhs, complex *a, integer *lda, complex *b, integer *ldb, complex *work, integer *lwork, integer *info, ftnlen translen);
void cgelsd(integer *m, integer *n, integer *nrhs, complex *a, integer *lda, complex *b, integer *ldb, real *s, real *rcond, integer *rank, complex *work, integer *lwork, real *rwork, integer *iwork, integer *info);
void cgelss(integer *m, integer *n, integer *nrhs, complex *a, integer *lda, complex *b, integer *ldb, real *s, real *rcond, integer *rank, complex *work, integer *lwork, real *rwork, integer *info);
void cgelsx(integer *m, integer *n, integer *nrhs, complex *a, integer *lda, complex *b, integer *ldb, integer *jpvt, real *rcond, integer *rank, complex *work, real *rwork, integer *info);
void cgelsy(integer *m, integer *n, integer *nrhs, complex *a, integer *lda, complex *b, integer *ldb, integer *jpvt, real *rcond, integer *rank, complex *work, integer *lwork, real *rwork, integer *info);
void cgeql2(integer *m, integer *n, complex *a, integer *lda, complex *tau, complex *work, integer *info);
void cgeqlf(integer *m, integer *n, complex *a, integer *lda, complex *tau, complex *work, integer *lwork, integer *info);
void cgeqp3(integer *m, integer *n, complex *a, integer *lda, integer *jpvt, complex *tau, complex *work, integer *lwork, real *rwork, integer *info);
void cgeqpf(integer *m, integer *n, complex *a, integer *lda, integer *jpvt, complex *tau, complex *work, real *rwork, integer *info);
void cgeqr2(integer *m, integer *n, complex *a, integer *lda, complex *tau, complex *work, integer *info);
void cgeqrf(integer *m, integer *n, complex *a, integer *lda, complex *tau, complex *work, integer *lwork, integer *info);
void cgerfs(character *trans, integer *n, integer *nrhs, complex *a, integer *lda, complex *af, integer *ldaf, integer *ipiv, complex *b, integer *ldb, complex *x, integer *ldx, real *ferr, real *berr, complex *work, real *rwork, integer *info, ftnlen translen);
void cgerq2(integer *m, integer *n, complex *a, integer *lda, complex *tau, complex *work, integer *info);
void cgerqf(integer *m, integer *n, complex *a, integer *lda, complex *tau, complex *work, integer *lwork, integer *info);
void cgesc2(integer *n, complex *a, integer *lda, complex *rhs, integer *ipiv, integer *jpiv, real *scale);
void cgesdd(character *jobz, integer *m, integer *n, complex *a, integer *lda, real *s, complex *u, integer *ldu, complex *vt, integer *ldvt, complex *work, integer *lwork, real *rwork, integer *iwork, integer *info, ftnlen jobzlen);
void cgesv(integer *n, integer *nrhs, complex *a, integer *lda, integer *ipiv, complex *b, integer *ldb, integer *info);
void cgesvd(character *jobu, character *jobvt, integer *m, integer *n, complex *a, integer *lda, real *s, complex *u, integer *ldu, complex *vt, integer *ldvt, complex *work, integer *lwork, real *rwork, integer *info, ftnlen jobulen, ftnlen jobvtlen);
void cgesvx(character *fact, character *trans, integer *n, integer *nrhs, complex *a, integer *lda, complex *af, integer *ldaf, integer *ipiv, character *equed, real *r, real *c, complex *b, integer *ldb, complex *x, integer *ldx, real *rcond, real *ferr, real *berr, complex *work, real *rwork, integer *info, ftnlen factlen, ftnlen translen, ftnlen equedlen);
void cgetc2(integer *n, complex *a, integer *lda, integer *ipiv, integer *jpiv, integer *info);
void cgetf2(integer *m, integer *n, complex *a, integer *lda, integer *ipiv, integer *info);
void cgetrf(integer *m, integer *n, complex *a, integer *lda, integer *ipiv, integer *info);
void cgetri(integer *n, complex *a, integer *lda, integer *ipiv, complex *work, integer *lwork, integer *info);
void cgetrs(character *trans, integer *n, integer *nrhs, complex *a, integer *lda, integer *ipiv, complex *b, integer *ldb, integer *info, ftnlen translen);
void cggbak(character *job, character *side, integer *n, integer *ilo, integer *ihi, real *lscale, real *rscale, integer *m, complex *v, integer *ldv, integer *info, ftnlen joblen, ftnlen sidelen);
void cggbal(character *job, integer *n, complex *a, integer *lda, complex *b, integer *ldb, integer *ilo, integer *ihi, real *lscale, real *rscale, real *work, integer *info, ftnlen joblen);
void cgges(character *jobvsl, character *jobvsr, character *sort, logical (*selctg)(complex *a, complex *b), integer *n, complex *a, integer *lda, complex *b, integer *ldb, integer *sdim, complex *alpha, complex *beta, complex *vsl, integer *ldvsl, complex *vsr, integer *ldvsr, complex *work, integer *lwork, real *rwork, logical *bwork, integer *info, ftnlen jobvsllen, ftnlen jobvsrlen, ftnlen sortlen);
void cggesx(character *jobvsl, character *jobvsr, character *sort, logical (*select)(complex *a, complex *b), character *sense, integer *n, complex *a, integer *lda, complex *b, integer *ldb, integer *sdim, complex *alpha, complex *beta, complex *vsl, integer *ldvsl, complex *vsr, integer *ldvsr, real *rconde, real *rcondv, complex *work, integer *lwork, real *rwork, integer *iwork, integer *liwork, logical *bwork, integer *info, ftnlen jobvsllen, ftnlen jobvsrlen, ftnlen sortlen, ftnlen senselen);
void cggev(character *jobvl, character *jobvr, integer *n, complex *a, integer *lda, complex *b, integer *ldb, complex *alpha, complex *beta, complex *vl, integer *ldvl, complex *vr, integer *ldvr, complex *work, integer *lwork, real *rwork, integer *info, ftnlen jobvllen, ftnlen jobvrlen);
void cggevx(character *balanc, character *jobvl, character *jobvr, character *sense, integer *n, complex *a, integer *lda, complex *b, integer *ldb, complex *alpha, complex *beta, complex *vl, integer *ldvl, complex *vr, integer *ldvr, integer *ilo, integer *ihi, real *lscale, real *rscale, real *abnrm, real *bbnrm, real *rconde, real *rcondv, complex *work, integer *lwork, real *rwork, integer *iwork, logical *bwork, integer *info, ftnlen balanclen, ftnlen jobvllen, ftnlen jobvrlen, ftnlen senselen);
void cggglm(integer *n, integer *m, integer *p, complex *a, integer *lda, complex *b, integer *ldb, complex *d, complex *x, complex *y, complex *work, integer *lwork, integer *info);
void cgghrd(character *compq, character *compz, integer *n, integer *ilo, integer *ihi, complex *a, integer *lda, complex *b, integer *ldb, complex *q, integer *ldq, complex *z, integer *ldz, integer *info, ftnlen compqlen, ftnlen compzlen);
void cgglse(integer *m, integer *n, integer *p, complex *a, integer *lda, complex *b, integer *ldb, complex *c, complex *d, complex *x, complex *work, integer *lwork, integer *info);
void cggqrf(integer *n, integer *m, integer *p, complex *a, integer *lda, complex *taua, complex *b, integer *ldb, complex *taub, complex *work, integer *lwork, integer *info);
void cggrqf(integer *m, integer *p, integer *n, complex *a, integer *lda, complex *taua, complex *b, integer *ldb, complex *taub, complex *work, integer *lwork, integer *info);
void cggsvd(character *jobu, character *jobv, character *jobq, integer *m, integer *n, integer *p, integer *k, integer *l, complex *a, integer *lda, complex *b, integer *ldb, real *alpha, real *beta, complex *u, integer *ldu, complex *v, integer *ldv, complex *q, integer *ldq, complex *work, real *rwork, integer *iwork, integer *info, ftnlen jobulen, ftnlen jobvlen, ftnlen jobqlen);
void cggsvp(character *jobu, character *jobv, character *jobq, integer *m, integer *p, integer *n, complex *a, integer *lda, complex *b, integer *ldb, real *tola, real *tolb, integer *k, integer *l, complex *u, integer *ldu, complex *v, integer *ldv, complex *q, integer *ldq, integer *iwork, real *rwork, complex *tau, complex *work, integer *info, ftnlen jobulen, ftnlen jobvlen, ftnlen jobqlen);
void cgtcon(character *norm, integer *n, complex *dl, complex *d, complex *du, complex *du2, integer *ipiv, real *anorm, real *rcond, complex *work, integer *info, ftnlen normlen);
void cgtrfs(character *trans, integer *n, integer *nrhs, complex *dl, complex *d, complex *du, complex *dlf, complex *df, complex *duf, complex *du2, integer *ipiv, complex *b, integer *ldb, complex *x, integer *ldx, real *ferr, real *berr, complex *work, real *rwork, integer *info, ftnlen translen);
void cgtsv(integer *n, integer *nrhs, complex *dl, complex *d, complex *du, complex *b, integer *ldb, integer *info);
void cgtsvx(character *fact, character *trans, integer *n, integer *nrhs, complex *dl, complex *d, complex *du, complex *dlf, complex *df, complex *duf, complex *du2, integer *ipiv, complex *b, integer *ldb, complex *x, integer *ldx, real *rcond, real *ferr, real *berr, complex *work, real *rwork, integer *info, ftnlen factlen, ftnlen translen);
void cgttrf(integer *n, complex *dl, complex *d, complex *du, complex *du2, integer *ipiv, integer *info);
void cgttrs(character *trans, integer *n, integer *nrhs, complex *dl, complex *d, complex *du, complex *du2, integer *ipiv, complex *b, integer *ldb, integer *info, ftnlen translen);
void cgtts2(integer *itrans, integer *n, integer *nrhs, complex *dl, complex *d, complex *du, complex *du2, integer *ipiv, complex *b, integer *ldb);
void chbev(character *jobz, character *uplo, integer *n, integer *kd, complex *ab, integer *ldab, real *w, complex *z, integer *ldz, complex *work, real *rwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void chbevd(character *jobz, character *uplo, integer *n, integer *kd, complex *ab, integer *ldab, real *w, complex *z, integer *ldz, complex *work, integer *lwork, real *rwork, integer *lrwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void chbevx(character *jobz, character *range, character *uplo, integer *n, integer *kd, complex *ab, integer *ldab, complex *q, integer *ldq, real *vl, real *vu, integer *il, integer *iu, real *abstol, integer *m, real *w, complex *z, integer *ldz, complex *work, real *rwork, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void chbgst(character *vect, character *uplo, integer *n, integer *ka, integer *kb, complex *ab, integer *ldab, complex *bb, integer *ldbb, complex *x, integer *ldx, complex *work, real *rwork, integer *info, ftnlen vectlen, ftnlen uplolen);
void chbgv(character *jobz, character *uplo, integer *n, integer *ka, integer *kb, complex *ab, integer *ldab, complex *bb, integer *ldbb, real *w, complex *z, integer *ldz, complex *work, real *rwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void chbgvd(character *jobz, character *uplo, integer *n, integer *ka, integer *kb, complex *ab, integer *ldab, complex *bb, integer *ldbb, real *w, complex *z, integer *ldz, complex *work, integer *lwork, real *rwork, integer *lrwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void chbgvx(character *jobz, character *range, character *uplo, integer *n, integer *ka, integer *kb, complex *ab, integer *ldab, complex *bb, integer *ldbb, complex *q, integer *ldq, real *vl, real *vu, integer *il, integer *iu, real *abstol, integer *m, real *w, complex *z, integer *ldz, complex *work, real *rwork, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void chbtrd(character *vect, character *uplo, integer *n, integer *kd, complex *ab, integer *ldab, real *d, real *e, complex *q, integer *ldq, complex *work, integer *info, ftnlen vectlen, ftnlen uplolen);
void checon(character *uplo, integer *n, complex *a, integer *lda, integer *ipiv, real *anorm, real *rcond, complex *work, integer *info, ftnlen uplolen);
void cheev(character *jobz, character *uplo, integer *n, complex *a, integer *lda, real *w, complex *work, integer *lwork, real *rwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void cheevd(character *jobz, character *uplo, integer *n, complex *a, integer *lda, real *w, complex *work, integer *lwork, real *rwork, integer *lrwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void cheevr(character *jobz, character *range, character *uplo, integer *n, complex *a, integer *lda, real *vl, real *vu, integer *il, integer *iu, real *abstol, integer *m, real *w, complex *z, integer *ldz, integer *isuppz, complex *work, integer *lwork, real *rwork, integer *lrwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void cheevx(character *jobz, character *range, character *uplo, integer *n, complex *a, integer *lda, real *vl, real *vu, integer *il, integer *iu, real *abstol, integer *m, real *w, complex *z, integer *ldz, complex *work, integer *lwork, real *rwork, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void chegs2(integer *itype, character *uplo, integer *n, complex *a, integer *lda, complex *b, integer *ldb, integer *info, ftnlen uplolen);
void chegst(integer *itype, character *uplo, integer *n, complex *a, integer *lda, complex *b, integer *ldb, integer *info, ftnlen uplolen);
void chegv(integer *itype, character *jobz, character *uplo, integer *n, complex *a, integer *lda, complex *b, integer *ldb, real *w, complex *work, integer *lwork, real *rwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void chegvd(integer *itype, character *jobz, character *uplo, integer *n, complex *a, integer *lda, complex *b, integer *ldb, real *w, complex *work, integer *lwork, real *rwork, integer *lrwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void chegvx(integer *itype, character *jobz, character *range, character *uplo, integer *n, complex *a, integer *lda, complex *b, integer *ldb, real *vl, real *vu, integer *il, integer *iu, real *abstol, integer *m, real *w, complex *z, integer *ldz, complex *work, integer *lwork, real *rwork, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void cherfs(character *uplo, integer *n, integer *nrhs, complex *a, integer *lda, complex *af, integer *ldaf, integer *ipiv, complex *b, integer *ldb, complex *x, integer *ldx, real *ferr, real *berr, complex *work, real *rwork, integer *info, ftnlen uplolen);
void chesv(character *uplo, integer *n, integer *nrhs, complex *a, integer *lda, integer *ipiv, complex *b, integer *ldb, complex *work, integer *lwork, integer *info, ftnlen uplolen);
void chesvx(character *fact, character *uplo, integer *n, integer *nrhs, complex *a, integer *lda, complex *af, integer *ldaf, integer *ipiv, complex *b, integer *ldb, complex *x, integer *ldx, real *rcond, real *ferr, real *berr, complex *work, integer *lwork, real *rwork, integer *info, ftnlen factlen, ftnlen uplolen);
void chetd2(character *uplo, integer *n, complex *a, integer *lda, real *d, real *e, complex *tau, integer *info, ftnlen uplolen);
void chetf2(character *uplo, integer *n, complex *a, integer *lda, integer *ipiv, integer *info, ftnlen uplolen);
void chetrd(character *uplo, integer *n, complex *a, integer *lda, real *d, real *e, complex *tau, complex *work, integer *lwork, integer *info, ftnlen uplolen);
void chetrf(character *uplo, integer *n, complex *a, integer *lda, integer *ipiv, complex *work, integer *lwork, integer *info, ftnlen uplolen);
void chetri(character *uplo, integer *n, complex *a, integer *lda, integer *ipiv, complex *work, integer *info, ftnlen uplolen);
void chetrs(character *uplo, integer *n, integer *nrhs, complex *a, integer *lda, integer *ipiv, complex *b, integer *ldb, integer *info, ftnlen uplolen);
void chgeqz(character *job, character *compq, character *compz, integer *n, integer *ilo, integer *ihi, complex *a, integer *lda, complex *b, integer *ldb, complex *alpha, complex *beta, complex *q, integer *ldq, complex *z, integer *ldz, complex *work, integer *lwork, real *rwork, integer *info, ftnlen joblen, ftnlen compqlen, ftnlen compzlen);
void chpcon(character *uplo, integer *n, complex *ap, integer *ipiv, real *anorm, real *rcond, complex *work, integer *info, ftnlen uplolen);
void chpev(character *jobz, character *uplo, integer *n, complex *ap, real *w, complex *z, integer *ldz, complex *work, real *rwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void chpevd(character *jobz, character *uplo, integer *n, complex *ap, real *w, complex *z, integer *ldz, complex *work, integer *lwork, real *rwork, integer *lrwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void chpevx(character *jobz, character *range, character *uplo, integer *n, complex *ap, real *vl, real *vu, integer *il, integer *iu, real *abstol, integer *m, real *w, complex *z, integer *ldz, complex *work, real *rwork, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void chpgst(integer *itype, character *uplo, integer *n, complex *ap, complex *bp, integer *info, ftnlen uplolen);
void chpgv(integer *itype, character *jobz, character *uplo, integer *n, complex *ap, complex *bp, real *w, complex *z, integer *ldz, complex *work, real *rwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void chpgvd(integer *itype, character *jobz, character *uplo, integer *n, complex *ap, complex *bp, real *w, complex *z, integer *ldz, complex *work, integer *lwork, real *rwork, integer *lrwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void chpgvx(integer *itype, character *jobz, character *range, character *uplo, integer *n, complex *ap, complex *bp, real *vl, real *vu, integer *il, integer *iu, real *abstol, integer *m, real *w, complex *z, integer *ldz, complex *work, real *rwork, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void chprfs(character *uplo, integer *n, integer *nrhs, complex *ap, complex *afp, integer *ipiv, complex *b, integer *ldb, complex *x, integer *ldx, real *ferr, real *berr, complex *work, real *rwork, integer *info, ftnlen uplolen);
void chpsv(character *uplo, integer *n, integer *nrhs, complex *ap, integer *ipiv, complex *b, integer *ldb, integer *info, ftnlen uplolen);
void chpsvx(character *fact, character *uplo, integer *n, integer *nrhs, complex *ap, complex *afp, integer *ipiv, complex *b, integer *ldb, complex *x, integer *ldx, real *rcond, real *ferr, real *berr, complex *work, real *rwork, integer *info, ftnlen factlen, ftnlen uplolen);
void chptrd(character *uplo, integer *n, complex *ap, real *d, real *e, complex *tau, integer *info, ftnlen uplolen);
void chptrf(character *uplo, integer *n, complex *ap, integer *ipiv, integer *info, ftnlen uplolen);
void chptri(character *uplo, integer *n, complex *ap, integer *ipiv, complex *work, integer *info, ftnlen uplolen);
void chptrs(character *uplo, integer *n, integer *nrhs, complex *ap, integer *ipiv, complex *b, integer *ldb, integer *info, ftnlen uplolen);
void chsein(character *side, character *eigsrc, character *initv, logical *select, integer *n, complex *h, integer *ldh, complex *w, complex *vl, integer *ldvl, complex *vr, integer *ldvr, integer *mm, integer *m, complex *work, real *rwork, integer *ifaill, integer *ifailr, integer *info, ftnlen sidelen, ftnlen eigsrclen, ftnlen initvlen);
void chseqr(character *job, character *compz, integer *n, integer *ilo, integer *ihi, complex *h, integer *ldh, complex *w, complex *z, integer *ldz, complex *work, integer *lwork, integer *info, ftnlen joblen, ftnlen compzlen);
void clabrd(integer *m, integer *n, integer *nb, complex *a, integer *lda, real *d, real *e, complex *tauq, complex *taup, complex *x, integer *ldx, complex *y, integer *ldy);
void clacgv(integer *n, complex *x, integer *incx);
void clacon(integer *n, complex *v, complex *x, real *est, integer *kase);
void clacp2(character *uplo, integer *m, integer *n, real *a, integer *lda, complex *b, integer *ldb, ftnlen uplolen);
void clacpy(character *uplo, integer *m, integer *n, complex *a, integer *lda, complex *b, integer *ldb, ftnlen uplolen);
void clacrm(integer *m, integer *n, complex *a, integer *lda, real *b, integer *ldb, complex *c, integer *ldc, real *rwork);
void clacrt(integer *n, complex *cx, integer *incx, complex *cy, integer *incy, complex *c, complex *s);
extern complex cladiv(complex * retval, complex *x, complex *y);
void claed0(integer *qsiz, integer *n, real *d, real *e, complex *q, integer *ldq, complex *qstore, integer *ldqs, real *rwork, integer *iwork, integer *info);
void claed7(integer *n, integer *cutpnt, integer *qsiz, integer *tlvls, integer *curlvl, integer *curpbm, real *d, complex *q, integer *ldq, real *rho, integer *indxq, real *qstore, integer *qptr, integer *prmptr, integer *perm, integer *givptr, integer *givcol, real *givnum, complex *work, real *rwork, integer *iwork, integer *info);
void claed8(integer *k, integer *n, integer *qsiz, complex *q, integer *ldq, real *d, real *rho, integer *cutpnt, real *z, real *dlamda, complex *q2, integer *ldq2, real *w, integer *indxp, integer *indx, integer *indxq, integer *perm, integer *givptr, integer *givcol, real *givnum, integer *info);
void claein(logical *rightv, logical *noinit, integer *n, complex *h, integer *ldh, complex *w, complex *v, complex *b, integer *ldb, real *rwork, real *eps3, real *smlnum, integer *info);
void claesy(complex *a, complex *b, complex *c, complex *rt1, complex *rt2, complex *evscal, complex *cs1, complex *sn1);
void claev2(complex *a, complex *b, complex *c, real *rt1, real *rt2, real *cs1, complex *sn1);
void clags2(logical *upper, real *a1, complex *a2, real *a3, real *b1, complex *b2, real *b3, real *csu, complex *snu, real *csv, complex *snv, real *csq, complex *snq);
void clagtm(character *trans, integer *n, integer *nrhs, real *alpha, complex *dl, complex *d, complex *du, complex *x, integer *ldx, real *beta, complex *b, integer *ldb, ftnlen translen);
void clahef(character *uplo, integer *n, integer *nb, integer *kb, complex *a, integer *lda, integer *ipiv, complex *w, integer *ldw, integer *info, ftnlen uplolen);
void clahqr(logical *wantt, logical *wantz, integer *n, integer *ilo, integer *ihi, complex *h, integer *ldh, complex *w, integer *iloz, integer *ihiz, complex *z, integer *ldz, integer *info);
void clahrd(integer *n, integer *k, integer *nb, complex *a, integer *lda, complex *tau, complex *t, integer *ldt, complex *y, integer *ldy);
void claic1(integer *job, integer *j, complex *x, real *sest, complex *w, complex *gamma, real *sestpr, complex *s, complex *c);
void clals0(integer *icompq, integer *nl, integer *nr, integer *sqre, integer *nrhs, complex *b, integer *ldb, complex *bx, integer *ldbx, integer *perm, integer *givptr, integer *givcol, integer *ldgcol, real *givnum, integer *ldgnum, real *poles, real *difl, real *difr, real *z, integer *k, real *c, real *s, real *rwork, integer *info);
void clalsa(integer *icompq, integer *smlsiz, integer *n, integer *nrhs, complex *b, integer *ldb, complex *bx, integer *ldbx, real *u, integer *ldu, real *vt, integer *k, real *difl, real *difr, real *z, real *poles, integer *givptr, integer *givcol, integer *ldgcol, integer *perm, real *givnum, real *c, real *s, real *rwork, integer *iwork, integer *info);
void clalsd(character *uplo, integer *smlsiz, integer *n, integer *nrhs, real *d, real *e, complex *b, integer *ldb, real *rcond, integer *rank, complex *work, real *rwork, integer *iwork, integer *info, ftnlen uplolen);
extern real clangb(character *norm, integer *n, integer *kl, integer *ku, complex *ab, integer *ldab, real *work, ftnlen normlen);
extern real clange(character *norm, integer *m, integer *n, complex *a, integer *lda, real *work, ftnlen normlen);
extern real clangt(character *norm, integer *n, complex *dl, complex *d, complex *du, ftnlen normlen);
extern real clanhb(character *norm, character *uplo, integer *n, integer *k, complex *ab, integer *ldab, real *work, ftnlen normlen, ftnlen uplolen);
extern real clanhe(character *norm, character *uplo, integer *n, complex *a, integer *lda, real *work, ftnlen normlen, ftnlen uplolen);
extern real clanhp(character *norm, character *uplo, integer *n, complex *ap, real *work, ftnlen normlen, ftnlen uplolen);
extern real clanhs(character *norm, integer *n, complex *a, integer *lda, real *work, ftnlen normlen);
extern real clanht(character *norm, integer *n, real *d, complex *e, ftnlen normlen);
extern real clansb(character *norm, character *uplo, integer *n, integer *k, complex *ab, integer *ldab, real *work, ftnlen normlen, ftnlen uplolen);
extern real clansp(character *norm, character *uplo, integer *n, complex *ap, real *work, ftnlen normlen, ftnlen uplolen);
extern real clansy(character *norm, character *uplo, integer *n, complex *a, integer *lda, real *work, ftnlen normlen, ftnlen uplolen);
extern real clantb(character *norm, character *uplo, character *diag, integer *n, integer *k, complex *ab, integer *ldab, real *work, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
extern real clantp(character *norm, character *uplo, character *diag, integer *n, complex *ap, real *work, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
extern real clantr(character *norm, character *uplo, character *diag, integer *m, integer *n, complex *a, integer *lda, real *work, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
void clapll(integer *n, complex *x, integer *incx, complex *y, integer *incy, real *ssmin);
void clapmt(logical *forwrd, integer *m, integer *n, complex *x, integer *ldx, integer *k);
void claqgb(integer *m, integer *n, integer *kl, integer *ku, complex *ab, integer *ldab, real *r, real *c, real *rowcnd, real *colcnd, real *amax, character *equed, ftnlen equedlen);
void claqge(integer *m, integer *n, complex *a, integer *lda, real *r, real *c, real *rowcnd, real *colcnd, real *amax, character *equed, ftnlen equedlen);
void claqhb(character *uplo, integer *n, integer *kd, complex *ab, integer *ldab, real *s, real *scond, real *amax, character *equed, ftnlen uplolen, ftnlen equedlen);
void claqhe(character *uplo, integer *n, complex *a, integer *lda, real *s, real *scond, real *amax, character *equed, ftnlen uplolen, ftnlen equedlen);
void claqhp(character *uplo, integer *n, complex *ap, real *s, real *scond, real *amax, character *equed, ftnlen uplolen, ftnlen equedlen);
void claqp2(integer *m, integer *n, integer *offset, complex *a, integer *lda, integer *jpvt, complex *tau, real *vn1, real *vn2, complex *work);
void claqps(integer *m, integer *n, integer *offset, integer *nb, integer *kb, complex *a, integer *lda, integer *jpvt, complex *tau, real *vn1, real *vn2, complex *auxv, complex *f, integer *ldf);
void claqsb(character *uplo, integer *n, integer *kd, complex *ab, integer *ldab, real *s, real *scond, real *amax, character *equed, ftnlen uplolen, ftnlen equedlen);
void claqsp(character *uplo, integer *n, complex *ap, real *s, real *scond, real *amax, character *equed, ftnlen uplolen, ftnlen equedlen);
void claqsy(character *uplo, integer *n, complex *a, integer *lda, real *s, real *scond, real *amax, character *equed, ftnlen uplolen, ftnlen equedlen);
void clar1v(integer *n, integer *b1, integer *bn, real *sigma, real *d, real *l, real *ld, real *lld, real *gersch, complex *z, real *ztz, real *mingma, integer *r, integer *isuppz, real *work);
void clar2v(integer *n, complex *x, complex *y, complex *z, integer *incx, real *c, complex *s, integer *incc);
void clarcm(integer *m, integer *n, real *a, integer *lda, complex *b, integer *ldb, complex *c, integer *ldc, real *rwork);
void clarf(character *side, integer *m, integer *n, complex *v, integer *incv, complex *tau, complex *c, integer *ldc, complex *work, ftnlen sidelen);
void clarfb(character *side, character *trans, character *direct, character *storev, integer *m, integer *n, integer *k, complex *v, integer *ldv, complex *t, integer *ldt, complex *c, integer *ldc, complex *work, integer *ldwork, ftnlen sidelen, ftnlen translen, ftnlen directlen, ftnlen storevlen);
void clarfg(integer *n, complex *alpha, complex *x, integer *incx, complex *tau);
void clarft(character *direct, character *storev, integer *n, integer *k, complex *v, integer *ldv, complex *tau, complex *t, integer *ldt, ftnlen directlen, ftnlen storevlen);
void clarfx(character *side, integer *m, integer *n, complex *v, complex *tau, complex *c, integer *ldc, complex *work, ftnlen sidelen);
void clargv(integer *n, complex *x, integer *incx, complex *y, integer *incy, real *c, integer *incc);
void clarnv(integer *idist, integer *iseed, integer *n, complex *x);
void clarrv(integer *n, real *d, real *l, integer *isplit, integer *m, real *w, integer *iblock, real *gersch, real *tol, complex *z, integer *ldz, integer *isuppz, real *work, integer *iwork, integer *info);
void clartg(complex *f, complex *g, real *cs, complex *sn, complex *r);
void clartv(integer *n, complex *x, integer *incx, complex *y, integer *incy, real *c, complex *s, integer *incc);
void clarz(character *side, integer *m, integer *n, integer *l, complex *v, integer *incv, complex *tau, complex *c, integer *ldc, complex *work, ftnlen sidelen);
void clarzb(character *side, character *trans, character *direct, character *storev, integer *m, integer *n, integer *k, integer *l, complex *v, integer *ldv, complex *t, integer *ldt, complex *c, integer *ldc, complex *work, integer *ldwork, ftnlen sidelen, ftnlen translen, ftnlen directlen, ftnlen storevlen);
void clarzt(character *direct, character *storev, integer *n, integer *k, complex *v, integer *ldv, complex *tau, complex *t, integer *ldt, ftnlen directlen, ftnlen storevlen);
void clascl(character *type, integer *kl, integer *ku, real *cfrom, real *cto, integer *m, integer *n, complex *a, integer *lda, integer *info, ftnlen typelen);
void claset(character *uplo, integer *m, integer *n, complex *alpha, complex *beta, complex *a, integer *lda, ftnlen uplolen);
void clasr(character *side, character *pivot, character *direct, integer *m, integer *n, real *c, real *s, complex *a, integer *lda, ftnlen sidelen, ftnlen pivotlen, ftnlen directlen);
void classq(integer *n, complex *x, integer *incx, real *scale, real *sumsq);
void claswp(integer *n, complex *a, integer *lda, integer *k1, integer *k2, integer *ipiv, integer *incx);
void clasyf(character *uplo, integer *n, integer *nb, integer *kb, complex *a, integer *lda, integer *ipiv, complex *w, integer *ldw, integer *info, ftnlen uplolen);
void clatbs(character *uplo, character *trans, character *diag, character *normin, integer *n, integer *kd, complex *ab, integer *ldab, complex *x, real *scale, real *cnorm, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen, ftnlen norminlen);
void clatdf(integer *ijob, integer *n, complex *z, integer *ldz, complex *rhs, real *rdsum, real *rdscal, integer *ipiv, integer *jpiv);
void clatps(character *uplo, character *trans, character *diag, character *normin, integer *n, complex *ap, complex *x, real *scale, real *cnorm, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen, ftnlen norminlen);
void clatrd(character *uplo, integer *n, integer *nb, complex *a, integer *lda, real *e, complex *tau, complex *w, integer *ldw, ftnlen uplolen);
void clatrs(character *uplo, character *trans, character *diag, character *normin, integer *n, complex *a, integer *lda, complex *x, real *scale, real *cnorm, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen, ftnlen norminlen);
void clatrz(integer *m, integer *n, integer *l, complex *a, integer *lda, complex *tau, complex *work);
void clatzm(character *side, integer *m, integer *n, complex *v, integer *incv, complex *tau, complex *c1, complex *c2, integer *ldc, complex *work, ftnlen sidelen);
void clauu2(character *uplo, integer *n, complex *a, integer *lda, integer *info, ftnlen uplolen);
void clauum(character *uplo, integer *n, complex *a, integer *lda, integer *info, ftnlen uplolen);
void cpbcon(character *uplo, integer *n, integer *kd, complex *ab, integer *ldab, real *anorm, real *rcond, complex *work, real *rwork, integer *info, ftnlen uplolen);
void cpbequ(character *uplo, integer *n, integer *kd, complex *ab, integer *ldab, real *s, real *scond, real *amax, integer *info, ftnlen uplolen);
void cpbrfs(character *uplo, integer *n, integer *kd, integer *nrhs, complex *ab, integer *ldab, complex *afb, integer *ldafb, complex *b, integer *ldb, complex *x, integer *ldx, real *ferr, real *berr, complex *work, real *rwork, integer *info, ftnlen uplolen);
void cpbstf(character *uplo, integer *n, integer *kd, complex *ab, integer *ldab, integer *info, ftnlen uplolen);
void cpbsv(character *uplo, integer *n, integer *kd, integer *nrhs, complex *ab, integer *ldab, complex *b, integer *ldb, integer *info, ftnlen uplolen);
void cpbsvx(character *fact, character *uplo, integer *n, integer *kd, integer *nrhs, complex *ab, integer *ldab, complex *afb, integer *ldafb, character *equed, real *s, complex *b, integer *ldb, complex *x, integer *ldx, real *rcond, real *ferr, real *berr, complex *work, real *rwork, integer *info, ftnlen factlen, ftnlen uplolen, ftnlen equedlen);
void cpbtf2(character *uplo, integer *n, integer *kd, complex *ab, integer *ldab, integer *info, ftnlen uplolen);
void cpbtrf(character *uplo, integer *n, integer *kd, complex *ab, integer *ldab, integer *info, ftnlen uplolen);
void cpbtrs(character *uplo, integer *n, integer *kd, integer *nrhs, complex *ab, integer *ldab, complex *b, integer *ldb, integer *info, ftnlen uplolen);
void cpocon(character *uplo, integer *n, complex *a, integer *lda, real *anorm, real *rcond, complex *work, real *rwork, integer *info, ftnlen uplolen);
void cpoequ(integer *n, complex *a, integer *lda, real *s, real *scond, real *amax, integer *info);
void cporfs(character *uplo, integer *n, integer *nrhs, complex *a, integer *lda, complex *af, integer *ldaf, complex *b, integer *ldb, complex *x, integer *ldx, real *ferr, real *berr, complex *work, real *rwork, integer *info, ftnlen uplolen);
void cposv(character *uplo, integer *n, integer *nrhs, complex *a, integer *lda, complex *b, integer *ldb, integer *info, ftnlen uplolen);
void cposvx(character *fact, character *uplo, integer *n, integer *nrhs, complex *a, integer *lda, complex *af, integer *ldaf, character *equed, real *s, complex *b, integer *ldb, complex *x, integer *ldx, real *rcond, real *ferr, real *berr, complex *work, real *rwork, integer *info, ftnlen factlen, ftnlen uplolen, ftnlen equedlen);
void cpotf2(character *uplo, integer *n, complex *a, integer *lda, integer *info, ftnlen uplolen);
void cpotrf(character *uplo, integer *n, complex *a, integer *lda, integer *info, ftnlen uplolen);
void cpotri(character *uplo, integer *n, complex *a, integer *lda, integer *info, ftnlen uplolen);
void cpotrs(character *uplo, integer *n, integer *nrhs, complex *a, integer *lda, complex *b, integer *ldb, integer *info, ftnlen uplolen);
void cppcon(character *uplo, integer *n, complex *ap, real *anorm, real *rcond, complex *work, real *rwork, integer *info, ftnlen uplolen);
void cppequ(character *uplo, integer *n, complex *ap, real *s, real *scond, real *amax, integer *info, ftnlen uplolen);
void cpprfs(character *uplo, integer *n, integer *nrhs, complex *ap, complex *afp, complex *b, integer *ldb, complex *x, integer *ldx, real *ferr, real *berr, complex *work, real *rwork, integer *info, ftnlen uplolen);
void cppsv(character *uplo, integer *n, integer *nrhs, complex *ap, complex *b, integer *ldb, integer *info, ftnlen uplolen);
void cppsvx(character *fact, character *uplo, integer *n, integer *nrhs, complex *ap, complex *afp, character *equed, real *s, complex *b, integer *ldb, complex *x, integer *ldx, real *rcond, real *ferr, real *berr, complex *work, real *rwork, integer *info, ftnlen factlen, ftnlen uplolen, ftnlen equedlen);
void cpptrf(character *uplo, integer *n, complex *ap, integer *info, ftnlen uplolen);
void cpptri(character *uplo, integer *n, complex *ap, integer *info, ftnlen uplolen);
void cpptrs(character *uplo, integer *n, integer *nrhs, complex *ap, complex *b, integer *ldb, integer *info, ftnlen uplolen);
void cptcon(integer *n, real *d, complex *e, real *anorm, real *rcond, real *rwork, integer *info);
void cpteqr(character *compz, integer *n, real *d, real *e, complex *z, integer *ldz, real *work, integer *info, ftnlen compzlen);
void cptrfs(character *uplo, integer *n, integer *nrhs, real *d, complex *e, real *df, complex *ef, complex *b, integer *ldb, complex *x, integer *ldx, real *ferr, real *berr, complex *work, real *rwork, integer *info, ftnlen uplolen);
void cptsv(integer *n, integer *nrhs, real *d, complex *e, complex *b, integer *ldb, integer *info);
void cptsvx(character *fact, integer *n, integer *nrhs, real *d, complex *e, real *df, complex *ef, complex *b, integer *ldb, complex *x, integer *ldx, real *rcond, real *ferr, real *berr, complex *work, real *rwork, integer *info, ftnlen factlen);
void cpttrf(integer *n, real *d, complex *e, integer *info);
void cpttrs(character *uplo, integer *n, integer *nrhs, real *d, complex *e, complex *b, integer *ldb, integer *info, ftnlen uplolen);
void cptts2(integer *iuplo, integer *n, integer *nrhs, real *d, complex *e, complex *b, integer *ldb);
void crot(integer *n, complex *cx, integer *incx, complex *cy, integer *incy, real *c, complex *s);
void cspcon(character *uplo, integer *n, complex *ap, integer *ipiv, real *anorm, real *rcond, complex *work, integer *info, ftnlen uplolen);
void cspmv(character *uplo, integer *n, complex *alpha, complex *ap, complex *x, integer *incx, complex *beta, complex *y, integer *incy, ftnlen uplolen);
void cspr(character *uplo, integer *n, complex *alpha, complex *x, integer *incx, complex *ap, ftnlen uplolen);
void csprfs(character *uplo, integer *n, integer *nrhs, complex *ap, complex *afp, integer *ipiv, complex *b, integer *ldb, complex *x, integer *ldx, real *ferr, real *berr, complex *work, real *rwork, integer *info, ftnlen uplolen);
void cspsv(character *uplo, integer *n, integer *nrhs, complex *ap, integer *ipiv, complex *b, integer *ldb, integer *info, ftnlen uplolen);
void cspsvx(character *fact, character *uplo, integer *n, integer *nrhs, complex *ap, complex *afp, integer *ipiv, complex *b, integer *ldb, complex *x, integer *ldx, real *rcond, real *ferr, real *berr, complex *work, real *rwork, integer *info, ftnlen factlen, ftnlen uplolen);
void csptrf(character *uplo, integer *n, complex *ap, integer *ipiv, integer *info, ftnlen uplolen);
void csptri(character *uplo, integer *n, complex *ap, integer *ipiv, complex *work, integer *info, ftnlen uplolen);
void csptrs(character *uplo, integer *n, integer *nrhs, complex *ap, integer *ipiv, complex *b, integer *ldb, integer *info, ftnlen uplolen);
void csrot(integer *n, complex *cx, integer *incx, complex *cy, integer *incy, real *c, real *s);
void csrscl(integer *n, real *sa, complex *sx, integer *incx);
void cstedc(character *compz, integer *n, real *d, real *e, complex *z, integer *ldz, complex *work, integer *lwork, real *rwork, integer *lrwork, integer *iwork, integer *liwork, integer *info, ftnlen compzlen);
void cstegr(character *jobz, character *range, integer *n, real *d, real *e, real *vl, real *vu, integer *il, integer *iu, real *abstol, integer *m, real *w, complex *z, integer *ldz, integer *isuppz, real *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen rangelen);
void cstein(integer *n, real *d, real *e, integer *m, real *w, integer *iblock, integer *isplit, complex *z, integer *ldz, real *work, integer *iwork, integer *ifail, integer *info);
void csteqr(character *compz, integer *n, real *d, real *e, complex *z, integer *ldz, real *work, integer *info, ftnlen compzlen);
void csycon(character *uplo, integer *n, complex *a, integer *lda, integer *ipiv, real *anorm, real *rcond, complex *work, integer *info, ftnlen uplolen);
void csymv(character *uplo, integer *n, complex *alpha, complex *a, integer *lda, complex *x, integer *incx, complex *beta, complex *y, integer *incy, ftnlen uplolen);
void csyr(character *uplo, integer *n, complex *alpha, complex *x, integer *incx, complex *a, integer *lda, ftnlen uplolen);
void csyrfs(character *uplo, integer *n, integer *nrhs, complex *a, integer *lda, complex *af, integer *ldaf, integer *ipiv, complex *b, integer *ldb, complex *x, integer *ldx, real *ferr, real *berr, complex *work, real *rwork, integer *info, ftnlen uplolen);
void csysv(character *uplo, integer *n, integer *nrhs, complex *a, integer *lda, integer *ipiv, complex *b, integer *ldb, complex *work, integer *lwork, integer *info, ftnlen uplolen);
void csysvx(character *fact, character *uplo, integer *n, integer *nrhs, complex *a, integer *lda, complex *af, integer *ldaf, integer *ipiv, complex *b, integer *ldb, complex *x, integer *ldx, real *rcond, real *ferr, real *berr, complex *work, integer *lwork, real *rwork, integer *info, ftnlen factlen, ftnlen uplolen);
void csytf2(character *uplo, integer *n, complex *a, integer *lda, integer *ipiv, integer *info, ftnlen uplolen);
void csytrf(character *uplo, integer *n, complex *a, integer *lda, integer *ipiv, complex *work, integer *lwork, integer *info, ftnlen uplolen);
void csytri(character *uplo, integer *n, complex *a, integer *lda, integer *ipiv, complex *work, integer *info, ftnlen uplolen);
void csytrs(character *uplo, integer *n, integer *nrhs, complex *a, integer *lda, integer *ipiv, complex *b, integer *ldb, integer *info, ftnlen uplolen);
void ctbcon(character *norm, character *uplo, character *diag, integer *n, integer *kd, complex *ab, integer *ldab, real *rcond, complex *work, real *rwork, integer *info, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
void ctbrfs(character *uplo, character *trans, character *diag, integer *n, integer *kd, integer *nrhs, complex *ab, integer *ldab, complex *b, integer *ldb, complex *x, integer *ldx, real *ferr, real *berr, complex *work, real *rwork, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void ctbtrs(character *uplo, character *trans, character *diag, integer *n, integer *kd, integer *nrhs, complex *ab, integer *ldab, complex *b, integer *ldb, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void ctgevc(character *side, character *howmny, logical *select, integer *n, complex *a, integer *lda, complex *b, integer *ldb, complex *vl, integer *ldvl, complex *vr, integer *ldvr, integer *mm, integer *m, complex *work, real *rwork, integer *info, ftnlen sidelen, ftnlen howmnylen);
void ctgex2(logical *wantq, logical *wantz, integer *n, complex *a, integer *lda, complex *b, integer *ldb, complex *q, integer *ldq, complex *z, integer *ldz, integer *j1, integer *info);
void ctgexc(logical *wantq, logical *wantz, integer *n, complex *a, integer *lda, complex *b, integer *ldb, complex *q, integer *ldq, complex *z, integer *ldz, integer *ifst, integer *ilst, integer *info);
void ctgsen(integer *ijob, logical *wantq, logical *wantz, logical *select, integer *n, complex *a, integer *lda, complex *b, integer *ldb, complex *alpha, complex *beta, complex *q, integer *ldq, complex *z, integer *ldz, integer *m, real *pl, real *pr, real *dif, complex *work, integer *lwork, integer *iwork, integer *liwork, integer *info);
void ctgsja(character *jobu, character *jobv, character *jobq, integer *m, integer *p, integer *n, integer *k, integer *l, complex *a, integer *lda, complex *b, integer *ldb, real *tola, real *tolb, real *alpha, real *beta, complex *u, integer *ldu, complex *v, integer *ldv, complex *q, integer *ldq, complex *work, integer *ncycle, integer *info, ftnlen jobulen, ftnlen jobvlen, ftnlen jobqlen);
void ctgsna(character *job, character *howmny, logical *select, integer *n, complex *a, integer *lda, complex *b, integer *ldb, complex *vl, integer *ldvl, complex *vr, integer *ldvr, real *s, real *dif, integer *mm, integer *m, complex *work, integer *lwork, integer *iwork, integer *info, ftnlen joblen, ftnlen howmnylen);
void ctgsy2(character *trans, integer *ijob, integer *m, integer *n, complex *a, integer *lda, complex *b, integer *ldb, complex *c, integer *ldc, complex *d, integer *ldd, complex *e, integer *lde, complex *f, integer *ldf, real *scale, real *rdsum, real *rdscal, integer *info, ftnlen translen);
void ctgsyl(character *trans, integer *ijob, integer *m, integer *n, complex *a, integer *lda, complex *b, integer *ldb, complex *c, integer *ldc, complex *d, integer *ldd, complex *e, integer *lde, complex *f, integer *ldf, real *scale, real *dif, complex *work, integer *lwork, integer *iwork, integer *info, ftnlen translen);
void ctpcon(character *norm, character *uplo, character *diag, integer *n, complex *ap, real *rcond, complex *work, real *rwork, integer *info, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
void ctprfs(character *uplo, character *trans, character *diag, integer *n, integer *nrhs, complex *ap, complex *b, integer *ldb, complex *x, integer *ldx, real *ferr, real *berr, complex *work, real *rwork, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void ctptri(character *uplo, character *diag, integer *n, complex *ap, integer *info, ftnlen uplolen, ftnlen diaglen);
void ctptrs(character *uplo, character *trans, character *diag, integer *n, integer *nrhs, complex *ap, complex *b, integer *ldb, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void ctrcon(character *norm, character *uplo, character *diag, integer *n, complex *a, integer *lda, real *rcond, complex *work, real *rwork, integer *info, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
void ctrevc(character *side, character *howmny, logical *select, integer *n, complex *t, integer *ldt, complex *vl, integer *ldvl, complex *vr, integer *ldvr, integer *mm, integer *m, complex *work, real *rwork, integer *info, ftnlen sidelen, ftnlen howmnylen);
void ctrexc(character *compq, integer *n, complex *t, integer *ldt, complex *q, integer *ldq, integer *ifst, integer *ilst, integer *info, ftnlen compqlen);
void ctrrfs(character *uplo, character *trans, character *diag, integer *n, integer *nrhs, complex *a, integer *lda, complex *b, integer *ldb, complex *x, integer *ldx, real *ferr, real *berr, complex *work, real *rwork, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void ctrsen(character *job, character *compq, logical *select, integer *n, complex *t, integer *ldt, complex *q, integer *ldq, complex *w, integer *m, real *s, real *sep, complex *work, integer *lwork, integer *info, ftnlen joblen, ftnlen compqlen);
void ctrsna(character *job, character *howmny, logical *select, integer *n, complex *t, integer *ldt, complex *vl, integer *ldvl, complex *vr, integer *ldvr, real *s, real *sep, integer *mm, integer *m, complex *work, integer *ldwork, real *rwork, integer *info, ftnlen joblen, ftnlen howmnylen);
void ctrsyl(character *trana, character *tranb, integer *isgn, integer *m, integer *n, complex *a, integer *lda, complex *b, integer *ldb, complex *c, integer *ldc, real *scale, integer *info, ftnlen tranalen, ftnlen tranblen);
void ctrti2(character *uplo, character *diag, integer *n, complex *a, integer *lda, integer *info, ftnlen uplolen, ftnlen diaglen);
void ctrtri(character *uplo, character *diag, integer *n, complex *a, integer *lda, integer *info, ftnlen uplolen, ftnlen diaglen);
void ctrtrs(character *uplo, character *trans, character *diag, integer *n, integer *nrhs, complex *a, integer *lda, complex *b, integer *ldb, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void ctzrqf(integer *m, integer *n, complex *a, integer *lda, complex *tau, integer *info);
void ctzrzf(integer *m, integer *n, complex *a, integer *lda, complex *tau, complex *work, integer *lwork, integer *info);
void cung2l(integer *m, integer *n, integer *k, complex *a, integer *lda, complex *tau, complex *work, integer *info);
void cung2r(integer *m, integer *n, integer *k, complex *a, integer *lda, complex *tau, complex *work, integer *info);
void cungbr(character *vect, integer *m, integer *n, integer *k, complex *a, integer *lda, complex *tau, complex *work, integer *lwork, integer *info, ftnlen vectlen);
void cunghr(integer *n, integer *ilo, integer *ihi, complex *a, integer *lda, complex *tau, complex *work, integer *lwork, integer *info);
void cungl2(integer *m, integer *n, integer *k, complex *a, integer *lda, complex *tau, complex *work, integer *info);
void cunglq(integer *m, integer *n, integer *k, complex *a, integer *lda, complex *tau, complex *work, integer *lwork, integer *info);
void cungql(integer *m, integer *n, integer *k, complex *a, integer *lda, complex *tau, complex *work, integer *lwork, integer *info);
void cungqr(integer *m, integer *n, integer *k, complex *a, integer *lda, complex *tau, complex *work, integer *lwork, integer *info);
void cungr2(integer *m, integer *n, integer *k, complex *a, integer *lda, complex *tau, complex *work, integer *info);
void cungrq(integer *m, integer *n, integer *k, complex *a, integer *lda, complex *tau, complex *work, integer *lwork, integer *info);
void cungtr(character *uplo, integer *n, complex *a, integer *lda, complex *tau, complex *work, integer *lwork, integer *info, ftnlen uplolen);
void cunm2l(character *side, character *trans, integer *m, integer *n, integer *k, complex *a, integer *lda, complex *tau, complex *c, integer *ldc, complex *work, integer *info, ftnlen sidelen, ftnlen translen);
void cunm2r(character *side, character *trans, integer *m, integer *n, integer *k, complex *a, integer *lda, complex *tau, complex *c, integer *ldc, complex *work, integer *info, ftnlen sidelen, ftnlen translen);
void cunmbr(character *vect, character *side, character *trans, integer *m, integer *n, integer *k, complex *a, integer *lda, complex *tau, complex *c, integer *ldc, complex *work, integer *lwork, integer *info, ftnlen vectlen, ftnlen sidelen, ftnlen translen);
void cunmhr(character *side, character *trans, integer *m, integer *n, integer *ilo, integer *ihi, complex *a, integer *lda, complex *tau, complex *c, integer *ldc, complex *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void cunml2(character *side, character *trans, integer *m, integer *n, integer *k, complex *a, integer *lda, complex *tau, complex *c, integer *ldc, complex *work, integer *info, ftnlen sidelen, ftnlen translen);
void cunmlq(character *side, character *trans, integer *m, integer *n, integer *k, complex *a, integer *lda, complex *tau, complex *c, integer *ldc, complex *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void cunmql(character *side, character *trans, integer *m, integer *n, integer *k, complex *a, integer *lda, complex *tau, complex *c, integer *ldc, complex *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void cunmqr(character *side, character *trans, integer *m, integer *n, integer *k, complex *a, integer *lda, complex *tau, complex *c, integer *ldc, complex *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void cunmr2(character *side, character *trans, integer *m, integer *n, integer *k, complex *a, integer *lda, complex *tau, complex *c, integer *ldc, complex *work, integer *info, ftnlen sidelen, ftnlen translen);
void cunmr3(character *side, character *trans, integer *m, integer *n, integer *k, integer *l, complex *a, integer *lda, complex *tau, complex *c, integer *ldc, complex *work, integer *info, ftnlen sidelen, ftnlen translen);
void cunmrq(character *side, character *trans, integer *m, integer *n, integer *k, complex *a, integer *lda, complex *tau, complex *c, integer *ldc, complex *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void cunmrz(character *side, character *trans, integer *m, integer *n, integer *k, integer *l, complex *a, integer *lda, complex *tau, complex *c, integer *ldc, complex *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void cunmtr(character *side, character *uplo, character *trans, integer *m, integer *n, complex *a, integer *lda, complex *tau, complex *c, integer *ldc, complex *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen uplolen, ftnlen translen);
void cupgtr(character *uplo, integer *n, complex *ap, complex *tau, complex *q, integer *ldq, complex *work, integer *info, ftnlen uplolen);
void cupmtr(character *side, character *uplo, character *trans, integer *m, integer *n, complex *ap, complex *tau, complex *c, integer *ldc, complex *work, integer *info, ftnlen sidelen, ftnlen uplolen, ftnlen translen);
void dbdsdc(character *uplo, character *compq, integer *n, doubleprecision *d, doubleprecision *e, doubleprecision *u, integer *ldu, doubleprecision *vt, integer *ldvt, doubleprecision *q, integer *iq, doubleprecision *work, integer *iwork, integer *info, ftnlen uplolen, ftnlen compqlen);
void dbdsqr(character *uplo, integer *n, integer *ncvt, integer *nru, integer *ncc, doubleprecision *d, doubleprecision *e, doubleprecision *vt, integer *ldvt, doubleprecision *u, integer *ldu, doubleprecision *c, integer *ldc, doubleprecision *work, integer *info, ftnlen uplolen);
void ddisna(character *job, integer *m, integer *n, doubleprecision *d, doubleprecision *sep, integer *info, ftnlen joblen);
void dgbbrd(character *vect, integer *m, integer *n, integer *ncc, integer *kl, integer *ku, doubleprecision *ab, integer *ldab, doubleprecision *d, doubleprecision *e, doubleprecision *q, integer *ldq, doubleprecision *pt, integer *ldpt, doubleprecision *c, integer *ldc, doubleprecision *work, integer *info, ftnlen vectlen);
void dgbcon(character *norm, integer *n, integer *kl, integer *ku, doubleprecision *ab, integer *ldab, integer *ipiv, doubleprecision *anorm, doubleprecision *rcond, doubleprecision *work, integer *iwork, integer *info, ftnlen normlen);
void dgbequ(integer *m, integer *n, integer *kl, integer *ku, doubleprecision *ab, integer *ldab, doubleprecision *r, doubleprecision *c, doubleprecision *rowcnd, doubleprecision *colcnd, doubleprecision *amax, integer *info);
void dgbrfs(character *trans, integer *n, integer *kl, integer *ku, integer *nrhs, doubleprecision *ab, integer *ldab, doubleprecision *afb, integer *ldafb, integer *ipiv, doubleprecision *b, integer *ldb, doubleprecision *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, doubleprecision *work, integer *iwork, integer *info, ftnlen translen);
void dgbsv(integer *n, integer *kl, integer *ku, integer *nrhs, doubleprecision *ab, integer *ldab, integer *ipiv, doubleprecision *b, integer *ldb, integer *info);
void dgbsvx(character *fact, character *trans, integer *n, integer *kl, integer *ku, integer *nrhs, doubleprecision *ab, integer *ldab, doubleprecision *afb, integer *ldafb, integer *ipiv, character *equed, doubleprecision *r, doubleprecision *c, doubleprecision *b, integer *ldb, doubleprecision *x, integer *ldx, doubleprecision *rcond, doubleprecision *ferr, doubleprecision *berr, doubleprecision *work, integer *iwork, integer *info, ftnlen factlen, ftnlen translen, ftnlen equedlen);
void dgbtf2(integer *m, integer *n, integer *kl, integer *ku, doubleprecision *ab, integer *ldab, integer *ipiv, integer *info);
void dgbtrf(integer *m, integer *n, integer *kl, integer *ku, doubleprecision *ab, integer *ldab, integer *ipiv, integer *info);
void dgbtrs(character *trans, integer *n, integer *kl, integer *ku, integer *nrhs, doubleprecision *ab, integer *ldab, integer *ipiv, doubleprecision *b, integer *ldb, integer *info, ftnlen translen);
void dgebak(character *job, character *side, integer *n, integer *ilo, integer *ihi, doubleprecision *scale, integer *m, doubleprecision *v, integer *ldv, integer *info, ftnlen joblen, ftnlen sidelen);
void dgebal(character *job, integer *n, doubleprecision *a, integer *lda, integer *ilo, integer *ihi, doubleprecision *scale, integer *info, ftnlen joblen);
void dgebd2(integer *m, integer *n, doubleprecision *a, integer *lda, doubleprecision *d, doubleprecision *e, doubleprecision *tauq, doubleprecision *taup, doubleprecision *work, integer *info);
void dgebrd(integer *m, integer *n, doubleprecision *a, integer *lda, doubleprecision *d, doubleprecision *e, doubleprecision *tauq, doubleprecision *taup, doubleprecision *work, integer *lwork, integer *info);
void dgecon(character *norm, integer *n, doubleprecision *a, integer *lda, doubleprecision *anorm, doubleprecision *rcond, doubleprecision *work, integer *iwork, integer *info, ftnlen normlen);
void dgeequ(integer *m, integer *n, doubleprecision *a, integer *lda, doubleprecision *r, doubleprecision *c, doubleprecision *rowcnd, doubleprecision *colcnd, doubleprecision *amax, integer *info);
void dgees(character *jobvs, character *sort, logical (*select)(doubleprecision *a, doubleprecision *b), integer *n, doubleprecision *a, integer *lda, integer *sdim, doubleprecision *wr, doubleprecision *wi, doubleprecision *vs, integer *ldvs, doubleprecision *work, integer *lwork, logical *bwork, integer *info, ftnlen jobvslen, ftnlen sortlen);
void dgeesx(character *jobvs, character *sort, logical (*select)(doubleprecision *a, doubleprecision *b), character *sense, integer *n, doubleprecision *a, integer *lda, integer *sdim, doubleprecision *wr, doubleprecision *wi, doubleprecision *vs, integer *ldvs, doubleprecision *rconde, doubleprecision *rcondv, doubleprecision *work, integer *lwork, integer *iwork, integer *liwork, logical *bwork, integer *info, ftnlen jobvslen, ftnlen sortlen, ftnlen senselen);
void dgeev(character *jobvl, character *jobvr, integer *n, doubleprecision *a, integer *lda, doubleprecision *wr, doubleprecision *wi, doubleprecision *vl, integer *ldvl, doubleprecision *vr, integer *ldvr, doubleprecision *work, integer *lwork, integer *info, ftnlen jobvllen, ftnlen jobvrlen);
void dgeevx(character *balanc, character *jobvl, character *jobvr, character *sense, integer *n, doubleprecision *a, integer *lda, doubleprecision *wr, doubleprecision *wi, doubleprecision *vl, integer *ldvl, doubleprecision *vr, integer *ldvr, integer *ilo, integer *ihi, doubleprecision *scale, doubleprecision *abnrm, doubleprecision *rconde, doubleprecision *rcondv, doubleprecision *work, integer *lwork, integer *iwork, integer *info, ftnlen balanclen, ftnlen jobvllen, ftnlen jobvrlen, ftnlen senselen);
void dgegs(character *jobvsl, character *jobvsr, integer *n, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *alphar, doubleprecision *alphai, doubleprecision *beta, doubleprecision *vsl, integer *ldvsl, doubleprecision *vsr, integer *ldvsr, doubleprecision *work, integer *lwork, integer *info, ftnlen jobvsllen, ftnlen jobvsrlen);
void dgegv(character *jobvl, character *jobvr, integer *n, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *alphar, doubleprecision *alphai, doubleprecision *beta, doubleprecision *vl, integer *ldvl, doubleprecision *vr, integer *ldvr, doubleprecision *work, integer *lwork, integer *info, ftnlen jobvllen, ftnlen jobvrlen);
void dgehd2(integer *n, integer *ilo, integer *ihi, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *work, integer *info);
void dgehrd(integer *n, integer *ilo, integer *ihi, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *work, integer *lwork, integer *info);
void dgelq2(integer *m, integer *n, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *work, integer *info);
void dgelqf(integer *m, integer *n, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *work, integer *lwork, integer *info);
void dgels(character *trans, integer *m, integer *n, integer *nrhs, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *work, integer *lwork, integer *info, ftnlen translen);
void dgelsd(integer *m, integer *n, integer *nrhs, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *s, doubleprecision *rcond, integer *rank, doubleprecision *work, integer *lwork, integer *iwork, integer *info);
void dgelss(integer *m, integer *n, integer *nrhs, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *s, doubleprecision *rcond, integer *rank, doubleprecision *work, integer *lwork, integer *info);
void dgelsx(integer *m, integer *n, integer *nrhs, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, integer *jpvt, doubleprecision *rcond, integer *rank, doubleprecision *work, integer *info);
void dgelsy(integer *m, integer *n, integer *nrhs, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, integer *jpvt, doubleprecision *rcond, integer *rank, doubleprecision *work, integer *lwork, integer *info);
void dgeql2(integer *m, integer *n, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *work, integer *info);
void dgeqlf(integer *m, integer *n, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *work, integer *lwork, integer *info);
void dgeqp3(integer *m, integer *n, doubleprecision *a, integer *lda, integer *jpvt, doubleprecision *tau, doubleprecision *work, integer *lwork, integer *info);
void dgeqpf(integer *m, integer *n, doubleprecision *a, integer *lda, integer *jpvt, doubleprecision *tau, doubleprecision *work, integer *info);
void dgeqr2(integer *m, integer *n, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *work, integer *info);
void dgeqrf(integer *m, integer *n, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *work, integer *lwork, integer *info);
void dgerfs(character *trans, integer *n, integer *nrhs, doubleprecision *a, integer *lda, doubleprecision *af, integer *ldaf, integer *ipiv, doubleprecision *b, integer *ldb, doubleprecision *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, doubleprecision *work, integer *iwork, integer *info, ftnlen translen);
void dgerq2(integer *m, integer *n, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *work, integer *info);
void dgerqf(integer *m, integer *n, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *work, integer *lwork, integer *info);
void dgesc2(integer *n, doubleprecision *a, integer *lda, doubleprecision *rhs, integer *ipiv, integer *jpiv, doubleprecision *scale);
void dgesdd(character *jobz, integer *m, integer *n, doubleprecision *a, integer *lda, doubleprecision *s, doubleprecision *u, integer *ldu, doubleprecision *vt, integer *ldvt, doubleprecision *work, integer *lwork, integer *iwork, integer *info, ftnlen jobzlen);
void dgesv(integer *n, integer *nrhs, doubleprecision *a, integer *lda, integer *ipiv, doubleprecision *b, integer *ldb, integer *info);
void dgesvd(character *jobu, character *jobvt, integer *m, integer *n, doubleprecision *a, integer *lda, doubleprecision *s, doubleprecision *u, integer *ldu, doubleprecision *vt, integer *ldvt, doubleprecision *work, integer *lwork, integer *info, ftnlen jobulen, ftnlen jobvtlen);
void dgesvx(character *fact, character *trans, integer *n, integer *nrhs, doubleprecision *a, integer *lda, doubleprecision *af, integer *ldaf, integer *ipiv, character *equed, doubleprecision *r, doubleprecision *c, doubleprecision *b, integer *ldb, doubleprecision *x, integer *ldx, doubleprecision *rcond, doubleprecision *ferr, doubleprecision *berr, doubleprecision *work, integer *iwork, integer *info, ftnlen factlen, ftnlen translen, ftnlen equedlen);
void dgetc2(integer *n, doubleprecision *a, integer *lda, integer *ipiv, integer *jpiv, integer *info);
void dgetf2(integer *m, integer *n, doubleprecision *a, integer *lda, integer *ipiv, integer *info);
void dgetrf(integer *m, integer *n, doubleprecision *a, integer *lda, integer *ipiv, integer *info);
void dgetri(integer *n, doubleprecision *a, integer *lda, integer *ipiv, doubleprecision *work, integer *lwork, integer *info);
void dgetrs(character *trans, integer *n, integer *nrhs, doubleprecision *a, integer *lda, integer *ipiv, doubleprecision *b, integer *ldb, integer *info, ftnlen translen);
void dggbak(character *job, character *side, integer *n, integer *ilo, integer *ihi, doubleprecision *lscale, doubleprecision *rscale, integer *m, doubleprecision *v, integer *ldv, integer *info, ftnlen joblen, ftnlen sidelen);
void dggbal(character *job, integer *n, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, integer *ilo, integer *ihi, doubleprecision *lscale, doubleprecision *rscale, doubleprecision *work, integer *info, ftnlen joblen);
void dgges(character *jobvsl, character *jobvsr, character *sort, logical (*selctg)(doubleprecision *a, doubleprecision *b, doubleprecision *c), integer *n, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, integer *sdim, doubleprecision *alphar, doubleprecision *alphai, doubleprecision *beta, doubleprecision *vsl, integer *ldvsl, doubleprecision *vsr, integer *ldvsr, doubleprecision *work, integer *lwork, logical *bwork, integer *info, ftnlen jobvsllen, ftnlen jobvsrlen, ftnlen sortlen);
void dggesx(character *jobvsl, character *jobvsr, character *sort, logical (*selctg)(doubleprecision *a, doubleprecision *b, doubleprecision *c), character *sense, integer *n, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, integer *sdim, doubleprecision *alphar, doubleprecision *alphai, doubleprecision *beta, doubleprecision *vsl, integer *ldvsl, doubleprecision *vsr, integer *ldvsr, doubleprecision *rconde, doubleprecision *rcondv, doubleprecision *work, integer *lwork, integer *iwork, integer *liwork, logical *bwork, integer *info, ftnlen jobvsllen, ftnlen jobvsrlen, ftnlen sortlen, ftnlen senselen);
void dggev(character *jobvl, character *jobvr, integer *n, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *alphar, doubleprecision *alphai, doubleprecision *beta, doubleprecision *vl, integer *ldvl, doubleprecision *vr, integer *ldvr, doubleprecision *work, integer *lwork, integer *info, ftnlen jobvllen, ftnlen jobvrlen);
void dggevx(character *balanc, character *jobvl, character *jobvr, character *sense, integer *n, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *alphar, doubleprecision *alphai, doubleprecision *beta, doubleprecision *vl, integer *ldvl, doubleprecision *vr, integer *ldvr, integer *ilo, integer *ihi, doubleprecision *lscale, doubleprecision *rscale, doubleprecision *abnrm, doubleprecision *bbnrm, doubleprecision *rconde, doubleprecision *rcondv, doubleprecision *work, integer *lwork, integer *iwork, logical *bwork, integer *info, ftnlen balanclen, ftnlen jobvllen, ftnlen jobvrlen, ftnlen senselen);
void dggglm(integer *n, integer *m, integer *p, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *d, doubleprecision *x, doubleprecision *y, doubleprecision *work, integer *lwork, integer *info);
void dgghrd(character *compq, character *compz, integer *n, integer *ilo, integer *ihi, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *q, integer *ldq, doubleprecision *z, integer *ldz, integer *info, ftnlen compqlen, ftnlen compzlen);
void dgglse(integer *m, integer *n, integer *p, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *c, doubleprecision *d, doubleprecision *x, doubleprecision *work, integer *lwork, integer *info);
void dggqrf(integer *n, integer *m, integer *p, doubleprecision *a, integer *lda, doubleprecision *taua, doubleprecision *b, integer *ldb, doubleprecision *taub, doubleprecision *work, integer *lwork, integer *info);
void dggrqf(integer *m, integer *p, integer *n, doubleprecision *a, integer *lda, doubleprecision *taua, doubleprecision *b, integer *ldb, doubleprecision *taub, doubleprecision *work, integer *lwork, integer *info);
void dggsvd(character *jobu, character *jobv, character *jobq, integer *m, integer *n, integer *p, integer *k, integer *l, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *alpha, doubleprecision *beta, doubleprecision *u, integer *ldu, doubleprecision *v, integer *ldv, doubleprecision *q, integer *ldq, doubleprecision *work, integer *iwork, integer *info, ftnlen jobulen, ftnlen jobvlen, ftnlen jobqlen);
void dggsvp(character *jobu, character *jobv, character *jobq, integer *m, integer *p, integer *n, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *tola, doubleprecision *tolb, integer *k, integer *l, doubleprecision *u, integer *ldu, doubleprecision *v, integer *ldv, doubleprecision *q, integer *ldq, integer *iwork, doubleprecision *tau, doubleprecision *work, integer *info, ftnlen jobulen, ftnlen jobvlen, ftnlen jobqlen);
void dgtcon(character *norm, integer *n, doubleprecision *dl, doubleprecision *d, doubleprecision *du, doubleprecision *du2, integer *ipiv, doubleprecision *anorm, doubleprecision *rcond, doubleprecision *work, integer *iwork, integer *info, ftnlen normlen);
void dgtrfs(character *trans, integer *n, integer *nrhs, doubleprecision *dl, doubleprecision *d, doubleprecision *du, doubleprecision *dlf, doubleprecision *df, doubleprecision *duf, doubleprecision *du2, integer *ipiv, doubleprecision *b, integer *ldb, doubleprecision *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, doubleprecision *work, integer *iwork, integer *info, ftnlen translen);
void dgtsv(integer *n, integer *nrhs, doubleprecision *dl, doubleprecision *d, doubleprecision *du, doubleprecision *b, integer *ldb, integer *info);
void dgtsvx(character *fact, character *trans, integer *n, integer *nrhs, doubleprecision *dl, doubleprecision *d, doubleprecision *du, doubleprecision *dlf, doubleprecision *df, doubleprecision *duf, doubleprecision *du2, integer *ipiv, doubleprecision *b, integer *ldb, doubleprecision *x, integer *ldx, doubleprecision *rcond, doubleprecision *ferr, doubleprecision *berr, doubleprecision *work, integer *iwork, integer *info, ftnlen factlen, ftnlen translen);
void dgttrf(integer *n, doubleprecision *dl, doubleprecision *d, doubleprecision *du, doubleprecision *du2, integer *ipiv, integer *info);
void dgttrs(character *trans, integer *n, integer *nrhs, doubleprecision *dl, doubleprecision *d, doubleprecision *du, doubleprecision *du2, integer *ipiv, doubleprecision *b, integer *ldb, integer *info, ftnlen translen);
void dgtts2(integer *itrans, integer *n, integer *nrhs, doubleprecision *dl, doubleprecision *d, doubleprecision *du, doubleprecision *du2, integer *ipiv, doubleprecision *b, integer *ldb);
void dhgeqz(character *job, character *compq, character *compz, integer *n, integer *ilo, integer *ihi, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *alphar, doubleprecision *alphai, doubleprecision *beta, doubleprecision *q, integer *ldq, doubleprecision *z, integer *ldz, doubleprecision *work, integer *lwork, integer *info, ftnlen joblen, ftnlen compqlen, ftnlen compzlen);
void dhsein(character *side, character *eigsrc, character *initv, logical *select, integer *n, doubleprecision *h, integer *ldh, doubleprecision *wr, doubleprecision *wi, doubleprecision *vl, integer *ldvl, doubleprecision *vr, integer *ldvr, integer *mm, integer *m, doubleprecision *work, integer *ifaill, integer *ifailr, integer *info, ftnlen sidelen, ftnlen eigsrclen, ftnlen initvlen);
void dhseqr(character *job, character *compz, integer *n, integer *ilo, integer *ihi, doubleprecision *h, integer *ldh, doubleprecision *wr, doubleprecision *wi, doubleprecision *z, integer *ldz, doubleprecision *work, integer *lwork, integer *info, ftnlen joblen, ftnlen compzlen);
void dlabad(doubleprecision *small, doubleprecision *large);
void dlabrd(integer *m, integer *n, integer *nb, doubleprecision *a, integer *lda, doubleprecision *d, doubleprecision *e, doubleprecision *tauq, doubleprecision *taup, doubleprecision *x, integer *ldx, doubleprecision *y, integer *ldy);
void dlacon(integer *n, doubleprecision *v, doubleprecision *x, integer *isgn, doubleprecision *est, integer *kase);
void dlacpy(character *uplo, integer *m, integer *n, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, ftnlen uplolen);
void dladiv(doubleprecision *a, doubleprecision *b, doubleprecision *c, doubleprecision *d, doubleprecision *p, doubleprecision *q);
void dlae2(doubleprecision *a, doubleprecision *b, doubleprecision *c, doubleprecision *rt1, doubleprecision *rt2);
void dlaebz(integer *ijob, integer *nitmax, integer *n, integer *mmax, integer *minp, integer *nbmin, doubleprecision *abstol, doubleprecision *reltol, doubleprecision *pivmin, doubleprecision *d, doubleprecision *e, doubleprecision *e2, integer *nval, doubleprecision *ab, doubleprecision *c, integer *mout, integer *nab, doubleprecision *work, integer *iwork, integer *info);
void dlaed0(integer *icompq, integer *qsiz, integer *n, doubleprecision *d, doubleprecision *e, doubleprecision *q, integer *ldq, doubleprecision *qstore, integer *ldqs, doubleprecision *work, integer *iwork, integer *info);
void dlaed1(integer *n, doubleprecision *d, doubleprecision *q, integer *ldq, integer *indxq, doubleprecision *rho, integer *cutpnt, doubleprecision *work, integer *iwork, integer *info);
void dlaed2(integer *k, integer *n, integer *n1, doubleprecision *d, doubleprecision *q, integer *ldq, integer *indxq, doubleprecision *rho, doubleprecision *z, doubleprecision *dlamda, doubleprecision *w, doubleprecision *q2, integer *indx, integer *indxc, integer *indxp, integer *coltyp, integer *info);
void dlaed3(integer *k, integer *n, integer *n1, doubleprecision *d, doubleprecision *q, integer *ldq, doubleprecision *rho, doubleprecision *dlamda, doubleprecision *q2, integer *indx, integer *ctot, doubleprecision *w, doubleprecision *s, integer *info);
void dlaed4(integer *n, integer *i, doubleprecision *d, doubleprecision *z, doubleprecision *delta, doubleprecision *rho, doubleprecision *dlam, integer *info);
void dlaed5(integer *i, doubleprecision *d, doubleprecision *z, doubleprecision *delta, doubleprecision *rho, doubleprecision *dlam);
void dlaed6(integer *kniter, logical *orgati, doubleprecision *rho, doubleprecision *d, doubleprecision *z, doubleprecision *finit, doubleprecision *tau, integer *info);
void dlaed7(integer *icompq, integer *n, integer *qsiz, integer *tlvls, integer *curlvl, integer *curpbm, doubleprecision *d, doubleprecision *q, integer *ldq, integer *indxq, doubleprecision *rho, integer *cutpnt, doubleprecision *qstore, integer *qptr, integer *prmptr, integer *perm, integer *givptr, integer *givcol, doubleprecision *givnum, doubleprecision *work, integer *iwork, integer *info);
void dlaed8(integer *icompq, integer *k, integer *n, integer *qsiz, doubleprecision *d, doubleprecision *q, integer *ldq, integer *indxq, doubleprecision *rho, integer *cutpnt, doubleprecision *z, doubleprecision *dlamda, doubleprecision *q2, integer *ldq2, doubleprecision *w, integer *perm, integer *givptr, integer *givcol, doubleprecision *givnum, integer *indxp, integer *indx, integer *info);
void dlaed9(integer *k, integer *kstart, integer *kstop, integer *n, doubleprecision *d, doubleprecision *q, integer *ldq, doubleprecision *rho, doubleprecision *dlamda, doubleprecision *w, doubleprecision *s, integer *lds, integer *info);
void dlaeda(integer *n, integer *tlvls, integer *curlvl, integer *curpbm, integer *prmptr, integer *perm, integer *givptr, integer *givcol, doubleprecision *givnum, doubleprecision *q, integer *qptr, doubleprecision *z, doubleprecision *ztemp, integer *info);
void dlaein(logical *rightv, logical *noinit, integer *n, doubleprecision *h, integer *ldh, doubleprecision *wr, doubleprecision *wi, doubleprecision *vr, doubleprecision *vi, doubleprecision *b, integer *ldb, doubleprecision *work, doubleprecision *eps3, doubleprecision *smlnum, doubleprecision *bignum, integer *info);
void dlaev2(doubleprecision *a, doubleprecision *b, doubleprecision *c, doubleprecision *rt1, doubleprecision *rt2, doubleprecision *cs1, doubleprecision *sn1);
void dlaexc(logical *wantq, integer *n, doubleprecision *t, integer *ldt, doubleprecision *q, integer *ldq, integer *j1, integer *n1, integer *n2, doubleprecision *work, integer *info);
void dlag2(doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *safmin, doubleprecision *scale1, doubleprecision *scale2, doubleprecision *wr1, doubleprecision *wr2, doubleprecision *wi);
void dlags2(logical *upper, doubleprecision *a1, doubleprecision *a2, doubleprecision *a3, doubleprecision *b1, doubleprecision *b2, doubleprecision *b3, doubleprecision *csu, doubleprecision *snu, doubleprecision *csv, doubleprecision *snv, doubleprecision *csq, doubleprecision *snq);
void dlagtf(integer *n, doubleprecision *a, doubleprecision *lambda, doubleprecision *b, doubleprecision *c, doubleprecision *tol, doubleprecision *d, integer *in, integer *info);
void dlagtm(character *trans, integer *n, integer *nrhs, doubleprecision *alpha, doubleprecision *dl, doubleprecision *d, doubleprecision *du, doubleprecision *x, integer *ldx, doubleprecision *beta, doubleprecision *b, integer *ldb, ftnlen translen);
void dlagts(integer *job, integer *n, doubleprecision *a, doubleprecision *b, doubleprecision *c, doubleprecision *d, integer *in, doubleprecision *y, doubleprecision *tol, integer *info);
void dlagv2(doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *alphar, doubleprecision *alphai, doubleprecision *beta, doubleprecision *csl, doubleprecision *snl, doubleprecision *csr, doubleprecision *snr);
void dlahqr(logical *wantt, logical *wantz, integer *n, integer *ilo, integer *ihi, doubleprecision *h, integer *ldh, doubleprecision *wr, doubleprecision *wi, integer *iloz, integer *ihiz, doubleprecision *z, integer *ldz, integer *info);
void dlahrd(integer *n, integer *k, integer *nb, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *t, integer *ldt, doubleprecision *y, integer *ldy);
void dlaic1(integer *job, integer *j, doubleprecision *x, doubleprecision *sest, doubleprecision *w, doubleprecision *gamma, doubleprecision *sestpr, doubleprecision *s, doubleprecision *c);
void dlaln2(logical *ltrans, integer *na, integer *nw, doubleprecision *smin, doubleprecision *ca, doubleprecision *a, integer *lda, doubleprecision *d1, doubleprecision *d2, doubleprecision *b, integer *ldb, doubleprecision *wr, doubleprecision *wi, doubleprecision *x, integer *ldx, doubleprecision *scale, doubleprecision *xnorm, integer *info);
void dlals0(integer *icompq, integer *nl, integer *nr, integer *sqre, integer *nrhs, doubleprecision *b, integer *ldb, doubleprecision *bx, integer *ldbx, integer *perm, integer *givptr, integer *givcol, integer *ldgcol, doubleprecision *givnum, integer *ldgnum, doubleprecision *poles, doubleprecision *difl, doubleprecision *difr, doubleprecision *z, integer *k, doubleprecision *c, doubleprecision *s, doubleprecision *work, integer *info);
void dlalsa(integer *icompq, integer *smlsiz, integer *n, integer *nrhs, doubleprecision *b, integer *ldb, doubleprecision *bx, integer *ldbx, doubleprecision *u, integer *ldu, doubleprecision *vt, integer *k, doubleprecision *difl, doubleprecision *difr, doubleprecision *z, doubleprecision *poles, integer *givptr, integer *givcol, integer *ldgcol, integer *perm, doubleprecision *givnum, doubleprecision *c, doubleprecision *s, doubleprecision *work, integer *iwork, integer *info);
void dlalsd(character *uplo, integer *smlsiz, integer *n, integer *nrhs, doubleprecision *d, doubleprecision *e, doubleprecision *b, integer *ldb, doubleprecision *rcond, integer *rank, doubleprecision *work, integer *iwork, integer *info, ftnlen uplolen);
extern doubleprecision dlamch(character *cmach, ftnlen cmachlen);
void dlamc1(integer *beta, integer *t, logical *rnd, logical *ieee1);
void dlamc2(integer *beta, integer *t, logical *rnd, doubleprecision *eps, integer *emin, doubleprecision *rmin, integer *emax, doubleprecision *rmax);
extern doubleprecision dlamc3(doubleprecision *a, doubleprecision *b);
void dlamc4(integer *emin, doubleprecision *start, integer *base);
void dlamc5(integer *beta, integer *p, integer *emin, logical *ieee, integer *emax, doubleprecision *rmax);
void dlamrg(integer *n1, integer *n2, doubleprecision *a, integer *dtrd1, integer *dtrd2, integer *index);
extern doubleprecision dlangb(character *norm, integer *n, integer *kl, integer *ku, doubleprecision *ab, integer *ldab, doubleprecision *work, ftnlen normlen);
extern doubleprecision dlange(character *norm, integer *m, integer *n, doubleprecision *a, integer *lda, doubleprecision *work, ftnlen normlen);
extern doubleprecision dlangt(character *norm, integer *n, doubleprecision *dl, doubleprecision *d, doubleprecision *du, ftnlen normlen);
extern doubleprecision dlanhs(character *norm, integer *n, doubleprecision *a, integer *lda, doubleprecision *work, ftnlen normlen);
extern doubleprecision dlansb(character *norm, character *uplo, integer *n, integer *k, doubleprecision *ab, integer *ldab, doubleprecision *work, ftnlen normlen, ftnlen uplolen);
extern doubleprecision dlansp(character *norm, character *uplo, integer *n, doubleprecision *ap, doubleprecision *work, ftnlen normlen, ftnlen uplolen);
extern doubleprecision dlanst(character *norm, integer *n, doubleprecision *d, doubleprecision *e, ftnlen normlen);
extern doubleprecision dlansy(character *norm, character *uplo, integer *n, doubleprecision *a, integer *lda, doubleprecision *work, ftnlen normlen, ftnlen uplolen);
extern doubleprecision dlantb(character *norm, character *uplo, character *diag, integer *n, integer *k, doubleprecision *ab, integer *ldab, doubleprecision *work, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
extern doubleprecision dlantp(character *norm, character *uplo, character *diag, integer *n, doubleprecision *ap, doubleprecision *work, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
extern doubleprecision dlantr(character *norm, character *uplo, character *diag, integer *m, integer *n, doubleprecision *a, integer *lda, doubleprecision *work, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
void dlanv2(doubleprecision *a, doubleprecision *b, doubleprecision *c, doubleprecision *d, doubleprecision *rt1r, doubleprecision *rt1i, doubleprecision *rt2r, doubleprecision *rt2i, doubleprecision *cs, doubleprecision *sn);
void dlapll(integer *n, doubleprecision *x, integer *incx, doubleprecision *y, integer *incy, doubleprecision *ssmin);
void dlapmt(logical *forwrd, integer *m, integer *n, doubleprecision *x, integer *ldx, integer *k);
extern doubleprecision dlapy2(doubleprecision *x, doubleprecision *y);
extern doubleprecision dlapy3(doubleprecision *x, doubleprecision *y, doubleprecision *z);
void dlaqgb(integer *m, integer *n, integer *kl, integer *ku, doubleprecision *ab, integer *ldab, doubleprecision *r, doubleprecision *c, doubleprecision *rowcnd, doubleprecision *colcnd, doubleprecision *amax, character *equed, ftnlen equedlen);
void dlaqge(integer *m, integer *n, doubleprecision *a, integer *lda, doubleprecision *r, doubleprecision *c, doubleprecision *rowcnd, doubleprecision *colcnd, doubleprecision *amax, character *equed, ftnlen equedlen);
void dlaqp2(integer *m, integer *n, integer *offset, doubleprecision *a, integer *lda, integer *jpvt, doubleprecision *tau, doubleprecision *vn1, doubleprecision *vn2, doubleprecision *work);
void dlaqps(integer *m, integer *n, integer *offset, integer *nb, integer *kb, doubleprecision *a, integer *lda, integer *jpvt, doubleprecision *tau, doubleprecision *vn1, doubleprecision *vn2, doubleprecision *auxv, doubleprecision *f, integer *ldf);
void dlaqsb(character *uplo, integer *n, integer *kd, doubleprecision *ab, integer *ldab, doubleprecision *s, doubleprecision *scond, doubleprecision *amax, character *equed, ftnlen uplolen, ftnlen equedlen);
void dlaqsp(character *uplo, integer *n, doubleprecision *ap, doubleprecision *s, doubleprecision *scond, doubleprecision *amax, character *equed, ftnlen uplolen, ftnlen equedlen);
void dlaqsy(character *uplo, integer *n, doubleprecision *a, integer *lda, doubleprecision *s, doubleprecision *scond, doubleprecision *amax, character *equed, ftnlen uplolen, ftnlen equedlen);
void dlaqtr(logical *ltran, logical *lreal, integer *n, doubleprecision *t, integer *ldt, doubleprecision *b, doubleprecision *w, doubleprecision *scale, doubleprecision *x, doubleprecision *work, integer *info);
void dlar1v(integer *n, integer *b1, integer *bn, doubleprecision *sigma, doubleprecision *d, doubleprecision *l, doubleprecision *ld, doubleprecision *lld, doubleprecision *gersch, doubleprecision *z, doubleprecision *ztz, doubleprecision *mingma, integer *r, integer *isuppz, doubleprecision *work);
void dlar2v(integer *n, doubleprecision *x, doubleprecision *y, doubleprecision *z, integer *incx, doubleprecision *c, doubleprecision *s, integer *incc);
void dlarf(character *side, integer *m, integer *n, doubleprecision *v, integer *incv, doubleprecision *tau, doubleprecision *c, integer *ldc, doubleprecision *work, ftnlen sidelen);
void dlarfb(character *side, character *trans, character *direct, character *storev, integer *m, integer *n, integer *k, doubleprecision *v, integer *ldv, doubleprecision *t, integer *ldt, doubleprecision *c, integer *ldc, doubleprecision *work, integer *ldwork, ftnlen sidelen, ftnlen translen, ftnlen directlen, ftnlen storevlen);
void dlarfg(integer *n, doubleprecision *alpha, doubleprecision *x, integer *incx, doubleprecision *tau);
void dlarft(character *direct, character *storev, integer *n, integer *k, doubleprecision *v, integer *ldv, doubleprecision *tau, doubleprecision *t, integer *ldt, ftnlen directlen, ftnlen storevlen);
void dlarfx(character *side, integer *m, integer *n, doubleprecision *v, doubleprecision *tau, doubleprecision *c, integer *ldc, doubleprecision *work, ftnlen sidelen);
void dlargv(integer *n, doubleprecision *x, integer *incx, doubleprecision *y, integer *incy, doubleprecision *c, integer *incc);
void dlarnv(integer *idist, integer *iseed, integer *n, doubleprecision *x);
void dlarrb(integer *n, doubleprecision *d, doubleprecision *l, doubleprecision *ld, doubleprecision *lld, integer *ifirst, integer *ilast, doubleprecision *sigma, doubleprecision *reltol, doubleprecision *w, doubleprecision *wgap, doubleprecision *werr, doubleprecision *work, integer *iwork, integer *info);
void dlarre(integer *n, doubleprecision *d, doubleprecision *e, doubleprecision *tol, integer *nsplit, integer *isplit, integer *m, doubleprecision *w, doubleprecision *woff, doubleprecision *gersch, doubleprecision *work, integer *info);
void dlarrf(integer *n, doubleprecision *d, doubleprecision *l, doubleprecision *ld, doubleprecision *lld, integer *ifirst, integer *ilast, doubleprecision *w, doubleprecision *dplus, doubleprecision *lplus, doubleprecision *work, integer *iwork, integer *info);
void dlarrv(integer *n, doubleprecision *d, doubleprecision *l, integer *isplit, integer *m, doubleprecision *w, integer *iblock, doubleprecision *gersch, doubleprecision *tol, doubleprecision *z, integer *ldz, integer *isuppz, doubleprecision *work, integer *iwork, integer *info);
void dlartg(doubleprecision *f, doubleprecision *g, doubleprecision *cs, doubleprecision *sn, doubleprecision *r);
void dlartv(integer *n, doubleprecision *x, integer *incx, doubleprecision *y, integer *incy, doubleprecision *c, doubleprecision *s, integer *incc);
void dlaruv(integer *iseed, integer *n, doubleprecision *x);
void dlarz(character *side, integer *m, integer *n, integer *l, doubleprecision *v, integer *incv, doubleprecision *tau, doubleprecision *c, integer *ldc, doubleprecision *work, ftnlen sidelen);
void dlarzb(character *side, character *trans, character *direct, character *storev, integer *m, integer *n, integer *k, integer *l, doubleprecision *v, integer *ldv, doubleprecision *t, integer *ldt, doubleprecision *c, integer *ldc, doubleprecision *work, integer *ldwork, ftnlen sidelen, ftnlen translen, ftnlen directlen, ftnlen storevlen);
void dlarzt(character *direct, character *storev, integer *n, integer *k, doubleprecision *v, integer *ldv, doubleprecision *tau, doubleprecision *t, integer *ldt, ftnlen directlen, ftnlen storevlen);
void dlas2(doubleprecision *f, doubleprecision *g, doubleprecision *h, doubleprecision *ssmin, doubleprecision *ssmax);
void dlascl(character *type, integer *kl, integer *ku, doubleprecision *cfrom, doubleprecision *cto, integer *m, integer *n, doubleprecision *a, integer *lda, integer *info, ftnlen typelen);
void dlasd0(integer *n, integer *sqre, doubleprecision *d, doubleprecision *e, doubleprecision *u, integer *ldu, doubleprecision *vt, integer *ldvt, integer *smlsiz, integer *iwork, doubleprecision *work, integer *info);
void dlasd1(integer *nl, integer *nr, integer *sqre, doubleprecision *d, doubleprecision *alpha, doubleprecision *beta, doubleprecision *u, integer *ldu, doubleprecision *vt, integer *ldvt, integer *idxq, integer *iwork, doubleprecision *work, integer *info);
void dlasd2(integer *nl, integer *nr, integer *sqre, integer *k, doubleprecision *d, doubleprecision *z, doubleprecision *alpha, doubleprecision *beta, doubleprecision *u, integer *ldu, doubleprecision *vt, integer *ldvt, doubleprecision *dsigma, doubleprecision *u2, integer *ldu2, doubleprecision *vt2, integer *ldvt2, integer *idxp, integer *idx, integer *idxc, integer *idxq, integer *coltyp, integer *info);
void dlasd3(integer *nl, integer *nr, integer *sqre, integer *k, doubleprecision *d, doubleprecision *q, integer *ldq, doubleprecision *dsigma, doubleprecision *u, integer *ldu, doubleprecision *u2, integer *ldu2, doubleprecision *vt, integer *ldvt, doubleprecision *vt2, integer *ldvt2, integer *idxc, integer *ctot, doubleprecision *z, integer *info);
void dlasd4(integer *n, integer *i, doubleprecision *d, doubleprecision *z, doubleprecision *delta, doubleprecision *rho, doubleprecision *sigma, doubleprecision *work, integer *info);
void dlasd5(integer *i, doubleprecision *d, doubleprecision *z, doubleprecision *delta, doubleprecision *rho, doubleprecision *dsigma, doubleprecision *work);
void dlasd6(integer *icompq, integer *nl, integer *nr, integer *sqre, doubleprecision *d, doubleprecision *vf, doubleprecision *vl, doubleprecision *alpha, doubleprecision *beta, integer *idxq, integer *perm, integer *givptr, integer *givcol, integer *ldgcol, doubleprecision *givnum, integer *ldgnum, doubleprecision *poles, doubleprecision *difl, doubleprecision *difr, doubleprecision *z, integer *k, doubleprecision *c, doubleprecision *s, doubleprecision *work, integer *iwork, integer *info);
void dlasd7(integer *icompq, integer *nl, integer *nr, integer *sqre, integer *k, doubleprecision *d, doubleprecision *z, doubleprecision *zw, doubleprecision *vf, doubleprecision *vfw, doubleprecision *vl, doubleprecision *vlw, doubleprecision *alpha, doubleprecision *beta, doubleprecision *dsigma, integer *idx, integer *idxp, integer *idxq, integer *perm, integer *givptr, integer *givcol, integer *ldgcol, doubleprecision *givnum, integer *ldgnum, doubleprecision *c, doubleprecision *s, integer *info);
void dlasd8(integer *icompq, integer *k, doubleprecision *d, doubleprecision *z, doubleprecision *vf, doubleprecision *vl, doubleprecision *difl, doubleprecision *difr, integer *lddifr, doubleprecision *dsigma, doubleprecision *work, integer *info);
void dlasd9(integer *icompq, integer *ldu, integer *k, doubleprecision *d, doubleprecision *z, doubleprecision *vf, doubleprecision *vl, doubleprecision *difl, doubleprecision *difr, doubleprecision *dsigma, doubleprecision *work, integer *info);
void dlasda(integer *icompq, integer *smlsiz, integer *n, integer *sqre, doubleprecision *d, doubleprecision *e, doubleprecision *u, integer *ldu, doubleprecision *vt, integer *k, doubleprecision *difl, doubleprecision *difr, doubleprecision *z, doubleprecision *poles, integer *givptr, integer *givcol, integer *ldgcol, integer *perm, doubleprecision *givnum, doubleprecision *c, doubleprecision *s, doubleprecision *work, integer *iwork, integer *info);
void dlasdq(character *uplo, integer *sqre, integer *n, integer *ncvt, integer *nru, integer *ncc, doubleprecision *d, doubleprecision *e, doubleprecision *vt, integer *ldvt, doubleprecision *u, integer *ldu, doubleprecision *c, integer *ldc, doubleprecision *work, integer *info, ftnlen uplolen);
void dlasdt(integer *n, integer *lvl, integer *nd, integer *inode, integer *ndiml, integer *ndimr, integer *msub);
void dlaset(character *uplo, integer *m, integer *n, doubleprecision *alpha, doubleprecision *beta, doubleprecision *a, integer *lda, ftnlen uplolen);
void dlasq1(integer *n, doubleprecision *d, doubleprecision *e, doubleprecision *work, integer *info);
void dlasq2(integer *n, doubleprecision *z, integer *info);
void dlasq3(integer *i0, integer *n0, doubleprecision *z, integer *pp, doubleprecision *dmin, doubleprecision *sigma, doubleprecision *desig, doubleprecision *qmax, integer *nfail, integer *iter, integer *ndiv, logical *ieee);
void dlasq4(integer *i0, integer *n0, doubleprecision *z, integer *pp, integer *n0in, doubleprecision *dmin, doubleprecision *dmin1, doubleprecision *dmin2, doubleprecision *dn, doubleprecision *dn1, doubleprecision *dn2, doubleprecision *tau, integer *ttype);
void dlasq5(integer *i0, integer *n0, doubleprecision *z, integer *pp, doubleprecision *tau, doubleprecision *dmin, doubleprecision *dmin1, doubleprecision *dmin2, doubleprecision *dn, doubleprecision *dnm1, doubleprecision *dnm2, logical *ieee);
void dlasq6(integer *i0, integer *n0, doubleprecision *z, integer *pp, doubleprecision *dmin, doubleprecision *dmin1, doubleprecision *dmin2, doubleprecision *dn, doubleprecision *dnm1, doubleprecision *dnm2);
void dlasr(character *side, character *pivot, character *direct, integer *m, integer *n, doubleprecision *c, doubleprecision *s, doubleprecision *a, integer *lda, ftnlen sidelen, ftnlen pivotlen, ftnlen directlen);
void dlasrt(character *id, integer *n, doubleprecision *d, integer *info, ftnlen idlen);
void dlassq(integer *n, doubleprecision *x, integer *incx, doubleprecision *scale, doubleprecision *sumsq);
void dlasv2(doubleprecision *f, doubleprecision *g, doubleprecision *h, doubleprecision *ssmin, doubleprecision *ssmax, doubleprecision *snr, doubleprecision *csr, doubleprecision *snl, doubleprecision *csl);
void dlaswp(integer *n, doubleprecision *a, integer *lda, integer *k1, integer *k2, integer *ipiv, integer *incx);
void dlasy2(logical *ltranl, logical *ltranr, integer *isgn, integer *n1, integer *n2, doubleprecision *tl, integer *ldtl, doubleprecision *tr, integer *ldtr, doubleprecision *b, integer *ldb, doubleprecision *scale, doubleprecision *x, integer *ldx, doubleprecision *xnorm, integer *info);
void dlasyf(character *uplo, integer *n, integer *nb, integer *kb, doubleprecision *a, integer *lda, integer *ipiv, doubleprecision *w, integer *ldw, integer *info, ftnlen uplolen);
void dlatbs(character *uplo, character *trans, character *diag, character *normin, integer *n, integer *kd, doubleprecision *ab, integer *ldab, doubleprecision *x, doubleprecision *scale, doubleprecision *cnorm, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen, ftnlen norminlen);
void dlatdf(integer *ijob, integer *n, doubleprecision *z, integer *ldz, doubleprecision *rhs, doubleprecision *rdsum, doubleprecision *rdscal, integer *ipiv, integer *jpiv);
void dlatps(character *uplo, character *trans, character *diag, character *normin, integer *n, doubleprecision *ap, doubleprecision *x, doubleprecision *scale, doubleprecision *cnorm, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen, ftnlen norminlen);
void dlatrd(character *uplo, integer *n, integer *nb, doubleprecision *a, integer *lda, doubleprecision *e, doubleprecision *tau, doubleprecision *w, integer *ldw, ftnlen uplolen);
void dlatrs(character *uplo, character *trans, character *diag, character *normin, integer *n, doubleprecision *a, integer *lda, doubleprecision *x, doubleprecision *scale, doubleprecision *cnorm, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen, ftnlen norminlen);
void dlatrz(integer *m, integer *n, integer *l, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *work);
void dlatzm(character *side, integer *m, integer *n, doubleprecision *v, integer *incv, doubleprecision *tau, doubleprecision *c1, doubleprecision *c2, integer *ldc, doubleprecision *work, ftnlen sidelen);
void dlauu2(character *uplo, integer *n, doubleprecision *a, integer *lda, integer *info, ftnlen uplolen);
void dlauum(character *uplo, integer *n, doubleprecision *a, integer *lda, integer *info, ftnlen uplolen);
void dopgtr(character *uplo, integer *n, doubleprecision *ap, doubleprecision *tau, doubleprecision *q, integer *ldq, doubleprecision *work, integer *info, ftnlen uplolen);
void dopmtr(character *side, character *uplo, character *trans, integer *m, integer *n, doubleprecision *ap, doubleprecision *tau, doubleprecision *c, integer *ldc, doubleprecision *work, integer *info, ftnlen sidelen, ftnlen uplolen, ftnlen translen);
void dorg2l(integer *m, integer *n, integer *k, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *work, integer *info);
void dorg2r(integer *m, integer *n, integer *k, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *work, integer *info);
void dorgbr(character *vect, integer *m, integer *n, integer *k, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *work, integer *lwork, integer *info, ftnlen vectlen);
void dorghr(integer *n, integer *ilo, integer *ihi, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *work, integer *lwork, integer *info);
void dorgl2(integer *m, integer *n, integer *k, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *work, integer *info);
void dorglq(integer *m, integer *n, integer *k, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *work, integer *lwork, integer *info);
void dorgql(integer *m, integer *n, integer *k, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *work, integer *lwork, integer *info);
void dorgqr(integer *m, integer *n, integer *k, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *work, integer *lwork, integer *info);
void dorgr2(integer *m, integer *n, integer *k, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *work, integer *info);
void dorgrq(integer *m, integer *n, integer *k, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *work, integer *lwork, integer *info);
void dorgtr(character *uplo, integer *n, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *work, integer *lwork, integer *info, ftnlen uplolen);
void dorm2l(character *side, character *trans, integer *m, integer *n, integer *k, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *c, integer *ldc, doubleprecision *work, integer *info, ftnlen sidelen, ftnlen translen);
void dorm2r(character *side, character *trans, integer *m, integer *n, integer *k, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *c, integer *ldc, doubleprecision *work, integer *info, ftnlen sidelen, ftnlen translen);
void dormbr(character *vect, character *side, character *trans, integer *m, integer *n, integer *k, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *c, integer *ldc, doubleprecision *work, integer *lwork, integer *info, ftnlen vectlen, ftnlen sidelen, ftnlen translen);
void dormhr(character *side, character *trans, integer *m, integer *n, integer *ilo, integer *ihi, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *c, integer *ldc, doubleprecision *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void dorml2(character *side, character *trans, integer *m, integer *n, integer *k, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *c, integer *ldc, doubleprecision *work, integer *info, ftnlen sidelen, ftnlen translen);
void dormlq(character *side, character *trans, integer *m, integer *n, integer *k, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *c, integer *ldc, doubleprecision *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void dormql(character *side, character *trans, integer *m, integer *n, integer *k, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *c, integer *ldc, doubleprecision *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void dormqr(character *side, character *trans, integer *m, integer *n, integer *k, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *c, integer *ldc, doubleprecision *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void dormr2(character *side, character *trans, integer *m, integer *n, integer *k, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *c, integer *ldc, doubleprecision *work, integer *info, ftnlen sidelen, ftnlen translen);
void dormr3(character *side, character *trans, integer *m, integer *n, integer *k, integer *l, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *c, integer *ldc, doubleprecision *work, integer *info, ftnlen sidelen, ftnlen translen);
void dormrq(character *side, character *trans, integer *m, integer *n, integer *k, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *c, integer *ldc, doubleprecision *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void dormrz(character *side, character *trans, integer *m, integer *n, integer *k, integer *l, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *c, integer *ldc, doubleprecision *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void dormtr(character *side, character *uplo, character *trans, integer *m, integer *n, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *c, integer *ldc, doubleprecision *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen uplolen, ftnlen translen);
void dpbcon(character *uplo, integer *n, integer *kd, doubleprecision *ab, integer *ldab, doubleprecision *anorm, doubleprecision *rcond, doubleprecision *work, integer *iwork, integer *info, ftnlen uplolen);
void dpbequ(character *uplo, integer *n, integer *kd, doubleprecision *ab, integer *ldab, doubleprecision *s, doubleprecision *scond, doubleprecision *amax, integer *info, ftnlen uplolen);
void dpbrfs(character *uplo, integer *n, integer *kd, integer *nrhs, doubleprecision *ab, integer *ldab, doubleprecision *afb, integer *ldafb, doubleprecision *b, integer *ldb, doubleprecision *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, doubleprecision *work, integer *iwork, integer *info, ftnlen uplolen);
void dpbstf(character *uplo, integer *n, integer *kd, doubleprecision *ab, integer *ldab, integer *info, ftnlen uplolen);
void dpbsv(character *uplo, integer *n, integer *kd, integer *nrhs, doubleprecision *ab, integer *ldab, doubleprecision *b, integer *ldb, integer *info, ftnlen uplolen);
void dpbsvx(character *fact, character *uplo, integer *n, integer *kd, integer *nrhs, doubleprecision *ab, integer *ldab, doubleprecision *afb, integer *ldafb, character *equed, doubleprecision *s, doubleprecision *b, integer *ldb, doubleprecision *x, integer *ldx, doubleprecision *rcond, doubleprecision *ferr, doubleprecision *berr, doubleprecision *work, integer *iwork, integer *info, ftnlen factlen, ftnlen uplolen, ftnlen equedlen);
void dpbtf2(character *uplo, integer *n, integer *kd, doubleprecision *ab, integer *ldab, integer *info, ftnlen uplolen);
void dpbtrf(character *uplo, integer *n, integer *kd, doubleprecision *ab, integer *ldab, integer *info, ftnlen uplolen);
void dpbtrs(character *uplo, integer *n, integer *kd, integer *nrhs, doubleprecision *ab, integer *ldab, doubleprecision *b, integer *ldb, integer *info, ftnlen uplolen);
void dpocon(character *uplo, integer *n, doubleprecision *a, integer *lda, doubleprecision *anorm, doubleprecision *rcond, doubleprecision *work, integer *iwork, integer *info, ftnlen uplolen);
void dpoequ(integer *n, doubleprecision *a, integer *lda, doubleprecision *s, doubleprecision *scond, doubleprecision *amax, integer *info);
void dporfs(character *uplo, integer *n, integer *nrhs, doubleprecision *a, integer *lda, doubleprecision *af, integer *ldaf, doubleprecision *b, integer *ldb, doubleprecision *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, doubleprecision *work, integer *iwork, integer *info, ftnlen uplolen);
void dposv(character *uplo, integer *n, integer *nrhs, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, integer *info, ftnlen uplolen);
void dposvx(character *fact, character *uplo, integer *n, integer *nrhs, doubleprecision *a, integer *lda, doubleprecision *af, integer *ldaf, character *equed, doubleprecision *s, doubleprecision *b, integer *ldb, doubleprecision *x, integer *ldx, doubleprecision *rcond, doubleprecision *ferr, doubleprecision *berr, doubleprecision *work, integer *iwork, integer *info, ftnlen factlen, ftnlen uplolen, ftnlen equedlen);
void dpotf2(character *uplo, integer *n, doubleprecision *a, integer *lda, integer *info, ftnlen uplolen);
void dpotrf(character *uplo, integer *n, doubleprecision *a, integer *lda, integer *info, ftnlen uplolen);
void dpotri(character *uplo, integer *n, doubleprecision *a, integer *lda, integer *info, ftnlen uplolen);
void dpotrs(character *uplo, integer *n, integer *nrhs, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, integer *info, ftnlen uplolen);
void dppcon(character *uplo, integer *n, doubleprecision *ap, doubleprecision *anorm, doubleprecision *rcond, doubleprecision *work, integer *iwork, integer *info, ftnlen uplolen);
void dppequ(character *uplo, integer *n, doubleprecision *ap, doubleprecision *s, doubleprecision *scond, doubleprecision *amax, integer *info, ftnlen uplolen);
void dpprfs(character *uplo, integer *n, integer *nrhs, doubleprecision *ap, doubleprecision *afp, doubleprecision *b, integer *ldb, doubleprecision *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, doubleprecision *work, integer *iwork, integer *info, ftnlen uplolen);
void dppsv(character *uplo, integer *n, integer *nrhs, doubleprecision *ap, doubleprecision *b, integer *ldb, integer *info, ftnlen uplolen);
void dppsvx(character *fact, character *uplo, integer *n, integer *nrhs, doubleprecision *ap, doubleprecision *afp, character *equed, doubleprecision *s, doubleprecision *b, integer *ldb, doubleprecision *x, integer *ldx, doubleprecision *rcond, doubleprecision *ferr, doubleprecision *berr, doubleprecision *work, integer *iwork, integer *info, ftnlen factlen, ftnlen uplolen, ftnlen equedlen);
void dpptrf(character *uplo, integer *n, doubleprecision *ap, integer *info, ftnlen uplolen);
void dpptri(character *uplo, integer *n, doubleprecision *ap, integer *info, ftnlen uplolen);
void dpptrs(character *uplo, integer *n, integer *nrhs, doubleprecision *ap, doubleprecision *b, integer *ldb, integer *info, ftnlen uplolen);
void dptcon(integer *n, doubleprecision *d, doubleprecision *e, doubleprecision *anorm, doubleprecision *rcond, doubleprecision *work, integer *info);
void dpteqr(character *compz, integer *n, doubleprecision *d, doubleprecision *e, doubleprecision *z, integer *ldz, doubleprecision *work, integer *info, ftnlen compzlen);
void dptrfs(integer *n, integer *nrhs, doubleprecision *d, doubleprecision *e, doubleprecision *df, doubleprecision *ef, doubleprecision *b, integer *ldb, doubleprecision *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, doubleprecision *work, integer *info);
void dptsv(integer *n, integer *nrhs, doubleprecision *d, doubleprecision *e, doubleprecision *b, integer *ldb, integer *info);
void dptsvx(character *fact, integer *n, integer *nrhs, doubleprecision *d, doubleprecision *e, doubleprecision *df, doubleprecision *ef, doubleprecision *b, integer *ldb, doubleprecision *x, integer *ldx, doubleprecision *rcond, doubleprecision *ferr, doubleprecision *berr, doubleprecision *work, integer *info, ftnlen factlen);
void dpttrf(integer *n, doubleprecision *d, doubleprecision *e, integer *info);
void dpttrs(integer *n, integer *nrhs, doubleprecision *d, doubleprecision *e, doubleprecision *b, integer *ldb, integer *info);
void dptts2(integer *n, integer *nrhs, doubleprecision *d, doubleprecision *e, doubleprecision *b, integer *ldb);
void drscl(integer *n, doubleprecision *sa, doubleprecision *sx, integer *incx);
void dsbev(character *jobz, character *uplo, integer *n, integer *kd, doubleprecision *ab, integer *ldab, doubleprecision *w, doubleprecision *z, integer *ldz, doubleprecision *work, integer *info, ftnlen jobzlen, ftnlen uplolen);
void dsbevd(character *jobz, character *uplo, integer *n, integer *kd, doubleprecision *ab, integer *ldab, doubleprecision *w, doubleprecision *z, integer *ldz, doubleprecision *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void dsbevx(character *jobz, character *range, character *uplo, integer *n, integer *kd, doubleprecision *ab, integer *ldab, doubleprecision *q, integer *ldq, doubleprecision *vl, doubleprecision *vu, integer *il, integer *iu, doubleprecision *abstol, integer *m, doubleprecision *w, doubleprecision *z, integer *ldz, doubleprecision *work, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void dsbgst(character *vect, character *uplo, integer *n, integer *ka, integer *kb, doubleprecision *ab, integer *ldab, doubleprecision *bb, integer *ldbb, doubleprecision *x, integer *ldx, doubleprecision *work, integer *info, ftnlen vectlen, ftnlen uplolen);
void dsbgv(character *jobz, character *uplo, integer *n, integer *ka, integer *kb, doubleprecision *ab, integer *ldab, doubleprecision *bb, integer *ldbb, doubleprecision *w, doubleprecision *z, integer *ldz, doubleprecision *work, integer *info, ftnlen jobzlen, ftnlen uplolen);
void dsbgvd(character *jobz, character *uplo, integer *n, integer *ka, integer *kb, doubleprecision *ab, integer *ldab, doubleprecision *bb, integer *ldbb, doubleprecision *w, doubleprecision *z, integer *ldz, doubleprecision *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void dsbgvx(character *jobz, character *range, character *uplo, integer *n, integer *ka, integer *kb, doubleprecision *ab, integer *ldab, doubleprecision *bb, integer *ldbb, doubleprecision *q, integer *ldq, doubleprecision *vl, doubleprecision *vu, integer *il, integer *iu, doubleprecision *abstol, integer *m, doubleprecision *w, doubleprecision *z, integer *ldz, doubleprecision *work, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void dsbtrd(character *vect, character *uplo, integer *n, integer *kd, doubleprecision *ab, integer *ldab, doubleprecision *d, doubleprecision *e, doubleprecision *q, integer *ldq, doubleprecision *work, integer *info, ftnlen vectlen, ftnlen uplolen);
extern doubleprecision dsecnd(void);
void dspcon(character *uplo, integer *n, doubleprecision *ap, integer *ipiv, doubleprecision *anorm, doubleprecision *rcond, doubleprecision *work, integer *iwork, integer *info, ftnlen uplolen);
void dspev(character *jobz, character *uplo, integer *n, doubleprecision *ap, doubleprecision *w, doubleprecision *z, integer *ldz, doubleprecision *work, integer *info, ftnlen jobzlen, ftnlen uplolen);
void dspevd(character *jobz, character *uplo, integer *n, doubleprecision *ap, doubleprecision *w, doubleprecision *z, integer *ldz, doubleprecision *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void dspevx(character *jobz, character *range, character *uplo, integer *n, doubleprecision *ap, doubleprecision *vl, doubleprecision *vu, integer *il, integer *iu, doubleprecision *abstol, integer *m, doubleprecision *w, doubleprecision *z, integer *ldz, doubleprecision *work, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void dspgst(integer *itype, character *uplo, integer *n, doubleprecision *ap, doubleprecision *bp, integer *info, ftnlen uplolen);
void dspgv(integer *itype, character *jobz, character *uplo, integer *n, doubleprecision *ap, doubleprecision *bp, doubleprecision *w, doubleprecision *z, integer *ldz, doubleprecision *work, integer *info, ftnlen jobzlen, ftnlen uplolen);
void dspgvd(integer *itype, character *jobz, character *uplo, integer *n, doubleprecision *ap, doubleprecision *bp, doubleprecision *w, doubleprecision *z, integer *ldz, doubleprecision *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void dspgvx(integer *itype, character *jobz, character *range, character *uplo, integer *n, doubleprecision *ap, doubleprecision *bp, doubleprecision *vl, doubleprecision *vu, integer *il, integer *iu, doubleprecision *abstol, integer *m, doubleprecision *w, doubleprecision *z, integer *ldz, doubleprecision *work, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void dsprfs(character *uplo, integer *n, integer *nrhs, doubleprecision *ap, doubleprecision *afp, integer *ipiv, doubleprecision *b, integer *ldb, doubleprecision *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, doubleprecision *work, integer *iwork, integer *info, ftnlen uplolen);
void dspsv(character *uplo, integer *n, integer *nrhs, doubleprecision *ap, integer *ipiv, doubleprecision *b, integer *ldb, integer *info, ftnlen uplolen);
void dspsvx(character *fact, character *uplo, integer *n, integer *nrhs, doubleprecision *ap, doubleprecision *afp, integer *ipiv, doubleprecision *b, integer *ldb, doubleprecision *x, integer *ldx, doubleprecision *rcond, doubleprecision *ferr, doubleprecision *berr, doubleprecision *work, integer *iwork, integer *info, ftnlen factlen, ftnlen uplolen);
void dsptrd(character *uplo, integer *n, doubleprecision *ap, doubleprecision *d, doubleprecision *e, doubleprecision *tau, integer *info, ftnlen uplolen);
void dsptrf(character *uplo, integer *n, doubleprecision *ap, integer *ipiv, integer *info, ftnlen uplolen);
void dsptri(character *uplo, integer *n, doubleprecision *ap, integer *ipiv, doubleprecision *work, integer *info, ftnlen uplolen);
void dsptrs(character *uplo, integer *n, integer *nrhs, doubleprecision *ap, integer *ipiv, doubleprecision *b, integer *ldb, integer *info, ftnlen uplolen);
void dstebz(character *range, character *order, integer *n, doubleprecision *vl, doubleprecision *vu, integer *il, integer *iu, doubleprecision *abstol, doubleprecision *d, doubleprecision *e, integer *m, integer *nsplit, doubleprecision *w, integer *iblock, integer *isplit, doubleprecision *work, integer *iwork, integer *info, ftnlen rangelen, ftnlen orderlen);
void dstedc(character *compz, integer *n, doubleprecision *d, doubleprecision *e, doubleprecision *z, integer *ldz, doubleprecision *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen compzlen);
void dstegr(character *jobz, character *range, integer *n, doubleprecision *d, doubleprecision *e, doubleprecision *vl, doubleprecision *vu, integer *il, integer *iu, doubleprecision *abstol, integer *m, doubleprecision *w, doubleprecision *z, integer *ldz, integer *isuppz, doubleprecision *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen rangelen);
void dstein(integer *n, doubleprecision *d, doubleprecision *e, integer *m, doubleprecision *w, integer *iblock, integer *isplit, doubleprecision *z, integer *ldz, doubleprecision *work, integer *iwork, integer *ifail, integer *info);
void dsteqr(character *compz, integer *n, doubleprecision *d, doubleprecision *e, doubleprecision *z, integer *ldz, doubleprecision *work, integer *info, ftnlen compzlen);
void dsterf(integer *n, doubleprecision *d, doubleprecision *e, integer *info);
void dstev(character *jobz, integer *n, doubleprecision *d, doubleprecision *e, doubleprecision *z, integer *ldz, doubleprecision *work, integer *info, ftnlen jobzlen);
void dstevd(character *jobz, integer *n, doubleprecision *d, doubleprecision *e, doubleprecision *z, integer *ldz, doubleprecision *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen);
void dstevr(character *jobz, character *range, integer *n, doubleprecision *d, doubleprecision *e, doubleprecision *vl, doubleprecision *vu, integer *il, integer *iu, doubleprecision *abstol, integer *m, doubleprecision *w, doubleprecision *z, integer *ldz, integer *isuppz, doubleprecision *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen rangelen);
void dstevx(character *jobz, character *range, integer *n, doubleprecision *d, doubleprecision *e, doubleprecision *vl, doubleprecision *vu, integer *il, integer *iu, doubleprecision *abstol, integer *m, doubleprecision *w, doubleprecision *z, integer *ldz, doubleprecision *work, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen);
void dsycon(character *uplo, integer *n, doubleprecision *a, integer *lda, integer *ipiv, doubleprecision *anorm, doubleprecision *rcond, doubleprecision *work, integer *iwork, integer *info, ftnlen uplolen);
void dsyev(character *jobz, character *uplo, integer *n, doubleprecision *a, integer *lda, doubleprecision *w, doubleprecision *work, integer *lwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void dsyevd(character *jobz, character *uplo, integer *n, doubleprecision *a, integer *lda, doubleprecision *w, doubleprecision *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void dsyevr(character *jobz, character *range, character *uplo, integer *n, doubleprecision *a, integer *lda, doubleprecision *vl, doubleprecision *vu, integer *il, integer *iu, doubleprecision *abstol, integer *m, doubleprecision *w, doubleprecision *z, integer *ldz, integer *isuppz, doubleprecision *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void dsyevx(character *jobz, character *range, character *uplo, integer *n, doubleprecision *a, integer *lda, doubleprecision *vl, doubleprecision *vu, integer *il, integer *iu, doubleprecision *abstol, integer *m, doubleprecision *w, doubleprecision *z, integer *ldz, doubleprecision *work, integer *lwork, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void dsygs2(integer *itype, character *uplo, integer *n, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, integer *info, ftnlen uplolen);
void dsygst(integer *itype, character *uplo, integer *n, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, integer *info, ftnlen uplolen);
void dsygv(integer *itype, character *jobz, character *uplo, integer *n, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *w, doubleprecision *work, integer *lwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void dsygvd(integer *itype, character *jobz, character *uplo, integer *n, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *w, doubleprecision *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void dsygvx(integer *itype, character *jobz, character *range, character *uplo, integer *n, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *vl, doubleprecision *vu, integer *il, integer *iu, doubleprecision *abstol, integer *m, doubleprecision *w, doubleprecision *z, integer *ldz, doubleprecision *work, integer *lwork, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void dsyrfs(character *uplo, integer *n, integer *nrhs, doubleprecision *a, integer *lda, doubleprecision *af, integer *ldaf, integer *ipiv, doubleprecision *b, integer *ldb, doubleprecision *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, doubleprecision *work, integer *iwork, integer *info, ftnlen uplolen);
void dsysv(character *uplo, integer *n, integer *nrhs, doubleprecision *a, integer *lda, integer *ipiv, doubleprecision *b, integer *ldb, doubleprecision *work, integer *lwork, integer *info, ftnlen uplolen);
void dsysvx(character *fact, character *uplo, integer *n, integer *nrhs, doubleprecision *a, integer *lda, doubleprecision *af, integer *ldaf, integer *ipiv, doubleprecision *b, integer *ldb, doubleprecision *x, integer *ldx, doubleprecision *rcond, doubleprecision *ferr, doubleprecision *berr, doubleprecision *work, integer *lwork, integer *iwork, integer *info, ftnlen factlen, ftnlen uplolen);
void dsytd2(character *uplo, integer *n, doubleprecision *a, integer *lda, doubleprecision *d, doubleprecision *e, doubleprecision *tau, integer *info, ftnlen uplolen);
void dsytf2(character *uplo, integer *n, doubleprecision *a, integer *lda, integer *ipiv, integer *info, ftnlen uplolen);
void dsytrd(character *uplo, integer *n, doubleprecision *a, integer *lda, doubleprecision *d, doubleprecision *e, doubleprecision *tau, doubleprecision *work, integer *lwork, integer *info, ftnlen uplolen);
void dsytrf(character *uplo, integer *n, doubleprecision *a, integer *lda, integer *ipiv, doubleprecision *work, integer *lwork, integer *info, ftnlen uplolen);
void dsytri(character *uplo, integer *n, doubleprecision *a, integer *lda, integer *ipiv, doubleprecision *work, integer *info, ftnlen uplolen);
void dsytrs(character *uplo, integer *n, integer *nrhs, doubleprecision *a, integer *lda, integer *ipiv, doubleprecision *b, integer *ldb, integer *info, ftnlen uplolen);
void dtbcon(character *norm, character *uplo, character *diag, integer *n, integer *kd, doubleprecision *ab, integer *ldab, doubleprecision *rcond, doubleprecision *work, integer *iwork, integer *info, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
void dtbrfs(character *uplo, character *trans, character *diag, integer *n, integer *kd, integer *nrhs, doubleprecision *ab, integer *ldab, doubleprecision *b, integer *ldb, doubleprecision *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, doubleprecision *work, integer *iwork, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void dtbtrs(character *uplo, character *trans, character *diag, integer *n, integer *kd, integer *nrhs, doubleprecision *ab, integer *ldab, doubleprecision *b, integer *ldb, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void dtgevc(character *side, character *howmny, logical *select, integer *n, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *vl, integer *ldvl, doubleprecision *vr, integer *ldvr, integer *mm, integer *m, doubleprecision *work, integer *info, ftnlen sidelen, ftnlen howmnylen);
void dtgex2(logical *wantq, logical *wantz, integer *n, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *q, integer *ldq, doubleprecision *z, integer *ldz, integer *j1, integer *n1, integer *n2, doubleprecision *work, integer *lwork, integer *info);
void dtgexc(logical *wantq, logical *wantz, integer *n, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *q, integer *ldq, doubleprecision *z, integer *ldz, integer *ifst, integer *ilst, doubleprecision *work, integer *lwork, integer *info);
void dtgsen(integer *ijob, logical *wantq, logical *wantz, logical *select, integer *n, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *alphar, doubleprecision *alphai, doubleprecision *beta, doubleprecision *q, integer *ldq, doubleprecision *z, integer *ldz, integer *m, doubleprecision *pl, doubleprecision *pr, doubleprecision *dif, doubleprecision *work, integer *lwork, integer *iwork, integer *liwork, integer *info);
void dtgsja(character *jobu, character *jobv, character *jobq, integer *m, integer *p, integer *n, integer *k, integer *l, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *tola, doubleprecision *tolb, doubleprecision *alpha, doubleprecision *beta, doubleprecision *u, integer *ldu, doubleprecision *v, integer *ldv, doubleprecision *q, integer *ldq, doubleprecision *work, integer *ncycle, integer *info, ftnlen jobulen, ftnlen jobvlen, ftnlen jobqlen);
void dtgsna(character *job, character *howmny, logical *select, integer *n, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *vl, integer *ldvl, doubleprecision *vr, integer *ldvr, doubleprecision *s, doubleprecision *dif, integer *mm, integer *m, doubleprecision *work, integer *lwork, integer *iwork, integer *info, ftnlen joblen, ftnlen howmnylen);
void dtgsy2(character *trans, integer *ijob, integer *m, integer *n, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *c, integer *ldc, doubleprecision *d, integer *ldd, doubleprecision *e, integer *lde, doubleprecision *f, integer *ldf, doubleprecision *scale, doubleprecision *rdsum, doubleprecision *rdscal, integer *iwork, integer *pq, integer *info, ftnlen translen);
void dtgsyl(character *trans, integer *ijob, integer *m, integer *n, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *c, integer *ldc, doubleprecision *d, integer *ldd, doubleprecision *e, integer *lde, doubleprecision *f, integer *ldf, doubleprecision *scale, doubleprecision *dif, doubleprecision *work, integer *lwork, integer *iwork, integer *info, ftnlen translen);
void dtpcon(character *norm, character *uplo, character *diag, integer *n, doubleprecision *ap, doubleprecision *rcond, doubleprecision *work, integer *iwork, integer *info, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
void dtprfs(character *uplo, character *trans, character *diag, integer *n, integer *nrhs, doubleprecision *ap, doubleprecision *b, integer *ldb, doubleprecision *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, doubleprecision *work, integer *iwork, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void dtptri(character *uplo, character *diag, integer *n, doubleprecision *ap, integer *info, ftnlen uplolen, ftnlen diaglen);
void dtptrs(character *uplo, character *trans, character *diag, integer *n, integer *nrhs, doubleprecision *ap, doubleprecision *b, integer *ldb, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void dtrcon(character *norm, character *uplo, character *diag, integer *n, doubleprecision *a, integer *lda, doubleprecision *rcond, doubleprecision *work, integer *iwork, integer *info, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
void dtrevc(character *side, character *howmny, logical *select, integer *n, doubleprecision *t, integer *ldt, doubleprecision *vl, integer *ldvl, doubleprecision *vr, integer *ldvr, integer *mm, integer *m, doubleprecision *work, integer *info, ftnlen sidelen, ftnlen howmnylen);
void dtrexc(character *compq, integer *n, doubleprecision *t, integer *ldt, doubleprecision *q, integer *ldq, integer *ifst, integer *ilst, doubleprecision *work, integer *info, ftnlen compqlen);
void dtrrfs(character *uplo, character *trans, character *diag, integer *n, integer *nrhs, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, doubleprecision *work, integer *iwork, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void dtrsen(character *job, character *compq, logical *select, integer *n, doubleprecision *t, integer *ldt, doubleprecision *q, integer *ldq, doubleprecision *wr, doubleprecision *wi, integer *m, doubleprecision *s, doubleprecision *sep, doubleprecision *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen joblen, ftnlen compqlen);
void dtrsna(character *job, character *howmny, logical *select, integer *n, doubleprecision *t, integer *ldt, doubleprecision *vl, integer *ldvl, doubleprecision *vr, integer *ldvr, doubleprecision *s, doubleprecision *sep, integer *mm, integer *m, doubleprecision *work, integer *ldwork, integer *iwork, integer *info, ftnlen joblen, ftnlen howmnylen);
void dtrsyl(character *trana, character *tranb, integer *isgn, integer *m, integer *n, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, doubleprecision *c, integer *ldc, doubleprecision *scale, integer *info, ftnlen tranalen, ftnlen tranblen);
void dtrti2(character *uplo, character *diag, integer *n, doubleprecision *a, integer *lda, integer *info, ftnlen uplolen, ftnlen diaglen);
void dtrtri(character *uplo, character *diag, integer *n, doubleprecision *a, integer *lda, integer *info, ftnlen uplolen, ftnlen diaglen);
void dtrtrs(character *uplo, character *trans, character *diag, integer *n, integer *nrhs, doubleprecision *a, integer *lda, doubleprecision *b, integer *ldb, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void dtzrqf(integer *m, integer *n, doubleprecision *a, integer *lda, doubleprecision *tau, integer *info);
void dtzrzf(integer *m, integer *n, doubleprecision *a, integer *lda, doubleprecision *tau, doubleprecision *work, integer *lwork, integer *info);
extern doubleprecision dzsum1(integer *n, ilu_doublecomplex *cx, integer *incx);
extern integer icmax1(integer *n, complex *cx, integer *incx);
extern integer ieeeck(integer *ispec, real *zero, real *one);
extern integer ilaenv(integer *ispec, character *name, character *opts, integer *n1, integer *n2, integer *n3, integer *n4, ftnlen namelen, ftnlen optslen);
extern integer izmax1(integer *n, ilu_doublecomplex *cx, integer *incx);
extern logical lsame(character *ca, character *cb, ftnlen calen, ftnlen cblen);
extern logical lsamen(integer *n, character *ca, character *cb, ftnlen calen, ftnlen cblen);
void sbdsdc(character *uplo, character *compq, integer *n, real *d, real *e, real *u, integer *ldu, real *vt, integer *ldvt, real *q, integer *iq, real *work, integer *iwork, integer *info, ftnlen uplolen, ftnlen compqlen);
void sbdsqr(character *uplo, integer *n, integer *ncvt, integer *nru, integer *ncc, real *d, real *e, real *vt, integer *ldvt, real *u, integer *ldu, real *c, integer *ldc, real *work, integer *info, ftnlen uplolen);
extern real scsum1(integer *n, complex *cx, integer *incx);
void sdisna(character *job, integer *m, integer *n, real *d, real *sep, integer *info, ftnlen joblen);
extern real second(void);
void sgbbrd(character *vect, integer *m, integer *n, integer *ncc, integer *kl, integer *ku, real *ab, integer *ldab, real *d, real *e, real *q, integer *ldq, real *pt, integer *ldpt, real *c, integer *ldc, real *work, integer *info, ftnlen vectlen);
void sgbcon(character *norm, integer *n, integer *kl, integer *ku, real *ab, integer *ldab, integer *ipiv, real *anorm, real *rcond, real *work, integer *iwork, integer *info, ftnlen normlen);
void sgbequ(integer *m, integer *n, integer *kl, integer *ku, real *ab, integer *ldab, real *r, real *c, real *rowcnd, real *colcnd, real *amax, integer *info);
void sgbrfs(character *trans, integer *n, integer *kl, integer *ku, integer *nrhs, real *ab, integer *ldab, real *afb, integer *ldafb, integer *ipiv, real *b, integer *ldb, real *x, integer *ldx, real *ferr, real *berr, real *work, integer *iwork, integer *info, ftnlen translen);
void sgbsv(integer *n, integer *kl, integer *ku, integer *nrhs, real *ab, integer *ldab, integer *ipiv, real *b, integer *ldb, integer *info);
void sgbsvx(character *fact, character *trans, integer *n, integer *kl, integer *ku, integer *nrhs, real *ab, integer *ldab, real *afb, integer *ldafb, integer *ipiv, character *equed, real *r, real *c, real *b, integer *ldb, real *x, integer *ldx, real *rcond, real *ferr, real *berr, real *work, integer *iwork, integer *info, ftnlen factlen, ftnlen translen, ftnlen equedlen);
void sgbtf2(integer *m, integer *n, integer *kl, integer *ku, real *ab, integer *ldab, integer *ipiv, integer *info);
void sgbtrf(integer *m, integer *n, integer *kl, integer *ku, real *ab, integer *ldab, integer *ipiv, integer *info);
void sgbtrs(character *trans, integer *n, integer *kl, integer *ku, integer *nrhs, real *ab, integer *ldab, integer *ipiv, real *b, integer *ldb, integer *info, ftnlen translen);
void sgebak(character *job, character *side, integer *n, integer *ilo, integer *ihi, real *scale, integer *m, real *v, integer *ldv, integer *info, ftnlen joblen, ftnlen sidelen);
void sgebal(character *job, integer *n, real *a, integer *lda, integer *ilo, integer *ihi, real *scale, integer *info, ftnlen joblen);
void sgebd2(integer *m, integer *n, real *a, integer *lda, real *d, real *e, real *tauq, real *taup, real *work, integer *info);
void sgebrd(integer *m, integer *n, real *a, integer *lda, real *d, real *e, real *tauq, real *taup, real *work, integer *lwork, integer *info);
void sgecon(character *norm, integer *n, real *a, integer *lda, real *anorm, real *rcond, real *work, integer *iwork, integer *info, ftnlen normlen);
void sgeequ(integer *m, integer *n, real *a, integer *lda, real *r, real *c, real *rowcnd, real *colcnd, real *amax, integer *info);
void sgees(character *jobvs, character *sort, logical (*select)(real *a, real *b), integer *n, real *a, integer *lda, integer *sdim, real *wr, real *wi, real *vs, integer *ldvs, real *work, integer *lwork, logical *bwork, integer *info, ftnlen jobvslen, ftnlen sortlen);
void sgeesx(character *jobvs, character *sort, logical (*select)(real *a, real *b), character *sense, integer *n, real *a, integer *lda, integer *sdim, real *wr, real *wi, real *vs, integer *ldvs, real *rconde, real *rcondv, real *work, integer *lwork, integer *iwork, integer *liwork, logical *bwork, integer *info, ftnlen jobvslen, ftnlen sortlen, ftnlen senselen);
void sgeev(character *jobvl, character *jobvr, integer *n, real *a, integer *lda, real *wr, real *wi, real *vl, integer *ldvl, real *vr, integer *ldvr, real *work, integer *lwork, integer *info, ftnlen jobvllen, ftnlen jobvrlen);
void sgeevx(character *balanc, character *jobvl, character *jobvr, character *sense, integer *n, real *a, integer *lda, real *wr, real *wi, real *vl, integer *ldvl, real *vr, integer *ldvr, integer *ilo, integer *ihi, real *scale, real *abnrm, real *rconde, real *rcondv, real *work, integer *lwork, integer *iwork, integer *info, ftnlen balanclen, ftnlen jobvllen, ftnlen jobvrlen, ftnlen senselen);
void sgegs(character *jobvsl, character *jobvsr, integer *n, real *a, integer *lda, real *b, integer *ldb, real *alphar, real *alphai, real *beta, real *vsl, integer *ldvsl, real *vsr, integer *ldvsr, real *work, integer *lwork, integer *info, ftnlen jobvsllen, ftnlen jobvsrlen);
void sgegv(character *jobvl, character *jobvr, integer *n, real *a, integer *lda, real *b, integer *ldb, real *alphar, real *alphai, real *beta, real *vl, integer *ldvl, real *vr, integer *ldvr, real *work, integer *lwork, integer *info, ftnlen jobvllen, ftnlen jobvrlen);
void sgehd2(integer *n, integer *ilo, integer *ihi, real *a, integer *lda, real *tau, real *work, integer *info);
void sgehrd(integer *n, integer *ilo, integer *ihi, real *a, integer *lda, real *tau, real *work, integer *lwork, integer *info);
void sgelq2(integer *m, integer *n, real *a, integer *lda, real *tau, real *work, integer *info);
void sgelqf(integer *m, integer *n, real *a, integer *lda, real *tau, real *work, integer *lwork, integer *info);
void sgels(character *trans, integer *m, integer *n, integer *nrhs, real *a, integer *lda, real *b, integer *ldb, real *work, integer *lwork, integer *info, ftnlen translen);
void sgelsd(integer *m, integer *n, integer *nrhs, real *a, integer *lda, real *b, integer *ldb, real *s, real *rcond, integer *rank, real *work, integer *lwork, integer *iwork, integer *info);
void sgelss(integer *m, integer *n, integer *nrhs, real *a, integer *lda, real *b, integer *ldb, real *s, real *rcond, integer *rank, real *work, integer *lwork, integer *info);
void sgelsx(integer *m, integer *n, integer *nrhs, real *a, integer *lda, real *b, integer *ldb, integer *jpvt, real *rcond, integer *rank, real *work, integer *info);
void sgelsy(integer *m, integer *n, integer *nrhs, real *a, integer *lda, real *b, integer *ldb, integer *jpvt, real *rcond, integer *rank, real *work, integer *lwork, integer *info);
void sgeql2(integer *m, integer *n, real *a, integer *lda, real *tau, real *work, integer *info);
void sgeqlf(integer *m, integer *n, real *a, integer *lda, real *tau, real *work, integer *lwork, integer *info);
void sgeqp3(integer *m, integer *n, real *a, integer *lda, integer *jpvt, real *tau, real *work, integer *lwork, integer *info);
void sgeqpf(integer *m, integer *n, real *a, integer *lda, integer *jpvt, real *tau, real *work, integer *info);
void sgeqr2(integer *m, integer *n, real *a, integer *lda, real *tau, real *work, integer *info);
void sgeqrf(integer *m, integer *n, real *a, integer *lda, real *tau, real *work, integer *lwork, integer *info);
void sgerfs(character *trans, integer *n, integer *nrhs, real *a, integer *lda, real *af, integer *ldaf, integer *ipiv, real *b, integer *ldb, real *x, integer *ldx, real *ferr, real *berr, real *work, integer *iwork, integer *info, ftnlen translen);
void sgerq2(integer *m, integer *n, real *a, integer *lda, real *tau, real *work, integer *info);
void sgerqf(integer *m, integer *n, real *a, integer *lda, real *tau, real *work, integer *lwork, integer *info);
void sgesc2(integer *n, real *a, integer *lda, real *rhs, integer *ipiv, integer *jpiv, real *scale);
void sgesdd(character *jobz, integer *m, integer *n, real *a, integer *lda, real *s, real *u, integer *ldu, real *vt, integer *ldvt, real *work, integer *lwork, integer *iwork, integer *info, ftnlen jobzlen);
void sgesv(integer *n, integer *nrhs, real *a, integer *lda, integer *ipiv, real *b, integer *ldb, integer *info);
void sgesvd(character *jobu, character *jobvt, integer *m, integer *n, real *a, integer *lda, real *s, real *u, integer *ldu, real *vt, integer *ldvt, real *work, integer *lwork, integer *info, ftnlen jobulen, ftnlen jobvtlen);
void sgesvx(character *fact, character *trans, integer *n, integer *nrhs, real *a, integer *lda, real *af, integer *ldaf, integer *ipiv, character *equed, real *r, real *c, real *b, integer *ldb, real *x, integer *ldx, real *rcond, real *ferr, real *berr, real *work, integer *iwork, integer *info, ftnlen factlen, ftnlen translen, ftnlen equedlen);
void sgetc2(integer *n, real *a, integer *lda, integer *ipiv, integer *jpiv, integer *info);
void sgetf2(integer *m, integer *n, real *a, integer *lda, integer *ipiv, integer *info);
void sgetrf(integer *m, integer *n, real *a, integer *lda, integer *ipiv, integer *info);
void sgetri(integer *n, real *a, integer *lda, integer *ipiv, real *work, integer *lwork, integer *info);
void sgetrs(character *trans, integer *n, integer *nrhs, real *a, integer *lda, integer *ipiv, real *b, integer *ldb, integer *info, ftnlen translen);
void sggbak(character *job, character *side, integer *n, integer *ilo, integer *ihi, real *lscale, real *rscale, integer *m, real *v, integer *ldv, integer *info, ftnlen joblen, ftnlen sidelen);
void sggbal(character *job, integer *n, real *a, integer *lda, real *b, integer *ldb, integer *ilo, integer *ihi, real *lscale, real *rscale, real *work, integer *info, ftnlen joblen);
void sgges(character *jobvsl, character *jobvsr, character *sort, logical (*selctg)(real *a, real *b, real *c), integer *n, real *a, integer *lda, real *b, integer *ldb, integer *sdim, real *alphar, real *alphai, real *beta, real *vsl, integer *ldvsl, real *vsr, integer *ldvsr, real *work, integer *lwork, logical *bwork, integer *info, ftnlen jobvsllen, ftnlen jobvsrlen, ftnlen sortlen);
void sggesx(character *jobvsl, character *jobvsr, character *sort, logical (*selctg)(real *a, real *b, real *c), character *sense, integer *n, real *a, integer *lda, real *b, integer *ldb, integer *sdim, real *alphar, real *alphai, real *beta, real *vsl, integer *ldvsl, real *vsr, integer *ldvsr, real *rconde, real *rcondv, real *work, integer *lwork, integer *iwork, integer *liwork, logical *bwork, integer *info, ftnlen jobvsllen, ftnlen jobvsrlen, ftnlen sortlen, ftnlen senselen);
void sggev(character *jobvl, character *jobvr, integer *n, real *a, integer *lda, real *b, integer *ldb, real *alphar, real *alphai, real *beta, real *vl, integer *ldvl, real *vr, integer *ldvr, real *work, integer *lwork, integer *info, ftnlen jobvllen, ftnlen jobvrlen);
void sggevx(character *balanc, character *jobvl, character *jobvr, character *sense, integer *n, real *a, integer *lda, real *b, integer *ldb, real *alphar, real *alphai, real *beta, real *vl, integer *ldvl, real *vr, integer *ldvr, integer *ilo, integer *ihi, real *lscale, real *rscale, real *abnrm, real *bbnrm, real *rconde, real *rcondv, real *work, integer *lwork, integer *iwork, logical *bwork, integer *info, ftnlen balanclen, ftnlen jobvllen, ftnlen jobvrlen, ftnlen senselen);
void sggglm(integer *n, integer *m, integer *p, real *a, integer *lda, real *b, integer *ldb, real *d, real *x, real *y, real *work, integer *lwork, integer *info);
void sgghrd(character *compq, character *compz, integer *n, integer *ilo, integer *ihi, real *a, integer *lda, real *b, integer *ldb, real *q, integer *ldq, real *z, integer *ldz, integer *info, ftnlen compqlen, ftnlen compzlen);
void sgglse(integer *m, integer *n, integer *p, real *a, integer *lda, real *b, integer *ldb, real *c, real *d, real *x, real *work, integer *lwork, integer *info);
void sggqrf(integer *n, integer *m, integer *p, real *a, integer *lda, real *taua, real *b, integer *ldb, real *taub, real *work, integer *lwork, integer *info);
void sggrqf(integer *m, integer *p, integer *n, real *a, integer *lda, real *taua, real *b, integer *ldb, real *taub, real *work, integer *lwork, integer *info);
void sggsvd(character *jobu, character *jobv, character *jobq, integer *m, integer *n, integer *p, integer *k, integer *l, real *a, integer *lda, real *b, integer *ldb, real *alpha, real *beta, real *u, integer *ldu, real *v, integer *ldv, real *q, integer *ldq, real *work, integer *iwork, integer *info, ftnlen jobulen, ftnlen jobvlen, ftnlen jobqlen);
void sggsvp(character *jobu, character *jobv, character *jobq, integer *m, integer *p, integer *n, real *a, integer *lda, real *b, integer *ldb, real *tola, real *tolb, integer *k, integer *l, real *u, integer *ldu, real *v, integer *ldv, real *q, integer *ldq, integer *iwork, real *tau, real *work, integer *info, ftnlen jobulen, ftnlen jobvlen, ftnlen jobqlen);
void sgtcon(character *norm, integer *n, real *dl, real *d, real *du, real *du2, integer *ipiv, real *anorm, real *rcond, real *work, integer *iwork, integer *info, ftnlen normlen);
void sgtrfs(character *trans, integer *n, integer *nrhs, real *dl, real *d, real *du, real *dlf, real *df, real *duf, real *du2, integer *ipiv, real *b, integer *ldb, real *x, integer *ldx, real *ferr, real *berr, real *work, integer *iwork, integer *info, ftnlen translen);
void sgtsv(integer *n, integer *nrhs, real *dl, real *d, real *du, real *b, integer *ldb, integer *info);
void sgtsvx(character *fact, character *trans, integer *n, integer *nrhs, real *dl, real *d, real *du, real *dlf, real *df, real *duf, real *du2, integer *ipiv, real *b, integer *ldb, real *x, integer *ldx, real *rcond, real *ferr, real *berr, real *work, integer *iwork, integer *info, ftnlen factlen, ftnlen translen);
void sgttrf(integer *n, real *dl, real *d, real *du, real *du2, integer *ipiv, integer *info);
void sgttrs(character *trans, integer *n, integer *nrhs, real *dl, real *d, real *du, real *du2, integer *ipiv, real *b, integer *ldb, integer *info, ftnlen translen);
void sgtts2(integer *itrans, integer *n, integer *nrhs, real *dl, real *d, real *du, real *du2, integer *ipiv, real *b, integer *ldb);
void shgeqz(character *job, character *compq, character *compz, integer *n, integer *ilo, integer *ihi, real *a, integer *lda, real *b, integer *ldb, real *alphar, real *alphai, real *beta, real *q, integer *ldq, real *z, integer *ldz, real *work, integer *lwork, integer *info, ftnlen joblen, ftnlen compqlen, ftnlen compzlen);
void shsein(character *side, character *eigsrc, character *initv, logical *select, integer *n, real *h, integer *ldh, real *wr, real *wi, real *vl, integer *ldvl, real *vr, integer *ldvr, integer *mm, integer *m, real *work, integer *ifaill, integer *ifailr, integer *info, ftnlen sidelen, ftnlen eigsrclen, ftnlen initvlen);
void shseqr(character *job, character *compz, integer *n, integer *ilo, integer *ihi, real *h, integer *ldh, real *wr, real *wi, real *z, integer *ldz, real *work, integer *lwork, integer *info, ftnlen joblen, ftnlen compzlen);
void slabad(real *small, real *large);
void slabrd(integer *m, integer *n, integer *nb, real *a, integer *lda, real *d, real *e, real *tauq, real *taup, real *x, integer *ldx, real *y, integer *ldy);
void slacon(integer *n, real *v, real *x, integer *isgn, real *est, integer *kase);
void slacpy(character *uplo, integer *m, integer *n, real *a, integer *lda, real *b, integer *ldb, ftnlen uplolen);
void sladiv(real *a, real *b, real *c, real *d, real *p, real *q);
void slae2(real *a, real *b, real *c, real *rt1, real *rt2);
void slaebz(integer *ijob, integer *nitmax, integer *n, integer *mmax, integer *minp, integer *nbmin, real *abstol, real *reltol, real *pivmin, real *d, real *e, real *e2, integer *nval, real *ab, real *c, integer *mout, integer *nab, real *work, integer *iwork, integer *info);
void slaed0(integer *icompq, integer *qsiz, integer *n, real *d, real *e, real *q, integer *ldq, real *qstore, integer *ldqs, real *work, integer *iwork, integer *info);
void slaed1(integer *n, real *d, real *q, integer *ldq, integer *indxq, real *rho, integer *cutpnt, real *work, integer *iwork, integer *info);
void slaed2(integer *k, integer *n, integer *n1, real *d, real *q, integer *ldq, integer *indxq, real *rho, real *z, real *dlamda, real *w, real *q2, integer *indx, integer *indxc, integer *indxp, integer *coltyp, integer *info);
void slaed3(integer *k, integer *n, integer *n1, real *d, real *q, integer *ldq, real *rho, real *dlamda, real *q2, integer *indx, integer *ctot, real *w, real *s, integer *info);
void slaed4(integer *n, integer *i, real *d, real *z, real *delta, real *rho, real *dlam, integer *info);
void slaed5(integer *i, real *d, real *z, real *delta, real *rho, real *dlam);
void slaed6(integer *kniter, logical *orgati, real *rho, real *d, real *z, real *finit, real *tau, integer *info);
void slaed7(integer *icompq, integer *n, integer *qsiz, integer *tlvls, integer *curlvl, integer *curpbm, real *d, real *q, integer *ldq, integer *indxq, real *rho, integer *cutpnt, real *qstore, integer *qptr, integer *prmptr, integer *perm, integer *givptr, integer *givcol, real *givnum, real *work, integer *iwork, integer *info);
void slaed8(integer *icompq, integer *k, integer *n, integer *qsiz, real *d, real *q, integer *ldq, integer *indxq, real *rho, integer *cutpnt, real *z, real *dlamda, real *q2, integer *ldq2, real *w, integer *perm, integer *givptr, integer *givcol, real *givnum, integer *indxp, integer *indx, integer *info);
void slaed9(integer *k, integer *kstart, integer *kstop, integer *n, real *d, real *q, integer *ldq, real *rho, real *dlamda, real *w, real *s, integer *lds, integer *info);
void slaeda(integer *n, integer *tlvls, integer *curlvl, integer *curpbm, integer *prmptr, integer *perm, integer *givptr, integer *givcol, real *givnum, real *q, integer *qptr, real *z, real *ztemp, integer *info);
void slaein(logical *rightv, logical *noinit, integer *n, real *h, integer *ldh, real *wr, real *wi, real *vr, real *vi, real *b, integer *ldb, real *work, real *eps3, real *smlnum, real *bignum, integer *info);
void slaev2(real *a, real *b, real *c, real *rt1, real *rt2, real *cs1, real *sn1);
void slaexc(logical *wantq, integer *n, real *t, integer *ldt, real *q, integer *ldq, integer *j1, integer *n1, integer *n2, real *work, integer *info);
void slag2(real *a, integer *lda, real *b, integer *ldb, real *safmin, real *scale1, real *scale2, real *wr1, real *wr2, real *wi);
void slags2(logical *upper, real *a1, real *a2, real *a3, real *b1, real *b2, real *b3, real *csu, real *snu, real *csv, real *snv, real *csq, real *snq);
void slagtf(integer *n, real *a, real *lambda, real *b, real *c, real *tol, real *d, integer *in, integer *info);
void slagtm(character *trans, integer *n, integer *nrhs, real *alpha, real *dl, real *d, real *du, real *x, integer *ldx, real *beta, real *b, integer *ldb, ftnlen translen);
void slagts(integer *job, integer *n, real *a, real *b, real *c, real *d, integer *in, real *y, real *tol, integer *info);
void slagv2(real *a, integer *lda, real *b, integer *ldb, real *alphar, real *alphai, real *beta, real *csl, real *snl, real *csr, real *snr);
void slahqr(logical *wantt, logical *wantz, integer *n, integer *ilo, integer *ihi, real *h, integer *ldh, real *wr, real *wi, integer *iloz, integer *ihiz, real *z, integer *ldz, integer *info);
void slahrd(integer *n, integer *k, integer *nb, real *a, integer *lda, real *tau, real *t, integer *ldt, real *y, integer *ldy);
void slaic1(integer *job, integer *j, real *x, real *sest, real *w, real *gamma, real *sestpr, real *s, real *c);
void slaln2(logical *ltrans, integer *na, integer *nw, real *smin, real *ca, real *a, integer *lda, real *d1, real *d2, real *b, integer *ldb, real *wr, real *wi, real *x, integer *ldx, real *scale, real *xnorm, integer *info);
void slals0(integer *icompq, integer *nl, integer *nr, integer *sqre, integer *nrhs, real *b, integer *ldb, real *bx, integer *ldbx, integer *perm, integer *givptr, integer *givcol, integer *ldgcol, real *givnum, integer *ldgnum, real *poles, real *difl, real *difr, real *z, integer *k, real *c, real *s, real *work, integer *info);
void slalsa(integer *icompq, integer *smlsiz, integer *n, integer *nrhs, real *b, integer *ldb, real *bx, integer *ldbx, real *u, integer *ldu, real *vt, integer *k, real *difl, real *difr, real *z, real *poles, integer *givptr, integer *givcol, integer *ldgcol, integer *perm, real *givnum, real *c, real *s, real *work, integer *iwork, integer *info);
void slalsd(character *uplo, integer *smlsiz, integer *n, integer *nrhs, real *d, real *e, real *b, integer *ldb, real *rcond, integer *rank, real *work, integer *iwork, integer *info, ftnlen uplolen);
extern real slamch(character *cmach, ftnlen cmachlen);
void slamc1(integer *beta, integer *t, logical *rnd, logical *ieee1);
void slamc2(integer *beta, integer *t, logical *rnd, real *eps, integer *emin, real *rmin, integer *emax, real *rmax);
extern real slamc3(real *a, real *b);
void slamc4(integer *emin, real *start, integer *base);
void slamc5(integer *beta, integer *p, integer *emin, logical *ieee, integer *emax, real *rmax);
void slamrg(integer *n1, integer *n2, real *a, integer *strd1, integer *strd2, integer *index);
extern real slangb(character *norm, integer *n, integer *kl, integer *ku, real *ab, integer *ldab, real *work, ftnlen normlen);
extern real slange(character *norm, integer *m, integer *n, real *a, integer *lda, real *work, ftnlen normlen);
extern real slangt(character *norm, integer *n, real *dl, real *d, real *du, ftnlen normlen);
extern real slanhs(character *norm, integer *n, real *a, integer *lda, real *work, ftnlen normlen);
extern real slansb(character *norm, character *uplo, integer *n, integer *k, real *ab, integer *ldab, real *work, ftnlen normlen, ftnlen uplolen);
extern real slansp(character *norm, character *uplo, integer *n, real *ap, real *work, ftnlen normlen, ftnlen uplolen);
extern real slanst(character *norm, integer *n, real *d, real *e, ftnlen normlen);
extern real slansy(character *norm, character *uplo, integer *n, real *a, integer *lda, real *work, ftnlen normlen, ftnlen uplolen);
extern real slantb(character *norm, character *uplo, character *diag, integer *n, integer *k, real *ab, integer *ldab, real *work, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
extern real slantp(character *norm, character *uplo, character *diag, integer *n, real *ap, real *work, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
extern real slantr(character *norm, character *uplo, character *diag, integer *m, integer *n, real *a, integer *lda, real *work, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
void slanv2(real *a, real *b, real *c, real *d, real *rt1r, real *rt1i, real *rt2r, real *rt2i, real *cs, real *sn);
void slapll(integer *n, real *x, integer *incx, real *y, integer *incy, real *ssmin);
void slapmt(logical *forwrd, integer *m, integer *n, real *x, integer *ldx, integer *k);
extern real slapy2(real *x, real *y);
extern real slapy3(real *x, real *y, real *z);
void slaqgb(integer *m, integer *n, integer *kl, integer *ku, real *ab, integer *ldab, real *r, real *c, real *rowcnd, real *colcnd, real *amax, character *equed, ftnlen equedlen);
void slaqge(integer *m, integer *n, real *a, integer *lda, real *r, real *c, real *rowcnd, real *colcnd, real *amax, character *equed, ftnlen equedlen);
void slaqp2(integer *m, integer *n, integer *offset, real *a, integer *lda, integer *jpvt, real *tau, real *vn1, real *vn2, real *work);
void slaqps(integer *m, integer *n, integer *offset, integer *nb, integer *kb, real *a, integer *lda, integer *jpvt, real *tau, real *vn1, real *vn2, real *auxv, real *f, integer *ldf);
void slaqsb(character *uplo, integer *n, integer *kd, real *ab, integer *ldab, real *s, real *scond, real *amax, character *equed, ftnlen uplolen, ftnlen equedlen);
void slaqsp(character *uplo, integer *n, real *ap, real *s, real *scond, real *amax, character *equed, ftnlen uplolen, ftnlen equedlen);
void slaqsy(character *uplo, integer *n, real *a, integer *lda, real *s, real *scond, real *amax, character *equed, ftnlen uplolen, ftnlen equedlen);
void slaqtr(logical *ltran, logical *lreal, integer *n, real *t, integer *ldt, real *b, real *w, real *scale, real *x, real *work, integer *info);
void slar1v(integer *n, integer *b1, integer *bn, real *sigma, real *d, real *l, real *ld, real *lld, real *gersch, real *z, real *ztz, real *mingma, integer *r, integer *isuppz, real *work);
void slar2v(integer *n, real *x, real *y, real *z, integer *incx, real *c, real *s, integer *incc);
void slarf(character *side, integer *m, integer *n, real *v, integer *incv, real *tau, real *c, integer *ldc, real *work, ftnlen sidelen);
void slarfb(character *side, character *trans, character *direct, character *storev, integer *m, integer *n, integer *k, real *v, integer *ldv, real *t, integer *ldt, real *c, integer *ldc, real *work, integer *ldwork, ftnlen sidelen, ftnlen translen, ftnlen directlen, ftnlen storevlen);
void slarfg(integer *n, real *alpha, real *x, integer *incx, real *tau);
void slarft(character *direct, character *storev, integer *n, integer *k, real *v, integer *ldv, real *tau, real *t, integer *ldt, ftnlen directlen, ftnlen storevlen);
void slarfx(character *side, integer *m, integer *n, real *v, real *tau, real *c, integer *ldc, real *work, ftnlen sidelen);
void slargv(integer *n, real *x, integer *incx, real *y, integer *incy, real *c, integer *incc);
void slarnv(integer *idist, integer *iseed, integer *n, real *x);
void slarrb(integer *n, real *d, real *l, real *ld, real *lld, integer *ifirst, integer *ilast, real *sigma, real *reltol, real *w, real *wgap, real *werr, real *work, integer *iwork, integer *info);
void slarre(integer *n, real *d, real *e, real *tol, integer *nsplit, integer *isplit, integer *m, real *w, real *woff, real *gersch, real *work, integer *info);
void slarrf(integer *n, real *d, real *l, real *ld, real *lld, integer *ifirst, integer *ilast, real *w, real *dplus, real *lplus, real *work, integer *iwork, integer *info);
void slarrv(integer *n, real *d, real *l, integer *isplit, integer *m, real *w, integer *iblock, real *gersch, real *tol, real *z, integer *ldz, integer *isuppz, real *work, integer *iwork, integer *info);
void slartg(real *f, real *g, real *cs, real *sn, real *r);
void slartv(integer *n, real *x, integer *incx, real *y, integer *incy, real *c, real *s, integer *incc);
void slaruv(integer *iseed, integer *n, real *x);
void slarz(character *side, integer *m, integer *n, integer *l, real *v, integer *incv, real *tau, real *c, integer *ldc, real *work, ftnlen sidelen);
void slarzb(character *side, character *trans, character *direct, character *storev, integer *m, integer *n, integer *k, integer *l, real *v, integer *ldv, real *t, integer *ldt, real *c, integer *ldc, real *work, integer *ldwork, ftnlen sidelen, ftnlen translen, ftnlen directlen, ftnlen storevlen);
void slarzt(character *direct, character *storev, integer *n, integer *k, real *v, integer *ldv, real *tau, real *t, integer *ldt, ftnlen directlen, ftnlen storevlen);
void slas2(real *f, real *g, real *h, real *ssmin, real *ssmax);
void slascl(character *type, integer *kl, integer *ku, real *cfrom, real *cto, integer *m, integer *n, real *a, integer *lda, integer *info, ftnlen typelen);
void slasd0(integer *n, integer *sqre, real *d, real *e, real *u, integer *ldu, real *vt, integer *ldvt, integer *smlsiz, integer *iwork, real *work, integer *info);
void slasd1(integer *nl, integer *nr, integer *sqre, real *d, real *alpha, real *beta, real *u, integer *ldu, real *vt, integer *ldvt, integer *idxq, integer *iwork, real *work, integer *info);
void slasd2(integer *nl, integer *nr, integer *sqre, integer *k, real *d, real *z, real *alpha, real *beta, real *u, integer *ldu, real *vt, integer *ldvt, real *dsigma, real *u2, integer *ldu2, real *vt2, integer *ldvt2, integer *idxp, integer *idx, integer *idxc, integer *idxq, integer *coltyp, integer *info);
void slasd3(integer *nl, integer *nr, integer *sqre, integer *k, real *d, real *q, integer *ldq, real *dsigma, real *u, integer *ldu, real *u2, integer *ldu2, real *vt, integer *ldvt, real *vt2, integer *ldvt2, integer *idxc, integer *ctot, real *z, integer *info);
void slasd4(integer *n, integer *i, real *d, real *z, real *delta, real *rho, real *sigma, real *work, integer *info);
void slasd5(integer *i, real *d, real *z, real *delta, real *rho, real *dsigma, real *work);
void slasd6(integer *icompq, integer *nl, integer *nr, integer *sqre, real *d, real *vf, real *vl, real *alpha, real *beta, integer *idxq, integer *perm, integer *givptr, integer *givcol, integer *ldgcol, real *givnum, integer *ldgnum, real *poles, real *difl, real *difr, real *z, integer *k, real *c, real *s, real *work, integer *iwork, integer *info);
void slasd7(integer *icompq, integer *nl, integer *nr, integer *sqre, integer *k, real *d, real *z, real *zw, real *vf, real *vfw, real *vl, real *vlw, real *alpha, real *beta, real *dsigma, integer *idx, integer *idxp, integer *idxq, integer *perm, integer *givptr, integer *givcol, integer *ldgcol, real *givnum, integer *ldgnum, real *c, real *s, integer *info);
void slasd8(integer *icompq, integer *k, real *d, real *z, real *vf, real *vl, real *difl, real *difr, integer *lddifr, real *dsigma, real *work, integer *info);
void slasd9(integer *icompq, integer *ldu, integer *k, real *d, real *z, real *vf, real *vl, real *difl, real *difr, real *dsigma, real *work, integer *info);
void slasda(integer *icompq, integer *smlsiz, integer *n, integer *sqre, real *d, real *e, real *u, integer *ldu, real *vt, integer *k, real *difl, real *difr, real *z, real *poles, integer *givptr, integer *givcol, integer *ldgcol, integer *perm, real *givnum, real *c, real *s, real *work, integer *iwork, integer *info);
void slasdq(character *uplo, integer *sqre, integer *n, integer *ncvt, integer *nru, integer *ncc, real *d, real *e, real *vt, integer *ldvt, real *u, integer *ldu, real *c, integer *ldc, real *work, integer *info, ftnlen uplolen);
void slasdt(integer *n, integer *lvl, integer *nd, integer *inode, integer *ndiml, integer *ndimr, integer *msub);
void slaset(character *uplo, integer *m, integer *n, real *alpha, real *beta, real *a, integer *lda, ftnlen uplolen);
void slasq1(integer *n, real *d, real *e, real *work, integer *info);
void slasq2(integer *n, real *z, integer *info);
void slasq3(integer *i0, integer *n0, real *z, integer *pp, real *dmin, real *sigma, real *desig, real *qmax, integer *nfail, integer *iter, integer *ndiv, logical *ieee);
void slasq4(integer *i0, integer *n0, real *z, integer *pp, integer *n0in, real *dmin, real *dmin1, real *dmin2, real *dn, real *dn1, real *dn2, real *tau, integer *ttype);
void slasq5(integer *i0, integer *n0, real *z, integer *pp, real *tau, real *dmin, real *dmin1, real *dmin2, real *dn, real *dnm1, real *dnm2, logical *ieee);
void slasq6(integer *i0, integer *n0, real *z, integer *pp, real *dmin, real *dmin1, real *dmin2, real *dn, real *dnm1, real *dnm2);
void slasr(character *side, character *pivot, character *direct, integer *m, integer *n, real *c, real *s, real *a, integer *lda, ftnlen sidelen, ftnlen pivotlen, ftnlen directlen);
void slasrt(character *id, integer *n, real *d, integer *info, ftnlen idlen);
void slassq(integer *n, real *x, integer *incx, real *scale, real *sumsq);
void slasv2(real *f, real *g, real *h, real *ssmin, real *ssmax, real *snr, real *csr, real *snl, real *csl);
void slaswp(integer *n, real *a, integer *lda, integer *k1, integer *k2, integer *ipiv, integer *incx);
void slasy2(logical *ltranl, logical *ltranr, integer *isgn, integer *n1, integer *n2, real *tl, integer *ldtl, real *tr, integer *ldtr, real *b, integer *ldb, real *scale, real *x, integer *ldx, real *xnorm, integer *info);
void slasyf(character *uplo, integer *n, integer *nb, integer *kb, real *a, integer *lda, integer *ipiv, real *w, integer *ldw, integer *info, ftnlen uplolen);
void slatbs(character *uplo, character *trans, character *diag, character *normin, integer *n, integer *kd, real *ab, integer *ldab, real *x, real *scale, real *cnorm, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen, ftnlen norminlen);
void slatdf(integer *ijob, integer *n, real *z, integer *ldz, real *rhs, real *rdsum, real *rdscal, integer *ipiv, integer *jpiv);
void slatps(character *uplo, character *trans, character *diag, character *normin, integer *n, real *ap, real *x, real *scale, real *cnorm, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen, ftnlen norminlen);
void slatrd(character *uplo, integer *n, integer *nb, real *a, integer *lda, real *e, real *tau, real *w, integer *ldw, ftnlen uplolen);
void slatrs(character *uplo, character *trans, character *diag, character *normin, integer *n, real *a, integer *lda, real *x, real *scale, real *cnorm, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen, ftnlen norminlen);
void slatrz(integer *m, integer *n, integer *l, real *a, integer *lda, real *tau, real *work);
void slatzm(character *side, integer *m, integer *n, real *v, integer *incv, real *tau, real *c1, real *c2, integer *ldc, real *work, ftnlen sidelen);
void slauu2(character *uplo, integer *n, real *a, integer *lda, integer *info, ftnlen uplolen);
void slauum(character *uplo, integer *n, real *a, integer *lda, integer *info, ftnlen uplolen);
void sopgtr(character *uplo, integer *n, real *ap, real *tau, real *q, integer *ldq, real *work, integer *info, ftnlen uplolen);
void sopmtr(character *side, character *uplo, character *trans, integer *m, integer *n, real *ap, real *tau, real *c, integer *ldc, real *work, integer *info, ftnlen sidelen, ftnlen uplolen, ftnlen translen);
void sorg2l(integer *m, integer *n, integer *k, real *a, integer *lda, real *tau, real *work, integer *info);
void sorg2r(integer *m, integer *n, integer *k, real *a, integer *lda, real *tau, real *work, integer *info);
void sorgbr(character *vect, integer *m, integer *n, integer *k, real *a, integer *lda, real *tau, real *work, integer *lwork, integer *info, ftnlen vectlen);
void sorghr(integer *n, integer *ilo, integer *ihi, real *a, integer *lda, real *tau, real *work, integer *lwork, integer *info);
void sorgl2(integer *m, integer *n, integer *k, real *a, integer *lda, real *tau, real *work, integer *info);
void sorglq(integer *m, integer *n, integer *k, real *a, integer *lda, real *tau, real *work, integer *lwork, integer *info);
void sorgql(integer *m, integer *n, integer *k, real *a, integer *lda, real *tau, real *work, integer *lwork, integer *info);
void sorgqr(integer *m, integer *n, integer *k, real *a, integer *lda, real *tau, real *work, integer *lwork, integer *info);
void sorgr2(integer *m, integer *n, integer *k, real *a, integer *lda, real *tau, real *work, integer *info);
void sorgrq(integer *m, integer *n, integer *k, real *a, integer *lda, real *tau, real *work, integer *lwork, integer *info);
void sorgtr(character *uplo, integer *n, real *a, integer *lda, real *tau, real *work, integer *lwork, integer *info, ftnlen uplolen);
void sorm2l(character *side, character *trans, integer *m, integer *n, integer *k, real *a, integer *lda, real *tau, real *c, integer *ldc, real *work, integer *info, ftnlen sidelen, ftnlen translen);
void sorm2r(character *side, character *trans, integer *m, integer *n, integer *k, real *a, integer *lda, real *tau, real *c, integer *ldc, real *work, integer *info, ftnlen sidelen, ftnlen translen);
void sormbr(character *vect, character *side, character *trans, integer *m, integer *n, integer *k, real *a, integer *lda, real *tau, real *c, integer *ldc, real *work, integer *lwork, integer *info, ftnlen vectlen, ftnlen sidelen, ftnlen translen);
void sormhr(character *side, character *trans, integer *m, integer *n, integer *ilo, integer *ihi, real *a, integer *lda, real *tau, real *c, integer *ldc, real *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void sorml2(character *side, character *trans, integer *m, integer *n, integer *k, real *a, integer *lda, real *tau, real *c, integer *ldc, real *work, integer *info, ftnlen sidelen, ftnlen translen);
void sormlq(character *side, character *trans, integer *m, integer *n, integer *k, real *a, integer *lda, real *tau, real *c, integer *ldc, real *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void sormql(character *side, character *trans, integer *m, integer *n, integer *k, real *a, integer *lda, real *tau, real *c, integer *ldc, real *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void sormqr(character *side, character *trans, integer *m, integer *n, integer *k, real *a, integer *lda, real *tau, real *c, integer *ldc, real *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void sormr2(character *side, character *trans, integer *m, integer *n, integer *k, real *a, integer *lda, real *tau, real *c, integer *ldc, real *work, integer *info, ftnlen sidelen, ftnlen translen);
void sormr3(character *side, character *trans, integer *m, integer *n, integer *k, integer *l, real *a, integer *lda, real *tau, real *c, integer *ldc, real *work, integer *info, ftnlen sidelen, ftnlen translen);
void sormrq(character *side, character *trans, integer *m, integer *n, integer *k, real *a, integer *lda, real *tau, real *c, integer *ldc, real *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void sormrz(character *side, character *trans, integer *m, integer *n, integer *k, integer *l, real *a, integer *lda, real *tau, real *c, integer *ldc, real *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void sormtr(character *side, character *uplo, character *trans, integer *m, integer *n, real *a, integer *lda, real *tau, real *c, integer *ldc, real *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen uplolen, ftnlen translen);
void spbcon(character *uplo, integer *n, integer *kd, real *ab, integer *ldab, real *anorm, real *rcond, real *work, integer *iwork, integer *info, ftnlen uplolen);
void spbequ(character *uplo, integer *n, integer *kd, real *ab, integer *ldab, real *s, real *scond, real *amax, integer *info, ftnlen uplolen);
void spbrfs(character *uplo, integer *n, integer *kd, integer *nrhs, real *ab, integer *ldab, real *afb, integer *ldafb, real *b, integer *ldb, real *x, integer *ldx, real *ferr, real *berr, real *work, integer *iwork, integer *info, ftnlen uplolen);
void spbstf(character *uplo, integer *n, integer *kd, real *ab, integer *ldab, integer *info, ftnlen uplolen);
void spbsv(character *uplo, integer *n, integer *kd, integer *nrhs, real *ab, integer *ldab, real *b, integer *ldb, integer *info, ftnlen uplolen);
void spbsvx(character *fact, character *uplo, integer *n, integer *kd, integer *nrhs, real *ab, integer *ldab, real *afb, integer *ldafb, character *equed, real *s, real *b, integer *ldb, real *x, integer *ldx, real *rcond, real *ferr, real *berr, real *work, integer *iwork, integer *info, ftnlen factlen, ftnlen uplolen, ftnlen equedlen);
void spbtf2(character *uplo, integer *n, integer *kd, real *ab, integer *ldab, integer *info, ftnlen uplolen);
void spbtrf(character *uplo, integer *n, integer *kd, real *ab, integer *ldab, integer *info, ftnlen uplolen);
void spbtrs(character *uplo, integer *n, integer *kd, integer *nrhs, real *ab, integer *ldab, real *b, integer *ldb, integer *info, ftnlen uplolen);
void spocon(character *uplo, integer *n, real *a, integer *lda, real *anorm, real *rcond, real *work, integer *iwork, integer *info, ftnlen uplolen);
void spoequ(integer *n, real *a, integer *lda, real *s, real *scond, real *amax, integer *info);
void sporfs(character *uplo, integer *n, integer *nrhs, real *a, integer *lda, real *af, integer *ldaf, real *b, integer *ldb, real *x, integer *ldx, real *ferr, real *berr, real *work, integer *iwork, integer *info, ftnlen uplolen);
void sposv(character *uplo, integer *n, integer *nrhs, real *a, integer *lda, real *b, integer *ldb, integer *info, ftnlen uplolen);
void sposvx(character *fact, character *uplo, integer *n, integer *nrhs, real *a, integer *lda, real *af, integer *ldaf, character *equed, real *s, real *b, integer *ldb, real *x, integer *ldx, real *rcond, real *ferr, real *berr, real *work, integer *iwork, integer *info, ftnlen factlen, ftnlen uplolen, ftnlen equedlen);
void spotf2(character *uplo, integer *n, real *a, integer *lda, integer *info, ftnlen uplolen);
void spotrf(character *uplo, integer *n, real *a, integer *lda, integer *info, ftnlen uplolen);
void spotri(character *uplo, integer *n, real *a, integer *lda, integer *info, ftnlen uplolen);
void spotrs(character *uplo, integer *n, integer *nrhs, real *a, integer *lda, real *b, integer *ldb, integer *info, ftnlen uplolen);
void sppcon(character *uplo, integer *n, real *ap, real *anorm, real *rcond, real *work, integer *iwork, integer *info, ftnlen uplolen);
void sppequ(character *uplo, integer *n, real *ap, real *s, real *scond, real *amax, integer *info, ftnlen uplolen);
void spprfs(character *uplo, integer *n, integer *nrhs, real *ap, real *afp, real *b, integer *ldb, real *x, integer *ldx, real *ferr, real *berr, real *work, integer *iwork, integer *info, ftnlen uplolen);
void sppsv(character *uplo, integer *n, integer *nrhs, real *ap, real *b, integer *ldb, integer *info, ftnlen uplolen);
void sppsvx(character *fact, character *uplo, integer *n, integer *nrhs, real *ap, real *afp, character *equed, real *s, real *b, integer *ldb, real *x, integer *ldx, real *rcond, real *ferr, real *berr, real *work, integer *iwork, integer *info, ftnlen factlen, ftnlen uplolen, ftnlen equedlen);
void spptrf(character *uplo, integer *n, real *ap, integer *info, ftnlen uplolen);
void spptri(character *uplo, integer *n, real *ap, integer *info, ftnlen uplolen);
void spptrs(character *uplo, integer *n, integer *nrhs, real *ap, real *b, integer *ldb, integer *info, ftnlen uplolen);
void sptcon(integer *n, real *d, real *e, real *anorm, real *rcond, real *work, integer *info);
void spteqr(character *compz, integer *n, real *d, real *e, real *z, integer *ldz, real *work, integer *info, ftnlen compzlen);
void sptrfs(integer *n, integer *nrhs, real *d, real *e, real *df, real *ef, real *b, integer *ldb, real *x, integer *ldx, real *ferr, real *berr, real *work, integer *info);
void sptsv(integer *n, integer *nrhs, real *d, real *e, real *b, integer *ldb, integer *info);
void sptsvx(character *fact, integer *n, integer *nrhs, real *d, real *e, real *df, real *ef, real *b, integer *ldb, real *x, integer *ldx, real *rcond, real *ferr, real *berr, real *work, integer *info, ftnlen factlen);
void spttrf(integer *n, real *d, real *e, integer *info);
void spttrs(integer *n, integer *nrhs, real *d, real *e, real *b, integer *ldb, integer *info);
void sptts2(integer *n, integer *nrhs, real *d, real *e, real *b, integer *ldb);
void srscl(integer *n, real *sa, real *sx, integer *incx);
void ssbev(character *jobz, character *uplo, integer *n, integer *kd, real *ab, integer *ldab, real *w, real *z, integer *ldz, real *work, integer *info, ftnlen jobzlen, ftnlen uplolen);
void ssbevd(character *jobz, character *uplo, integer *n, integer *kd, real *ab, integer *ldab, real *w, real *z, integer *ldz, real *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void ssbevx(character *jobz, character *range, character *uplo, integer *n, integer *kd, real *ab, integer *ldab, real *q, integer *ldq, real *vl, real *vu, integer *il, integer *iu, real *abstol, integer *m, real *w, real *z, integer *ldz, real *work, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void ssbgst(character *vect, character *uplo, integer *n, integer *ka, integer *kb, real *ab, integer *ldab, real *bb, integer *ldbb, real *x, integer *ldx, real *work, integer *info, ftnlen vectlen, ftnlen uplolen);
void ssbgv(character *jobz, character *uplo, integer *n, integer *ka, integer *kb, real *ab, integer *ldab, real *bb, integer *ldbb, real *w, real *z, integer *ldz, real *work, integer *info, ftnlen jobzlen, ftnlen uplolen);
void ssbgvd(character *jobz, character *uplo, integer *n, integer *ka, integer *kb, real *ab, integer *ldab, real *bb, integer *ldbb, real *w, real *z, integer *ldz, real *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void ssbgvx(character *jobz, character *range, character *uplo, integer *n, integer *ka, integer *kb, real *ab, integer *ldab, real *bb, integer *ldbb, real *q, integer *ldq, real *vl, real *vu, integer *il, integer *iu, real *abstol, integer *m, real *w, real *z, integer *ldz, real *work, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void ssbtrd(character *vect, character *uplo, integer *n, integer *kd, real *ab, integer *ldab, real *d, real *e, real *q, integer *ldq, real *work, integer *info, ftnlen vectlen, ftnlen uplolen);
void sspcon(character *uplo, integer *n, real *ap, integer *ipiv, real *anorm, real *rcond, real *work, integer *iwork, integer *info, ftnlen uplolen);
void sspev(character *jobz, character *uplo, integer *n, real *ap, real *w, real *z, integer *ldz, real *work, integer *info, ftnlen jobzlen, ftnlen uplolen);
void sspevd(character *jobz, character *uplo, integer *n, real *ap, real *w, real *z, integer *ldz, real *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void sspevx(character *jobz, character *range, character *uplo, integer *n, real *ap, real *vl, real *vu, integer *il, integer *iu, real *abstol, integer *m, real *w, real *z, integer *ldz, real *work, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void sspgst(integer *itype, character *uplo, integer *n, real *ap, real *bp, integer *info, ftnlen uplolen);
void sspgv(integer *itype, character *jobz, character *uplo, integer *n, real *ap, real *bp, real *w, real *z, integer *ldz, real *work, integer *info, ftnlen jobzlen, ftnlen uplolen);
void sspgvd(integer *itype, character *jobz, character *uplo, integer *n, real *ap, real *bp, real *w, real *z, integer *ldz, real *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void sspgvx(integer *itype, character *jobz, character *range, character *uplo, integer *n, real *ap, real *bp, real *vl, real *vu, integer *il, integer *iu, real *abstol, integer *m, real *w, real *z, integer *ldz, real *work, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void ssprfs(character *uplo, integer *n, integer *nrhs, real *ap, real *afp, integer *ipiv, real *b, integer *ldb, real *x, integer *ldx, real *ferr, real *berr, real *work, integer *iwork, integer *info, ftnlen uplolen);
void sspsv(character *uplo, integer *n, integer *nrhs, real *ap, integer *ipiv, real *b, integer *ldb, integer *info, ftnlen uplolen);
void sspsvx(character *fact, character *uplo, integer *n, integer *nrhs, real *ap, real *afp, integer *ipiv, real *b, integer *ldb, real *x, integer *ldx, real *rcond, real *ferr, real *berr, real *work, integer *iwork, integer *info, ftnlen factlen, ftnlen uplolen);
void ssptrd(character *uplo, integer *n, real *ap, real *d, real *e, real *tau, integer *info, ftnlen uplolen);
void ssptrf(character *uplo, integer *n, real *ap, integer *ipiv, integer *info, ftnlen uplolen);
void ssptri(character *uplo, integer *n, real *ap, integer *ipiv, real *work, integer *info, ftnlen uplolen);
void ssptrs(character *uplo, integer *n, integer *nrhs, real *ap, integer *ipiv, real *b, integer *ldb, integer *info, ftnlen uplolen);
void sstebz(character *range, character *order, integer *n, real *vl, real *vu, integer *il, integer *iu, real *abstol, real *d, real *e, integer *m, integer *nsplit, real *w, integer *iblock, integer *isplit, real *work, integer *iwork, integer *info, ftnlen rangelen, ftnlen orderlen);
void sstedc(character *compz, integer *n, real *d, real *e, real *z, integer *ldz, real *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen compzlen);
void sstegr(character *jobz, character *range, integer *n, real *d, real *e, real *vl, real *vu, integer *il, integer *iu, real *abstol, integer *m, real *w, real *z, integer *ldz, integer *isuppz, real *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen rangelen);
void sstein(integer *n, real *d, real *e, integer *m, real *w, integer *iblock, integer *isplit, real *z, integer *ldz, real *work, integer *iwork, integer *ifail, integer *info);
void ssteqr(character *compz, integer *n, real *d, real *e, real *z, integer *ldz, real *work, integer *info, ftnlen compzlen);
void ssterf(integer *n, real *d, real *e, integer *info);
void sstev(character *jobz, integer *n, real *d, real *e, real *z, integer *ldz, real *work, integer *info, ftnlen jobzlen);
void sstevd(character *jobz, integer *n, real *d, real *e, real *z, integer *ldz, real *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen);
void sstevr(character *jobz, character *range, integer *n, real *d, real *e, real *vl, real *vu, integer *il, integer *iu, real *abstol, integer *m, real *w, real *z, integer *ldz, integer *isuppz, real *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen rangelen);
void sstevx(character *jobz, character *range, integer *n, real *d, real *e, real *vl, real *vu, integer *il, integer *iu, real *abstol, integer *m, real *w, real *z, integer *ldz, real *work, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen);
void ssycon(character *uplo, integer *n, real *a, integer *lda, integer *ipiv, real *anorm, real *rcond, real *work, integer *iwork, integer *info, ftnlen uplolen);
void ssyev(character *jobz, character *uplo, integer *n, real *a, integer *lda, real *w, real *work, integer *lwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void ssyevd(character *jobz, character *uplo, integer *n, real *a, integer *lda, real *w, real *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void ssyevr(character *jobz, character *range, character *uplo, integer *n, real *a, integer *lda, real *vl, real *vu, integer *il, integer *iu, real *abstol, integer *m, real *w, real *z, integer *ldz, integer *isuppz, real *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void ssyevx(character *jobz, character *range, character *uplo, integer *n, real *a, integer *lda, real *vl, real *vu, integer *il, integer *iu, real *abstol, integer *m, real *w, real *z, integer *ldz, real *work, integer *lwork, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void ssygs2(integer *itype, character *uplo, integer *n, real *a, integer *lda, real *b, integer *ldb, integer *info, ftnlen uplolen);
void ssygst(integer *itype, character *uplo, integer *n, real *a, integer *lda, real *b, integer *ldb, integer *info, ftnlen uplolen);
void ssygv(integer *itype, character *jobz, character *uplo, integer *n, real *a, integer *lda, real *b, integer *ldb, real *w, real *work, integer *lwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void ssygvd(integer *itype, character *jobz, character *uplo, integer *n, real *a, integer *lda, real *b, integer *ldb, real *w, real *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void ssygvx(integer *itype, character *jobz, character *range, character *uplo, integer *n, real *a, integer *lda, real *b, integer *ldb, real *vl, real *vu, integer *il, integer *iu, real *abstol, integer *m, real *w, real *z, integer *ldz, real *work, integer *lwork, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void ssyrfs(character *uplo, integer *n, integer *nrhs, real *a, integer *lda, real *af, integer *ldaf, integer *ipiv, real *b, integer *ldb, real *x, integer *ldx, real *ferr, real *berr, real *work, integer *iwork, integer *info, ftnlen uplolen);
void ssysv(character *uplo, integer *n, integer *nrhs, real *a, integer *lda, integer *ipiv, real *b, integer *ldb, real *work, integer *lwork, integer *info, ftnlen uplolen);
void ssysvx(character *fact, character *uplo, integer *n, integer *nrhs, real *a, integer *lda, real *af, integer *ldaf, integer *ipiv, real *b, integer *ldb, real *x, integer *ldx, real *rcond, real *ferr, real *berr, real *work, integer *lwork, integer *iwork, integer *info, ftnlen factlen, ftnlen uplolen);
void ssytd2(character *uplo, integer *n, real *a, integer *lda, real *d, real *e, real *tau, integer *info, ftnlen uplolen);
void ssytf2(character *uplo, integer *n, real *a, integer *lda, integer *ipiv, integer *info, ftnlen uplolen);
void ssytrd(character *uplo, integer *n, real *a, integer *lda, real *d, real *e, real *tau, real *work, integer *lwork, integer *info, ftnlen uplolen);
void ssytrf(character *uplo, integer *n, real *a, integer *lda, integer *ipiv, real *work, integer *lwork, integer *info, ftnlen uplolen);
void ssytri(character *uplo, integer *n, real *a, integer *lda, integer *ipiv, real *work, integer *info, ftnlen uplolen);
void ssytrs(character *uplo, integer *n, integer *nrhs, real *a, integer *lda, integer *ipiv, real *b, integer *ldb, integer *info, ftnlen uplolen);
void stbcon(character *norm, character *uplo, character *diag, integer *n, integer *kd, real *ab, integer *ldab, real *rcond, real *work, integer *iwork, integer *info, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
void stbrfs(character *uplo, character *trans, character *diag, integer *n, integer *kd, integer *nrhs, real *ab, integer *ldab, real *b, integer *ldb, real *x, integer *ldx, real *ferr, real *berr, real *work, integer *iwork, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void stbtrs(character *uplo, character *trans, character *diag, integer *n, integer *kd, integer *nrhs, real *ab, integer *ldab, real *b, integer *ldb, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void stgevc(character *side, character *howmny, logical *select, integer *n, real *a, integer *lda, real *b, integer *ldb, real *vl, integer *ldvl, real *vr, integer *ldvr, integer *mm, integer *m, real *work, integer *info, ftnlen sidelen, ftnlen howmnylen);
void stgex2(logical *wantq, logical *wantz, integer *n, real *a, integer *lda, real *b, integer *ldb, real *q, integer *ldq, real *z, integer *ldz, integer *j1, integer *n1, integer *n2, real *work, integer *lwork, integer *info);
void stgexc(logical *wantq, logical *wantz, integer *n, real *a, integer *lda, real *b, integer *ldb, real *q, integer *ldq, real *z, integer *ldz, integer *ifst, integer *ilst, real *work, integer *lwork, integer *info);
void stgsen(integer *ijob, logical *wantq, logical *wantz, logical *select, integer *n, real *a, integer *lda, real *b, integer *ldb, real *alphar, real *alphai, real *beta, real *q, integer *ldq, real *z, integer *ldz, integer *m, real *pl, real *pr, real *dif, real *work, integer *lwork, integer *iwork, integer *liwork, integer *info);
void stgsja(character *jobu, character *jobv, character *jobq, integer *m, integer *p, integer *n, integer *k, integer *l, real *a, integer *lda, real *b, integer *ldb, real *tola, real *tolb, real *alpha, real *beta, real *u, integer *ldu, real *v, integer *ldv, real *q, integer *ldq, real *work, integer *ncycle, integer *info, ftnlen jobulen, ftnlen jobvlen, ftnlen jobqlen);
void stgsna(character *job, character *howmny, logical *select, integer *n, real *a, integer *lda, real *b, integer *ldb, real *vl, integer *ldvl, real *vr, integer *ldvr, real *s, real *dif, integer *mm, integer *m, real *work, integer *lwork, integer *iwork, integer *info, ftnlen joblen, ftnlen howmnylen);
void stgsy2(character *trans, integer *ijob, integer *m, integer *n, real *a, integer *lda, real *b, integer *ldb, real *c, integer *ldc, real *d, integer *ldd, real *e, integer *lde, real *f, integer *ldf, real *scale, real *rdsum, real *rdscal, integer *iwork, integer *pq, integer *info, ftnlen translen);
void stgsyl(character *trans, integer *ijob, integer *m, integer *n, real *a, integer *lda, real *b, integer *ldb, real *c, integer *ldc, real *d, integer *ldd, real *e, integer *lde, real *f, integer *ldf, real *scale, real *dif, real *work, integer *lwork, integer *iwork, integer *info, ftnlen translen);
void stpcon(character *norm, character *uplo, character *diag, integer *n, real *ap, real *rcond, real *work, integer *iwork, integer *info, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
void stprfs(character *uplo, character *trans, character *diag, integer *n, integer *nrhs, real *ap, real *b, integer *ldb, real *x, integer *ldx, real *ferr, real *berr, real *work, integer *iwork, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void stptri(character *uplo, character *diag, integer *n, real *ap, integer *info, ftnlen uplolen, ftnlen diaglen);
void stptrs(character *uplo, character *trans, character *diag, integer *n, integer *nrhs, real *ap, real *b, integer *ldb, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void strcon(character *norm, character *uplo, character *diag, integer *n, real *a, integer *lda, real *rcond, real *work, integer *iwork, integer *info, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
void strevc(character *side, character *howmny, logical *select, integer *n, real *t, integer *ldt, real *vl, integer *ldvl, real *vr, integer *ldvr, integer *mm, integer *m, real *work, integer *info, ftnlen sidelen, ftnlen howmnylen);
void strexc(character *compq, integer *n, real *t, integer *ldt, real *q, integer *ldq, integer *ifst, integer *ilst, real *work, integer *info, ftnlen compqlen);
void strrfs(character *uplo, character *trans, character *diag, integer *n, integer *nrhs, real *a, integer *lda, real *b, integer *ldb, real *x, integer *ldx, real *ferr, real *berr, real *work, integer *iwork, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void strsen(character *job, character *compq, logical *select, integer *n, real *t, integer *ldt, real *q, integer *ldq, real *wr, real *wi, integer *m, real *s, real *sep, real *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen joblen, ftnlen compqlen);
void strsna(character *job, character *howmny, logical *select, integer *n, real *t, integer *ldt, real *vl, integer *ldvl, real *vr, integer *ldvr, real *s, real *sep, integer *mm, integer *m, real *work, integer *ldwork, integer *iwork, integer *info, ftnlen joblen, ftnlen howmnylen);
void strsyl(character *trana, character *tranb, integer *isgn, integer *m, integer *n, real *a, integer *lda, real *b, integer *ldb, real *c, integer *ldc, real *scale, integer *info, ftnlen tranalen, ftnlen tranblen);
void strti2(character *uplo, character *diag, integer *n, real *a, integer *lda, integer *info, ftnlen uplolen, ftnlen diaglen);
void strtri(character *uplo, character *diag, integer *n, real *a, integer *lda, integer *info, ftnlen uplolen, ftnlen diaglen);
void strtrs(character *uplo, character *trans, character *diag, integer *n, integer *nrhs, real *a, integer *lda, real *b, integer *ldb, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void stzrqf(integer *m, integer *n, real *a, integer *lda, real *tau, integer *info);
void stzrzf(integer *m, integer *n, real *a, integer *lda, real *tau, real *work, integer *lwork, integer *info);
void xerbla(character *srname, integer *info, ftnlen srnamelen);
void zbdsqr(character *uplo, integer *n, integer *ncvt, integer *nru, integer *ncc, doubleprecision *d, doubleprecision *e, ilu_doublecomplex *vt, integer *ldvt, ilu_doublecomplex *u, integer *ldu, ilu_doublecomplex *c, integer *ldc, doubleprecision *rwork, integer *info, ftnlen uplolen);
void zdrot(integer *n, ilu_doublecomplex *cx, integer *incx, ilu_doublecomplex *cy, integer *incy, doubleprecision *c, doubleprecision *s);
void zdrscl(integer *n, doubleprecision *sa, ilu_doublecomplex *sx, integer *incx);
void zgbbrd(character *vect, integer *m, integer *n, integer *ncc, integer *kl, integer *ku, ilu_doublecomplex *ab, integer *ldab, doubleprecision *d, doubleprecision *e, ilu_doublecomplex *q, integer *ldq, ilu_doublecomplex *pt, integer *ldpt, ilu_doublecomplex *c, integer *ldc, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen vectlen);
void zgbcon(character *norm, integer *n, integer *kl, integer *ku, ilu_doublecomplex *ab, integer *ldab, integer *ipiv, doubleprecision *anorm, doubleprecision *rcond, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen normlen);
void zgbequ(integer *m, integer *n, integer *kl, integer *ku, ilu_doublecomplex *ab, integer *ldab, doubleprecision *r, doubleprecision *c, doubleprecision *rowcnd, doubleprecision *colcnd, doubleprecision *amax, integer *info);
void zgbrfs(character *trans, integer *n, integer *kl, integer *ku, integer *nrhs, ilu_doublecomplex *ab, integer *ldab, ilu_doublecomplex *afb, integer *ldafb, integer *ipiv, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen translen);
void zgbsv(integer *n, integer *kl, integer *ku, integer *nrhs, ilu_doublecomplex *ab, integer *ldab, integer *ipiv, ilu_doublecomplex *b, integer *ldb, integer *info);
void zgbsvx(character *fact, character *trans, integer *n, integer *kl, integer *ku, integer *nrhs, ilu_doublecomplex *ab, integer *ldab, ilu_doublecomplex *afb, integer *ldafb, integer *ipiv, character *equed, doubleprecision *r, doubleprecision *c, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *rcond, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen factlen, ftnlen translen, ftnlen equedlen);
void zgbtf2(integer *m, integer *n, integer *kl, integer *ku, ilu_doublecomplex *ab, integer *ldab, integer *ipiv, integer *info);
void zgbtrf(integer *m, integer *n, integer *kl, integer *ku, ilu_doublecomplex *ab, integer *ldab, integer *ipiv, integer *info);
void zgbtrs(character *trans, integer *n, integer *kl, integer *ku, integer *nrhs, ilu_doublecomplex *ab, integer *ldab, integer *ipiv, ilu_doublecomplex *b, integer *ldb, integer *info, ftnlen translen);
void zgebak(character *job, character *side, integer *n, integer *ilo, integer *ihi, doubleprecision *scale, integer *m, ilu_doublecomplex *v, integer *ldv, integer *info, ftnlen joblen, ftnlen sidelen);
void zgebal(character *job, integer *n, ilu_doublecomplex *a, integer *lda, integer *ilo, integer *ihi, doubleprecision *scale, integer *info, ftnlen joblen);
void zgebd2(integer *m, integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *d, doubleprecision *e, ilu_doublecomplex *tauq, ilu_doublecomplex *taup, ilu_doublecomplex *work, integer *info);
void zgebrd(integer *m, integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *d, doubleprecision *e, ilu_doublecomplex *tauq, ilu_doublecomplex *taup, ilu_doublecomplex *work, integer *lwork, integer *info);
void zgecon(character *norm, integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *anorm, doubleprecision *rcond, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen normlen);
void zgeequ(integer *m, integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *r, doubleprecision *c, doubleprecision *rowcnd, doubleprecision *colcnd, doubleprecision *amax, integer *info);
void zgees(character *jobvs, character *sort, logical (*select)(ilu_doublecomplex *a), integer *n, ilu_doublecomplex *a, integer *lda, integer *sdim, ilu_doublecomplex *w, ilu_doublecomplex *vs, integer *ldvs, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, logical *bwork, integer *info, ftnlen jobvslen, ftnlen sortlen);
void zgeesx(character *jobvs, character *sort, logical (*select)(ilu_doublecomplex *a), character *sense, integer *n, ilu_doublecomplex *a, integer *lda, integer *sdim, ilu_doublecomplex *w, ilu_doublecomplex *vs, integer *ldvs, doubleprecision *rconde, doubleprecision *rcondv, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, logical *bwork, integer *info, ftnlen jobvslen, ftnlen sortlen, ftnlen senselen);
void zgeev(character *jobvl, character *jobvr, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *w, ilu_doublecomplex *vl, integer *ldvl, ilu_doublecomplex *vr, integer *ldvr, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *info, ftnlen jobvllen, ftnlen jobvrlen);
void zgeevx(character *balanc, character *jobvl, character *jobvr, character *sense, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *w, ilu_doublecomplex *vl, integer *ldvl, ilu_doublecomplex *vr, integer *ldvr, integer *ilo, integer *ihi, doubleprecision *scale, doubleprecision *abnrm, doubleprecision *rconde, doubleprecision *rcondv, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *info, ftnlen balanclen, ftnlen jobvllen, ftnlen jobvrlen, ftnlen senselen);
void zgegs(character *jobvsl, character *jobvsr, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *alpha, ilu_doublecomplex *beta, ilu_doublecomplex *vsl, integer *ldvsl, ilu_doublecomplex *vsr, integer *ldvsr, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *info, ftnlen jobvsllen, ftnlen jobvsrlen);
void zgegv(character *jobvl, character *jobvr, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *alpha, ilu_doublecomplex *beta, ilu_doublecomplex *vl, integer *ldvl, ilu_doublecomplex *vr, integer *ldvr, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *info, ftnlen jobvllen, ftnlen jobvrlen);
void zgehd2(integer *n, integer *ilo, integer *ihi, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *info);
void zgehrd(integer *n, integer *ilo, integer *ihi, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *lwork, integer *info);
void zgelq2(integer *m, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *info);
void zgelqf(integer *m, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *lwork, integer *info);
void zgels(character *trans, integer *m, integer *n, integer *nrhs, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *work, integer *lwork, integer *info, ftnlen translen);
void zgelsd(integer *m, integer *n, integer *nrhs, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, doubleprecision *s, doubleprecision *rcond, integer *rank, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *iwork, integer *info);
void zgelss(integer *m, integer *n, integer *nrhs, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, doubleprecision *s, doubleprecision *rcond, integer *rank, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *info);
void zgelsx(integer *m, integer *n, integer *nrhs, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, integer *jpvt, doubleprecision *rcond, integer *rank, ilu_doublecomplex *work, doubleprecision *rwork, integer *info);
void zgelsy(integer *m, integer *n, integer *nrhs, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, integer *jpvt, doubleprecision *rcond, integer *rank, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *info);
void zgeql2(integer *m, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *info);
void zgeqlf(integer *m, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *lwork, integer *info);
void zgeqp3(integer *m, integer *n, ilu_doublecomplex *a, integer *lda, integer *jpvt, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *info);
void zgeqpf(integer *m, integer *n, ilu_doublecomplex *a, integer *lda, integer *jpvt, ilu_doublecomplex *tau, ilu_doublecomplex *work, doubleprecision *rwork, integer *info);
void zgeqr2(integer *m, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *info);
void zgeqrf(integer *m, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *lwork, integer *info);
void zgerfs(character *trans, integer *n, integer *nrhs, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *af, integer *ldaf, integer *ipiv, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen translen);
void zgerq2(integer *m, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *info);
void zgerqf(integer *m, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *lwork, integer *info);
void zgesc2(integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *rhs, integer *ipiv, integer *jpiv, doubleprecision *scale);
void zgesdd(character *jobz, integer *m, integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *s, ilu_doublecomplex *u, integer *ldu, ilu_doublecomplex *vt, integer *ldvt, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *iwork, integer *info, ftnlen jobzlen);
void zgesv(integer *n, integer *nrhs, ilu_doublecomplex *a, integer *lda, integer *ipiv, ilu_doublecomplex *b, integer *ldb, integer *info);
void zgesvd(character *jobu, character *jobvt, integer *m, integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *s, ilu_doublecomplex *u, integer *ldu, ilu_doublecomplex *vt, integer *ldvt, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *info, ftnlen jobulen, ftnlen jobvtlen);
void zgesvx(character *fact, character *trans, integer *n, integer *nrhs, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *af, integer *ldaf, integer *ipiv, character *equed, doubleprecision *r, doubleprecision *c, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *rcond, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen factlen, ftnlen translen, ftnlen equedlen);
void zgetc2(integer *n, ilu_doublecomplex *a, integer *lda, integer *ipiv, integer *jpiv, integer *info);
void zgetf2(integer *m, integer *n, ilu_doublecomplex *a, integer *lda, integer *ipiv, integer *info);
void zgetrf(integer *m, integer *n, ilu_doublecomplex *a, integer *lda, integer *ipiv, integer *info);
void zgetri(integer *n, ilu_doublecomplex *a, integer *lda, integer *ipiv, ilu_doublecomplex *work, integer *lwork, integer *info);
void zgetrs(character *trans, integer *n, integer *nrhs, ilu_doublecomplex *a, integer *lda, integer *ipiv, ilu_doublecomplex *b, integer *ldb, integer *info, ftnlen translen);
void zggbak(character *job, character *side, integer *n, integer *ilo, integer *ihi, doubleprecision *lscale, doubleprecision *rscale, integer *m, ilu_doublecomplex *v, integer *ldv, integer *info, ftnlen joblen, ftnlen sidelen);
void zggbal(character *job, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, integer *ilo, integer *ihi, doubleprecision *lscale, doubleprecision *rscale, doubleprecision *work, integer *info, ftnlen joblen);
void zgges(character *jobvsl, character *jobvsr, character *sort, logical (*selctg)(ilu_doublecomplex *a, ilu_doublecomplex *b), integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, integer *sdim, ilu_doublecomplex *alpha, ilu_doublecomplex *beta, ilu_doublecomplex *vsl, integer *ldvsl, ilu_doublecomplex *vsr, integer *ldvsr, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, logical *bwork, integer *info, ftnlen jobvsllen, ftnlen jobvsrlen, ftnlen sortlen);
void zggesx(character *jobvsl, character *jobvsr, character *sort, logical (*selctg)(ilu_doublecomplex *a, ilu_doublecomplex *b), character *sense, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, integer *sdim, ilu_doublecomplex *alpha, ilu_doublecomplex *beta, ilu_doublecomplex *vsl, integer *ldvsl, ilu_doublecomplex *vsr, integer *ldvsr, doubleprecision *rconde, doubleprecision *rcondv, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *iwork, integer *liwork, logical *bwork, integer *info, ftnlen jobvsllen, ftnlen jobvsrlen, ftnlen sortlen, ftnlen senselen);
void zggev(character *jobvl, character *jobvr, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *alpha, ilu_doublecomplex *beta, ilu_doublecomplex *vl, integer *ldvl, ilu_doublecomplex *vr, integer *ldvr, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *info, ftnlen jobvllen, ftnlen jobvrlen);
void zggevx(character *balanc, character *jobvl, character *jobvr, character *sense, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *alpha, ilu_doublecomplex *beta, ilu_doublecomplex *vl, integer *ldvl, ilu_doublecomplex *vr, integer *ldvr, integer *ilo, integer *ihi, doubleprecision *lscale, doubleprecision *rscale, doubleprecision *abnrm, doubleprecision *bbnrm, doubleprecision *rconde, doubleprecision *rcondv, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *iwork, logical *bwork, integer *info, ftnlen balanclen, ftnlen jobvllen, ftnlen jobvrlen, ftnlen senselen);
void zggglm(integer *n, integer *m, integer *p, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *d, ilu_doublecomplex *x, ilu_doublecomplex *y, ilu_doublecomplex *work, integer *lwork, integer *info);
void zgghrd(character *compq, character *compz, integer *n, integer *ilo, integer *ihi, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *q, integer *ldq, ilu_doublecomplex *z, integer *ldz, integer *info, ftnlen compqlen, ftnlen compzlen);
void zgglse(integer *m, integer *n, integer *p, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *c, ilu_doublecomplex *d, ilu_doublecomplex *x, ilu_doublecomplex *work, integer *lwork, integer *info);
void zggqrf(integer *n, integer *m, integer *p, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *taua, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *taub, ilu_doublecomplex *work, integer *lwork, integer *info);
void zggrqf(integer *m, integer *p, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *taua, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *taub, ilu_doublecomplex *work, integer *lwork, integer *info);
void zggsvd(character *jobu, character *jobv, character *jobq, integer *m, integer *n, integer *p, integer *k, integer *l, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, doubleprecision *alpha, doubleprecision *beta, ilu_doublecomplex *u, integer *ldu, ilu_doublecomplex *v, integer *ldv, ilu_doublecomplex *q, integer *ldq, ilu_doublecomplex *work, doubleprecision *rwork, integer *iwork, integer *info, ftnlen jobulen, ftnlen jobvlen, ftnlen jobqlen);
void zggsvp(character *jobu, character *jobv, character *jobq, integer *m, integer *p, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, doubleprecision *tola, doubleprecision *tolb, integer *k, integer *l, ilu_doublecomplex *u, integer *ldu, ilu_doublecomplex *v, integer *ldv, ilu_doublecomplex *q, integer *ldq, integer *iwork, doubleprecision *rwork, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *info, ftnlen jobulen, ftnlen jobvlen, ftnlen jobqlen);
void zgtcon(character *norm, integer *n, ilu_doublecomplex *dl, ilu_doublecomplex *d, ilu_doublecomplex *du, ilu_doublecomplex *du2, integer *ipiv, doubleprecision *anorm, doubleprecision *rcond, ilu_doublecomplex *work, integer *info, ftnlen normlen);
void zgtrfs(character *trans, integer *n, integer *nrhs, ilu_doublecomplex *dl, ilu_doublecomplex *d, ilu_doublecomplex *du, ilu_doublecomplex *dlf, ilu_doublecomplex *df, ilu_doublecomplex *duf, ilu_doublecomplex *du2, integer *ipiv, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen translen);
void zgtsv(integer *n, integer *nrhs, ilu_doublecomplex *dl, ilu_doublecomplex *d, ilu_doublecomplex *du, ilu_doublecomplex *b, integer *ldb, integer *info);
void zgtsvx(character *fact, character *trans, integer *n, integer *nrhs, ilu_doublecomplex *dl, ilu_doublecomplex *d, ilu_doublecomplex *du, ilu_doublecomplex *dlf, ilu_doublecomplex *df, ilu_doublecomplex *duf, ilu_doublecomplex *du2, integer *ipiv, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *rcond, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen factlen, ftnlen translen);
void zgttrf(integer *n, ilu_doublecomplex *dl, ilu_doublecomplex *d, ilu_doublecomplex *du, ilu_doublecomplex *du2, integer *ipiv, integer *info);
void zgttrs(character *trans, integer *n, integer *nrhs, ilu_doublecomplex *dl, ilu_doublecomplex *d, ilu_doublecomplex *du, ilu_doublecomplex *du2, integer *ipiv, ilu_doublecomplex *b, integer *ldb, integer *info, ftnlen translen);
void zgtts2(integer *itrans, integer *n, integer *nrhs, ilu_doublecomplex *dl, ilu_doublecomplex *d, ilu_doublecomplex *du, ilu_doublecomplex *du2, integer *ipiv, ilu_doublecomplex *b, integer *ldb);
void zhbev(character *jobz, character *uplo, integer *n, integer *kd, ilu_doublecomplex *ab, integer *ldab, doubleprecision *w, ilu_doublecomplex *z, integer *ldz, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void zhbevd(character *jobz, character *uplo, integer *n, integer *kd, ilu_doublecomplex *ab, integer *ldab, doubleprecision *w, ilu_doublecomplex *z, integer *ldz, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *lrwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void zhbevx(character *jobz, character *range, character *uplo, integer *n, integer *kd, ilu_doublecomplex *ab, integer *ldab, ilu_doublecomplex *q, integer *ldq, doubleprecision *vl, doubleprecision *vu, integer *il, integer *iu, doubleprecision *abstol, integer *m, doubleprecision *w, ilu_doublecomplex *z, integer *ldz, ilu_doublecomplex *work, doubleprecision *rwork, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void zhbgst(character *vect, character *uplo, integer *n, integer *ka, integer *kb, ilu_doublecomplex *ab, integer *ldab, ilu_doublecomplex *bb, integer *ldbb, ilu_doublecomplex *x, integer *ldx, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen vectlen, ftnlen uplolen);
void zhbgv(character *jobz, character *uplo, integer *n, integer *ka, integer *kb, ilu_doublecomplex *ab, integer *ldab, ilu_doublecomplex *bb, integer *ldbb, doubleprecision *w, ilu_doublecomplex *z, integer *ldz, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void zhbgvd(character *jobz, character *uplo, integer *n, integer *ka, integer *kb, ilu_doublecomplex *ab, integer *ldab, ilu_doublecomplex *bb, integer *ldbb, doubleprecision *w, ilu_doublecomplex *z, integer *ldz, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *lrwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void zhbgvx(character *jobz, character *range, character *uplo, integer *n, integer *ka, integer *kb, ilu_doublecomplex *ab, integer *ldab, ilu_doublecomplex *bb, integer *ldbb, ilu_doublecomplex *q, integer *ldq, doubleprecision *vl, doubleprecision *vu, integer *il, integer *iu, doubleprecision *abstol, integer *m, doubleprecision *w, ilu_doublecomplex *z, integer *ldz, ilu_doublecomplex *work, doubleprecision *rwork, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void zhbtrd(character *vect, character *uplo, integer *n, integer *kd, ilu_doublecomplex *ab, integer *ldab, doubleprecision *d, doubleprecision *e, ilu_doublecomplex *q, integer *ldq, ilu_doublecomplex *work, integer *info, ftnlen vectlen, ftnlen uplolen);
void zhecon(character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, integer *ipiv, doubleprecision *anorm, doubleprecision *rcond, ilu_doublecomplex *work, integer *info, ftnlen uplolen);
void zheev(character *jobz, character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *w, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void zheevd(character *jobz, character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *w, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *lrwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void zheevr(character *jobz, character *range, character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *vl, doubleprecision *vu, integer *il, integer *iu, doubleprecision *abstol, integer *m, doubleprecision *w, ilu_doublecomplex *z, integer *ldz, integer *isuppz, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *lrwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void zheevx(character *jobz, character *range, character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *vl, doubleprecision *vu, integer *il, integer *iu, doubleprecision *abstol, integer *m, doubleprecision *w, ilu_doublecomplex *z, integer *ldz, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void zhegs2(integer *itype, character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, integer *info, ftnlen uplolen);
void zhegst(integer *itype, character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, integer *info, ftnlen uplolen);
void zhegv(integer *itype, character *jobz, character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, doubleprecision *w, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void zhegvd(integer *itype, character *jobz, character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, doubleprecision *w, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *lrwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void zhegvx(integer *itype, character *jobz, character *range, character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, doubleprecision *vl, doubleprecision *vu, integer *il, integer *iu, doubleprecision *abstol, integer *m, doubleprecision *w, ilu_doublecomplex *z, integer *ldz, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void zherfs(character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *af, integer *ldaf, integer *ipiv, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen uplolen);
void zhesv(character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *a, integer *lda, integer *ipiv, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *work, integer *lwork, integer *info, ftnlen uplolen);
void zhesvx(character *fact, character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *af, integer *ldaf, integer *ipiv, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *rcond, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *info, ftnlen factlen, ftnlen uplolen);
void zhetd2(character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *d, doubleprecision *e, ilu_doublecomplex *tau, integer *info, ftnlen uplolen);
void zhetf2(character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, integer *ipiv, integer *info, ftnlen uplolen);
void zhetrd(character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *d, doubleprecision *e, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *lwork, integer *info, ftnlen uplolen);
void zhetrf(character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, integer *ipiv, ilu_doublecomplex *work, integer *lwork, integer *info, ftnlen uplolen);
void zhetri(character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, integer *ipiv, ilu_doublecomplex *work, integer *info, ftnlen uplolen);
void zhetrs(character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *a, integer *lda, integer *ipiv, ilu_doublecomplex *b, integer *ldb, integer *info, ftnlen uplolen);
void zhgeqz(character *job, character *compq, character *compz, integer *n, integer *ilo, integer *ihi, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *alpha, ilu_doublecomplex *beta, ilu_doublecomplex *q, integer *ldq, ilu_doublecomplex *z, integer *ldz, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *info, ftnlen joblen, ftnlen compqlen, ftnlen compzlen);
void zhpcon(character *uplo, integer *n, ilu_doublecomplex *ap, integer *ipiv, doubleprecision *anorm, doubleprecision *rcond, ilu_doublecomplex *work, integer *info, ftnlen uplolen);
void zhpev(character *jobz, character *uplo, integer *n, ilu_doublecomplex *ap, doubleprecision *w, ilu_doublecomplex *z, integer *ldz, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void zhpevd(character *jobz, character *uplo, integer *n, ilu_doublecomplex *ap, doubleprecision *w, ilu_doublecomplex *z, integer *ldz, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *lrwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void zhpevx(character *jobz, character *range, character *uplo, integer *n, ilu_doublecomplex *ap, doubleprecision *vl, doubleprecision *vu, integer *il, integer *iu, doubleprecision *abstol, integer *m, doubleprecision *w, ilu_doublecomplex *z, integer *ldz, ilu_doublecomplex *work, doubleprecision *rwork, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void zhpgst(integer *itype, character *uplo, integer *n, ilu_doublecomplex *ap, ilu_doublecomplex *bp, integer *info, ftnlen uplolen);
void zhpgv(integer *itype, character *jobz, character *uplo, integer *n, ilu_doublecomplex *ap, ilu_doublecomplex *bp, doubleprecision *w, ilu_doublecomplex *z, integer *ldz, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void zhpgvd(integer *itype, character *jobz, character *uplo, integer *n, ilu_doublecomplex *ap, ilu_doublecomplex *bp, doubleprecision *w, ilu_doublecomplex *z, integer *ldz, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *lrwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen uplolen);
void zhpgvx(integer *itype, character *jobz, character *range, character *uplo, integer *n, ilu_doublecomplex *ap, ilu_doublecomplex *bp, doubleprecision *vl, doubleprecision *vu, integer *il, integer *iu, doubleprecision *abstol, integer *m, doubleprecision *w, ilu_doublecomplex *z, integer *ldz, ilu_doublecomplex *work, doubleprecision *rwork, integer *iwork, integer *ifail, integer *info, ftnlen jobzlen, ftnlen rangelen, ftnlen uplolen);
void zhprfs(character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *ap, ilu_doublecomplex *afp, integer *ipiv, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen uplolen);
void zhpsv(character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *ap, integer *ipiv, ilu_doublecomplex *b, integer *ldb, integer *info, ftnlen uplolen);
void zhpsvx(character *fact, character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *ap, ilu_doublecomplex *afp, integer *ipiv, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *rcond, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen factlen, ftnlen uplolen);
void zhptrd(character *uplo, integer *n, ilu_doublecomplex *ap, doubleprecision *d, doubleprecision *e, ilu_doublecomplex *tau, integer *info, ftnlen uplolen);
void zhptrf(character *uplo, integer *n, ilu_doublecomplex *ap, integer *ipiv, integer *info, ftnlen uplolen);
void zhptri(character *uplo, integer *n, ilu_doublecomplex *ap, integer *ipiv, ilu_doublecomplex *work, integer *info, ftnlen uplolen);
void zhptrs(character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *ap, integer *ipiv, ilu_doublecomplex *b, integer *ldb, integer *info, ftnlen uplolen);
void zhsein(character *side, character *eigsrc, character *initv, logical *select, integer *n, ilu_doublecomplex *h, integer *ldh, ilu_doublecomplex *w, ilu_doublecomplex *vl, integer *ldvl, ilu_doublecomplex *vr, integer *ldvr, integer *mm, integer *m, ilu_doublecomplex *work, doubleprecision *rwork, integer *ifaill, integer *ifailr, integer *info, ftnlen sidelen, ftnlen eigsrclen, ftnlen initvlen);
void zhseqr(character *job, character *compz, integer *n, integer *ilo, integer *ihi, ilu_doublecomplex *h, integer *ldh, ilu_doublecomplex *w, ilu_doublecomplex *z, integer *ldz, ilu_doublecomplex *work, integer *lwork, integer *info, ftnlen joblen, ftnlen compzlen);
void zlabrd(integer *m, integer *n, integer *nb, ilu_doublecomplex *a, integer *lda, doubleprecision *d, doubleprecision *e, ilu_doublecomplex *tauq, ilu_doublecomplex *taup, ilu_doublecomplex *x, integer *ldx, ilu_doublecomplex *y, integer *ldy);
void zlacgv(integer *n, ilu_doublecomplex *x, integer *incx);
void zlacon(integer *n, ilu_doublecomplex *v, ilu_doublecomplex *x, doubleprecision *est, integer *kase);
void zlacp2(character *uplo, integer *m, integer *n, doubleprecision *a, integer *lda, ilu_doublecomplex *b, integer *ldb, ftnlen uplolen);
void zlacpy(character *uplo, integer *m, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, ftnlen uplolen);
void zlacrm(integer *m, integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *b, integer *ldb, ilu_doublecomplex *c, integer *ldc, doubleprecision *rwork);
void zlacrt(integer *n, ilu_doublecomplex *cx, integer *incx, ilu_doublecomplex *cy, integer *incy, ilu_doublecomplex *c, ilu_doublecomplex *s);
extern ilu_doublecomplex zladiv(ilu_doublecomplex * retval, ilu_doublecomplex *x, ilu_doublecomplex *y);
void zlaed0(integer *qsiz, integer *n, doubleprecision *d, doubleprecision *e, ilu_doublecomplex *q, integer *ldq, ilu_doublecomplex *qstore, integer *ldqs, doubleprecision *rwork, integer *iwork, integer *info);
void zlaed7(integer *n, integer *cutpnt, integer *qsiz, integer *tlvls, integer *curlvl, integer *curpbm, doubleprecision *d, ilu_doublecomplex *q, integer *ldq, doubleprecision *rho, integer *indxq, doubleprecision *qstore, integer *qptr, integer *prmptr, integer *perm, integer *givptr, integer *givcol, doubleprecision *givnum, ilu_doublecomplex *work, doubleprecision *rwork, integer *iwork, integer *info);
void zlaed8(integer *k, integer *n, integer *qsiz, ilu_doublecomplex *q, integer *ldq, doubleprecision *d, doubleprecision *rho, integer *cutpnt, doubleprecision *z, doubleprecision *dlamda, ilu_doublecomplex *q2, integer *ldq2, doubleprecision *w, integer *indxp, integer *indx, integer *indxq, integer *perm, integer *givptr, integer *givcol, doubleprecision *givnum, integer *info);
void zlaein(logical *rightv, logical *noinit, integer *n, ilu_doublecomplex *h, integer *ldh, ilu_doublecomplex *w, ilu_doublecomplex *v, ilu_doublecomplex *b, integer *ldb, doubleprecision *rwork, doubleprecision *eps3, doubleprecision *smlnum, integer *info);
void zlaesy(ilu_doublecomplex *a, ilu_doublecomplex *b, ilu_doublecomplex *c, ilu_doublecomplex *rt1, ilu_doublecomplex *rt2, ilu_doublecomplex *evscal, ilu_doublecomplex *cs1, ilu_doublecomplex *sn1);
void zlaev2(ilu_doublecomplex *a, ilu_doublecomplex *b, ilu_doublecomplex *c, doubleprecision *rt1, doubleprecision *rt2, doubleprecision *cs1, ilu_doublecomplex *sn1);
void zlags2(logical *upper, doubleprecision *a1, ilu_doublecomplex *a2, doubleprecision *a3, doubleprecision *b1, ilu_doublecomplex *b2, doubleprecision *b3, doubleprecision *csu, ilu_doublecomplex *snu, doubleprecision *csv, ilu_doublecomplex *snv, doubleprecision *csq, ilu_doublecomplex *snq);
void zlagtm(character *trans, integer *n, integer *nrhs, doubleprecision *alpha, ilu_doublecomplex *dl, ilu_doublecomplex *d, ilu_doublecomplex *du, ilu_doublecomplex *x, integer *ldx, doubleprecision *beta, ilu_doublecomplex *b, integer *ldb, ftnlen translen);
void zlahef(character *uplo, integer *n, integer *nb, integer *kb, ilu_doublecomplex *a, integer *lda, integer *ipiv, ilu_doublecomplex *w, integer *ldw, integer *info, ftnlen uplolen);
void zlahqr(logical *wantt, logical *wantz, integer *n, integer *ilo, integer *ihi, ilu_doublecomplex *h, integer *ldh, ilu_doublecomplex *w, integer *iloz, integer *ihiz, ilu_doublecomplex *z, integer *ldz, integer *info);
void zlahrd(integer *n, integer *k, integer *nb, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *t, integer *ldt, ilu_doublecomplex *y, integer *ldy);
void zlaic1(integer *job, integer *j, ilu_doublecomplex *x, doubleprecision *sest, ilu_doublecomplex *w, ilu_doublecomplex *gamma, doubleprecision *sestpr, ilu_doublecomplex *s, ilu_doublecomplex *c);
void zlals0(integer *icompq, integer *nl, integer *nr, integer *sqre, integer *nrhs, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *bx, integer *ldbx, integer *perm, integer *givptr, integer *givcol, integer *ldgcol, doubleprecision *givnum, integer *ldgnum, doubleprecision *poles, doubleprecision *difl, doubleprecision *difr, doubleprecision *z, integer *k, doubleprecision *c, doubleprecision *s, doubleprecision *rwork, integer *info);
void zlalsa(integer *icompq, integer *smlsiz, integer *n, integer *nrhs, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *bx, integer *ldbx, doubleprecision *u, integer *ldu, doubleprecision *vt, integer *k, doubleprecision *difl, doubleprecision *difr, doubleprecision *z, doubleprecision *poles, integer *givptr, integer *givcol, integer *ldgcol, integer *perm, doubleprecision *givnum, doubleprecision *c, doubleprecision *s, doubleprecision *rwork, integer *iwork, integer *info);
void zlalsd(character *uplo, integer *smlsiz, integer *n, integer *nrhs, doubleprecision *d, doubleprecision *e, ilu_doublecomplex *b, integer *ldb, doubleprecision *rcond, integer *rank, ilu_doublecomplex *work, doubleprecision *rwork, integer *iwork, integer *info, ftnlen uplolen);
extern doubleprecision zlangb(character *norm, integer *n, integer *kl, integer *ku, ilu_doublecomplex *ab, integer *ldab, doubleprecision *work, ftnlen normlen);
extern doubleprecision zlange(character *norm, integer *m, integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *work, ftnlen normlen);
extern doubleprecision zlangt(character *norm, integer *n, ilu_doublecomplex *dl, ilu_doublecomplex *d, ilu_doublecomplex *du, ftnlen normlen);
extern doubleprecision zlanhb(character *norm, character *uplo, integer *n, integer *k, ilu_doublecomplex *ab, integer *ldab, doubleprecision *work, ftnlen normlen, ftnlen uplolen);
extern doubleprecision zlanhe(character *norm, character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *work, ftnlen normlen, ftnlen uplolen);
extern doubleprecision zlanhp(character *norm, character *uplo, integer *n, ilu_doublecomplex *ap, doubleprecision *work, ftnlen normlen, ftnlen uplolen);
extern doubleprecision zlanhs(character *norm, integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *work, ftnlen normlen);
extern doubleprecision zlanht(character *norm, integer *n, doubleprecision *d, ilu_doublecomplex *e, ftnlen normlen);
extern doubleprecision zlansb(character *norm, character *uplo, integer *n, integer *k, ilu_doublecomplex *ab, integer *ldab, doubleprecision *work, ftnlen normlen, ftnlen uplolen);
extern doubleprecision zlansp(character *norm, character *uplo, integer *n, ilu_doublecomplex *ap, doubleprecision *work, ftnlen normlen, ftnlen uplolen);
extern doubleprecision zlansy(character *norm, character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *work, ftnlen normlen, ftnlen uplolen);
extern doubleprecision zlantb(character *norm, character *uplo, character *diag, integer *n, integer *k, ilu_doublecomplex *ab, integer *ldab, doubleprecision *work, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
extern doubleprecision zlantp(character *norm, character *uplo, character *diag, integer *n, ilu_doublecomplex *ap, doubleprecision *work, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
extern doubleprecision zlantr(character *norm, character *uplo, character *diag, integer *m, integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *work, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
void zlapll(integer *n, ilu_doublecomplex *x, integer *incx, ilu_doublecomplex *y, integer *incy, doubleprecision *ssmin);
void zlapmt(logical *forwrd, integer *m, integer *n, ilu_doublecomplex *x, integer *ldx, integer *k);
void zlaqgb(integer *m, integer *n, integer *kl, integer *ku, ilu_doublecomplex *ab, integer *ldab, doubleprecision *r, doubleprecision *c, doubleprecision *rowcnd, doubleprecision *colcnd, doubleprecision *amax, character *equed, ftnlen equedlen);
void zlaqge(integer *m, integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *r, doubleprecision *c, doubleprecision *rowcnd, doubleprecision *colcnd, doubleprecision *amax, character *equed, ftnlen equedlen);
void zlaqhb(character *uplo, integer *n, integer *kd, ilu_doublecomplex *ab, integer *ldab, doubleprecision *s, doubleprecision *scond, doubleprecision *amax, character *equed, ftnlen uplolen, ftnlen equedlen);
void zlaqhe(character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *s, doubleprecision *scond, doubleprecision *amax, character *equed, ftnlen uplolen, ftnlen equedlen);
void zlaqhp(character *uplo, integer *n, ilu_doublecomplex *ap, doubleprecision *s, doubleprecision *scond, doubleprecision *amax, character *equed, ftnlen uplolen, ftnlen equedlen);
void zlaqp2(integer *m, integer *n, integer *offset, ilu_doublecomplex *a, integer *lda, integer *jpvt, ilu_doublecomplex *tau, doubleprecision *vn1, doubleprecision *vn2, ilu_doublecomplex *work);
void zlaqps(integer *m, integer *n, integer *offset, integer *nb, integer *kb, ilu_doublecomplex *a, integer *lda, integer *jpvt, ilu_doublecomplex *tau, doubleprecision *vn1, doubleprecision *vn2, ilu_doublecomplex *auxv, ilu_doublecomplex *f, integer *ldf);
void zlaqsb(character *uplo, integer *n, integer *kd, ilu_doublecomplex *ab, integer *ldab, doubleprecision *s, doubleprecision *scond, doubleprecision *amax, character *equed, ftnlen uplolen, ftnlen equedlen);
void zlaqsp(character *uplo, integer *n, ilu_doublecomplex *ap, doubleprecision *s, doubleprecision *scond, doubleprecision *amax, character *equed, ftnlen uplolen, ftnlen equedlen);
void zlaqsy(character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *s, doubleprecision *scond, doubleprecision *amax, character *equed, ftnlen uplolen, ftnlen equedlen);
void zlar1v(integer *n, integer *b1, integer *bn, doubleprecision *sigma, doubleprecision *d, doubleprecision *l, doubleprecision *ld, doubleprecision *lld, doubleprecision *gersch, ilu_doublecomplex *z, doubleprecision *ztz, doubleprecision *mingma, integer *r, integer *isuppz, doubleprecision *work);
void zlar2v(integer *n, ilu_doublecomplex *x, ilu_doublecomplex *y, ilu_doublecomplex *z, integer *incx, doubleprecision *c, ilu_doublecomplex *s, integer *incc);
void zlarcm(integer *m, integer *n, doubleprecision *a, integer *lda, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *c, integer *ldc, doubleprecision *rwork);
void zlarf(character *side, integer *m, integer *n, ilu_doublecomplex *v, integer *incv, ilu_doublecomplex *tau, ilu_doublecomplex *c, integer *ldc, ilu_doublecomplex *work, ftnlen sidelen);
void zlarfb(character *side, character *trans, character *direct, character *storev, integer *m, integer *n, integer *k, ilu_doublecomplex *v, integer *ldv, ilu_doublecomplex *t, integer *ldt, ilu_doublecomplex *c, integer *ldc, ilu_doublecomplex *work, integer *ldwork, ftnlen sidelen, ftnlen translen, ftnlen directlen, ftnlen storevlen);
void zlarfg(integer *n, ilu_doublecomplex *alpha, ilu_doublecomplex *x, integer *incx, ilu_doublecomplex *tau);
void zlarft(character *direct, character *storev, integer *n, integer *k, ilu_doublecomplex *v, integer *ldv, ilu_doublecomplex *tau, ilu_doublecomplex *t, integer *ldt, ftnlen directlen, ftnlen storevlen);
void zlarfx(character *side, integer *m, integer *n, ilu_doublecomplex *v, ilu_doublecomplex *tau, ilu_doublecomplex *c, integer *ldc, ilu_doublecomplex *work, ftnlen sidelen);
void zlargv(integer *n, ilu_doublecomplex *x, integer *incx, ilu_doublecomplex *y, integer *incy, doubleprecision *c, integer *incc);
void zlarnv(integer *idist, integer *iseed, integer *n, ilu_doublecomplex *x);
void zlarrv(integer *n, doubleprecision *d, doubleprecision *l, integer *isplit, integer *m, doubleprecision *w, integer *iblock, doubleprecision *gersch, doubleprecision *tol, ilu_doublecomplex *z, integer *ldz, integer *isuppz, doubleprecision *work, integer *iwork, integer *info);
void zlartg(ilu_doublecomplex *f, ilu_doublecomplex *g, doubleprecision *cs, ilu_doublecomplex *sn, ilu_doublecomplex *r);
void zlartv(integer *n, ilu_doublecomplex *x, integer *incx, ilu_doublecomplex *y, integer *incy, doubleprecision *c, ilu_doublecomplex *s, integer *incc);
void zlarz(character *side, integer *m, integer *n, integer *l, ilu_doublecomplex *v, integer *incv, ilu_doublecomplex *tau, ilu_doublecomplex *c, integer *ldc, ilu_doublecomplex *work, ftnlen sidelen);
void zlarzb(character *side, character *trans, character *direct, character *storev, integer *m, integer *n, integer *k, integer *l, ilu_doublecomplex *v, integer *ldv, ilu_doublecomplex *t, integer *ldt, ilu_doublecomplex *c, integer *ldc, ilu_doublecomplex *work, integer *ldwork, ftnlen sidelen, ftnlen translen, ftnlen directlen, ftnlen storevlen);
void zlarzt(character *direct, character *storev, integer *n, integer *k, ilu_doublecomplex *v, integer *ldv, ilu_doublecomplex *tau, ilu_doublecomplex *t, integer *ldt, ftnlen directlen, ftnlen storevlen);
void zlascl(character *type, integer *kl, integer *ku, doubleprecision *cfrom, doubleprecision *cto, integer *m, integer *n, ilu_doublecomplex *a, integer *lda, integer *info, ftnlen typelen);
void zlaset(character *uplo, integer *m, integer *n, ilu_doublecomplex *alpha, ilu_doublecomplex *beta, ilu_doublecomplex *a, integer *lda, ftnlen uplolen);
void zlasr(character *side, character *pivot, character *direct, integer *m, integer *n, doubleprecision *c, doubleprecision *s, ilu_doublecomplex *a, integer *lda, ftnlen sidelen, ftnlen pivotlen, ftnlen directlen);
void zlassq(integer *n, ilu_doublecomplex *x, integer *incx, doubleprecision *scale, doubleprecision *sumsq);
void zlaswp(integer *n, ilu_doublecomplex *a, integer *lda, integer *k1, integer *k2, integer *ipiv, integer *incx);
void zlasyf(character *uplo, integer *n, integer *nb, integer *kb, ilu_doublecomplex *a, integer *lda, integer *ipiv, ilu_doublecomplex *w, integer *ldw, integer *info, ftnlen uplolen);
void zlatbs(character *uplo, character *trans, character *diag, character *normin, integer *n, integer *kd, ilu_doublecomplex *ab, integer *ldab, ilu_doublecomplex *x, doubleprecision *scale, doubleprecision *cnorm, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen, ftnlen norminlen);
void zlatdf(integer *ijob, integer *n, ilu_doublecomplex *z, integer *ldz, ilu_doublecomplex *rhs, doubleprecision *rdsum, doubleprecision *rdscal, integer *ipiv, integer *jpiv);
void zlatps(character *uplo, character *trans, character *diag, character *normin, integer *n, ilu_doublecomplex *ap, ilu_doublecomplex *x, doubleprecision *scale, doubleprecision *cnorm, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen, ftnlen norminlen);
void zlatrd(character *uplo, integer *n, integer *nb, ilu_doublecomplex *a, integer *lda, doubleprecision *e, ilu_doublecomplex *tau, ilu_doublecomplex *w, integer *ldw, ftnlen uplolen);
void zlatrs(character *uplo, character *trans, character *diag, character *normin, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *x, doubleprecision *scale, doubleprecision *cnorm, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen, ftnlen norminlen);
void zlatrz(integer *m, integer *n, integer *l, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *work);
void zlatzm(character *side, integer *m, integer *n, ilu_doublecomplex *v, integer *incv, ilu_doublecomplex *tau, ilu_doublecomplex *c1, ilu_doublecomplex *c2, integer *ldc, ilu_doublecomplex *work, ftnlen sidelen);
void zlauu2(character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, integer *info, ftnlen uplolen);
void zlauum(character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, integer *info, ftnlen uplolen);
void zpbcon(character *uplo, integer *n, integer *kd, ilu_doublecomplex *ab, integer *ldab, doubleprecision *anorm, doubleprecision *rcond, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen uplolen);
void zpbequ(character *uplo, integer *n, integer *kd, ilu_doublecomplex *ab, integer *ldab, doubleprecision *s, doubleprecision *scond, doubleprecision *amax, integer *info, ftnlen uplolen);
void zpbrfs(character *uplo, integer *n, integer *kd, integer *nrhs, ilu_doublecomplex *ab, integer *ldab, ilu_doublecomplex *afb, integer *ldafb, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen uplolen);
void zpbstf(character *uplo, integer *n, integer *kd, ilu_doublecomplex *ab, integer *ldab, integer *info, ftnlen uplolen);
void zpbsv(character *uplo, integer *n, integer *kd, integer *nrhs, ilu_doublecomplex *ab, integer *ldab, ilu_doublecomplex *b, integer *ldb, integer *info, ftnlen uplolen);
void zpbsvx(character *fact, character *uplo, integer *n, integer *kd, integer *nrhs, ilu_doublecomplex *ab, integer *ldab, ilu_doublecomplex *afb, integer *ldafb, character *equed, doubleprecision *s, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *rcond, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen factlen, ftnlen uplolen, ftnlen equedlen);
void zpbtf2(character *uplo, integer *n, integer *kd, ilu_doublecomplex *ab, integer *ldab, integer *info, ftnlen uplolen);
void zpbtrf(character *uplo, integer *n, integer *kd, ilu_doublecomplex *ab, integer *ldab, integer *info, ftnlen uplolen);
void zpbtrs(character *uplo, integer *n, integer *kd, integer *nrhs, ilu_doublecomplex *ab, integer *ldab, ilu_doublecomplex *b, integer *ldb, integer *info, ftnlen uplolen);
void zpocon(character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *anorm, doubleprecision *rcond, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen uplolen);
void zpoequ(integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *s, doubleprecision *scond, doubleprecision *amax, integer *info);
void zporfs(character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *af, integer *ldaf, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen uplolen);
void zposv(character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, integer *info, ftnlen uplolen);
void zposvx(character *fact, character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *af, integer *ldaf, character *equed, doubleprecision *s, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *rcond, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen factlen, ftnlen uplolen, ftnlen equedlen);
void zpotf2(character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, integer *info, ftnlen uplolen);
void zpotrf(character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, integer *info, ftnlen uplolen);
void zpotri(character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, integer *info, ftnlen uplolen);
void zpotrs(character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, integer *info, ftnlen uplolen);
void zppcon(character *uplo, integer *n, ilu_doublecomplex *ap, doubleprecision *anorm, doubleprecision *rcond, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen uplolen);
void zppequ(character *uplo, integer *n, ilu_doublecomplex *ap, doubleprecision *s, doubleprecision *scond, doubleprecision *amax, integer *info, ftnlen uplolen);
void zpprfs(character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *ap, ilu_doublecomplex *afp, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen uplolen);
void zppsv(character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *ap, ilu_doublecomplex *b, integer *ldb, integer *info, ftnlen uplolen);
void zppsvx(character *fact, character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *ap, ilu_doublecomplex *afp, character *equed, doubleprecision *s, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *rcond, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen factlen, ftnlen uplolen, ftnlen equedlen);
void zpptrf(character *uplo, integer *n, ilu_doublecomplex *ap, integer *info, ftnlen uplolen);
void zpptri(character *uplo, integer *n, ilu_doublecomplex *ap, integer *info, ftnlen uplolen);
void zpptrs(character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *ap, ilu_doublecomplex *b, integer *ldb, integer *info, ftnlen uplolen);
void zptcon(integer *n, doubleprecision *d, ilu_doublecomplex *e, doubleprecision *anorm, doubleprecision *rcond, doubleprecision *rwork, integer *info);
void zpteqr(character *compz, integer *n, doubleprecision *d, doubleprecision *e, ilu_doublecomplex *z, integer *ldz, doubleprecision *work, integer *info, ftnlen compzlen);
void zptrfs(character *uplo, integer *n, integer *nrhs, doubleprecision *d, ilu_doublecomplex *e, doubleprecision *df, ilu_doublecomplex *ef, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen uplolen);
void zptsv(integer *n, integer *nrhs, doubleprecision *d, ilu_doublecomplex *e, ilu_doublecomplex *b, integer *ldb, integer *info);
void zptsvx(character *fact, integer *n, integer *nrhs, doubleprecision *d, ilu_doublecomplex *e, doubleprecision *df, ilu_doublecomplex *ef, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *rcond, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen factlen);
void zpttrf(integer *n, doubleprecision *d, ilu_doublecomplex *e, integer *info);
void zpttrs(character *uplo, integer *n, integer *nrhs, doubleprecision *d, ilu_doublecomplex *e, ilu_doublecomplex *b, integer *ldb, integer *info, ftnlen uplolen);
void zptts2(integer *iuplo, integer *n, integer *nrhs, doubleprecision *d, ilu_doublecomplex *e, ilu_doublecomplex *b, integer *ldb);
void zrot(integer *n, ilu_doublecomplex *cx, integer *incx, ilu_doublecomplex *cy, integer *incy, doubleprecision *c, ilu_doublecomplex *s);
void zspcon(character *uplo, integer *n, ilu_doublecomplex *ap, integer *ipiv, doubleprecision *anorm, doubleprecision *rcond, ilu_doublecomplex *work, integer *info, ftnlen uplolen);
void zspmv(character *uplo, integer *n, ilu_doublecomplex *alpha, ilu_doublecomplex *ap, ilu_doublecomplex *x, integer *incx, ilu_doublecomplex *beta, ilu_doublecomplex *y, integer *incy, ftnlen uplolen);
void zspr(character *uplo, integer *n, ilu_doublecomplex *alpha, ilu_doublecomplex *x, integer *incx, ilu_doublecomplex *ap, ftnlen uplolen);
void zsprfs(character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *ap, ilu_doublecomplex *afp, integer *ipiv, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen uplolen);
void zspsv(character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *ap, integer *ipiv, ilu_doublecomplex *b, integer *ldb, integer *info, ftnlen uplolen);
void zspsvx(character *fact, character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *ap, ilu_doublecomplex *afp, integer *ipiv, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *rcond, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen factlen, ftnlen uplolen);
void zsptrf(character *uplo, integer *n, ilu_doublecomplex *ap, integer *ipiv, integer *info, ftnlen uplolen);
void zsptri(character *uplo, integer *n, ilu_doublecomplex *ap, integer *ipiv, ilu_doublecomplex *work, integer *info, ftnlen uplolen);
void zsptrs(character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *ap, integer *ipiv, ilu_doublecomplex *b, integer *ldb, integer *info, ftnlen uplolen);
void zstedc(character *compz, integer *n, doubleprecision *d, doubleprecision *e, ilu_doublecomplex *z, integer *ldz, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *lrwork, integer *iwork, integer *liwork, integer *info, ftnlen compzlen);
void zstegr(character *jobz, character *range, integer *n, doubleprecision *d, doubleprecision *e, doubleprecision *vl, doubleprecision *vu, integer *il, integer *iu, doubleprecision *abstol, integer *m, doubleprecision *w, ilu_doublecomplex *z, integer *ldz, integer *isuppz, doubleprecision *work, integer *lwork, integer *iwork, integer *liwork, integer *info, ftnlen jobzlen, ftnlen rangelen);
void zstein(integer *n, doubleprecision *d, doubleprecision *e, integer *m, doubleprecision *w, integer *iblock, integer *isplit, ilu_doublecomplex *z, integer *ldz, doubleprecision *work, integer *iwork, integer *ifail, integer *info);
void zsteqr(character *compz, integer *n, doubleprecision *d, doubleprecision *e, ilu_doublecomplex *z, integer *ldz, doubleprecision *work, integer *info, ftnlen compzlen);
void zsycon(character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, integer *ipiv, doubleprecision *anorm, doubleprecision *rcond, ilu_doublecomplex *work, integer *info, ftnlen uplolen);
void zsymv(character *uplo, integer *n, ilu_doublecomplex *alpha, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *x, integer *incx, ilu_doublecomplex *beta, ilu_doublecomplex *y, integer *incy, ftnlen uplolen);
void zsyr(character *uplo, integer *n, ilu_doublecomplex *alpha, ilu_doublecomplex *x, integer *incx, ilu_doublecomplex *a, integer *lda, ftnlen uplolen);
void zsyrfs(character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *af, integer *ldaf, integer *ipiv, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen uplolen);
void zsysv(character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *a, integer *lda, integer *ipiv, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *work, integer *lwork, integer *info, ftnlen uplolen);
void zsysvx(character *fact, character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *af, integer *ldaf, integer *ipiv, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *rcond, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, integer *lwork, doubleprecision *rwork, integer *info, ftnlen factlen, ftnlen uplolen);
void zsytf2(character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, integer *ipiv, integer *info, ftnlen uplolen);
void zsytrf(character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, integer *ipiv, ilu_doublecomplex *work, integer *lwork, integer *info, ftnlen uplolen);
void zsytri(character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, integer *ipiv, ilu_doublecomplex *work, integer *info, ftnlen uplolen);
void zsytrs(character *uplo, integer *n, integer *nrhs, ilu_doublecomplex *a, integer *lda, integer *ipiv, ilu_doublecomplex *b, integer *ldb, integer *info, ftnlen uplolen);
void ztbcon(character *norm, character *uplo, character *diag, integer *n, integer *kd, ilu_doublecomplex *ab, integer *ldab, doubleprecision *rcond, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
void ztbrfs(character *uplo, character *trans, character *diag, integer *n, integer *kd, integer *nrhs, ilu_doublecomplex *ab, integer *ldab, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void ztbtrs(character *uplo, character *trans, character *diag, integer *n, integer *kd, integer *nrhs, ilu_doublecomplex *ab, integer *ldab, ilu_doublecomplex *b, integer *ldb, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void ztgevc(character *side, character *howmny, logical *select, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *vl, integer *ldvl, ilu_doublecomplex *vr, integer *ldvr, integer *mm, integer *m, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen sidelen, ftnlen howmnylen);
void ztgex2(logical *wantq, logical *wantz, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *q, integer *ldq, ilu_doublecomplex *z, integer *ldz, integer *j1, integer *info);
void ztgexc(logical *wantq, logical *wantz, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *q, integer *ldq, ilu_doublecomplex *z, integer *ldz, integer *ifst, integer *ilst, integer *info);
void ztgsen(integer *ijob, logical *wantq, logical *wantz, logical *select, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *alpha, ilu_doublecomplex *beta, ilu_doublecomplex *q, integer *ldq, ilu_doublecomplex *z, integer *ldz, integer *m, doubleprecision *pl, doubleprecision *pr, doubleprecision *dif, ilu_doublecomplex *work, integer *lwork, integer *iwork, integer *liwork, integer *info);
void ztgsja(character *jobu, character *jobv, character *jobq, integer *m, integer *p, integer *n, integer *k, integer *l, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, doubleprecision *tola, doubleprecision *tolb, doubleprecision *alpha, doubleprecision *beta, ilu_doublecomplex *u, integer *ldu, ilu_doublecomplex *v, integer *ldv, ilu_doublecomplex *q, integer *ldq, ilu_doublecomplex *work, integer *ncycle, integer *info, ftnlen jobulen, ftnlen jobvlen, ftnlen jobqlen);
void ztgsna(character *job, character *howmny, logical *select, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *vl, integer *ldvl, ilu_doublecomplex *vr, integer *ldvr, doubleprecision *s, doubleprecision *dif, integer *mm, integer *m, ilu_doublecomplex *work, integer *lwork, integer *iwork, integer *info, ftnlen joblen, ftnlen howmnylen);
void ztgsy2(character *trans, integer *ijob, integer *m, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *c, integer *ldc, ilu_doublecomplex *d, integer *ldd, ilu_doublecomplex *e, integer *lde, ilu_doublecomplex *f, integer *ldf, doubleprecision *scale, doubleprecision *rdsum, doubleprecision *rdscal, integer *info, ftnlen translen);
void ztgsyl(character *trans, integer *ijob, integer *m, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *c, integer *ldc, ilu_doublecomplex *d, integer *ldd, ilu_doublecomplex *e, integer *lde, ilu_doublecomplex *f, integer *ldf, doubleprecision *scale, doubleprecision *dif, ilu_doublecomplex *work, integer *lwork, integer *iwork, integer *info, ftnlen translen);
void ztpcon(character *norm, character *uplo, character *diag, integer *n, ilu_doublecomplex *ap, doubleprecision *rcond, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
void ztprfs(character *uplo, character *trans, character *diag, integer *n, integer *nrhs, ilu_doublecomplex *ap, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void ztptri(character *uplo, character *diag, integer *n, ilu_doublecomplex *ap, integer *info, ftnlen uplolen, ftnlen diaglen);
void ztptrs(character *uplo, character *trans, character *diag, integer *n, integer *nrhs, ilu_doublecomplex *ap, ilu_doublecomplex *b, integer *ldb, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void ztrcon(character *norm, character *uplo, character *diag, integer *n, ilu_doublecomplex *a, integer *lda, doubleprecision *rcond, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen normlen, ftnlen uplolen, ftnlen diaglen);
void ztrevc(character *side, character *howmny, logical *select, integer *n, ilu_doublecomplex *t, integer *ldt, ilu_doublecomplex *vl, integer *ldvl, ilu_doublecomplex *vr, integer *ldvr, integer *mm, integer *m, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen sidelen, ftnlen howmnylen);
void ztrexc(character *compq, integer *n, ilu_doublecomplex *t, integer *ldt, ilu_doublecomplex *q, integer *ldq, integer *ifst, integer *ilst, integer *info, ftnlen compqlen);
void ztrrfs(character *uplo, character *trans, character *diag, integer *n, integer *nrhs, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *x, integer *ldx, doubleprecision *ferr, doubleprecision *berr, ilu_doublecomplex *work, doubleprecision *rwork, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void ztrsen(character *job, character *compq, logical *select, integer *n, ilu_doublecomplex *t, integer *ldt, ilu_doublecomplex *q, integer *ldq, ilu_doublecomplex *w, integer *m, doubleprecision *s, doubleprecision *sep, ilu_doublecomplex *work, integer *lwork, integer *info, ftnlen joblen, ftnlen compqlen);
void ztrsna(character *job, character *howmny, logical *select, integer *n, ilu_doublecomplex *t, integer *ldt, ilu_doublecomplex *vl, integer *ldvl, ilu_doublecomplex *vr, integer *ldvr, doubleprecision *s, doubleprecision *sep, integer *mm, integer *m, ilu_doublecomplex *work, integer *ldwork, doubleprecision *rwork, integer *info, ftnlen joblen, ftnlen howmnylen);
void ztrsyl(character *trana, character *tranb, integer *isgn, integer *m, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, ilu_doublecomplex *c, integer *ldc, doubleprecision *scale, integer *info, ftnlen tranalen, ftnlen tranblen);
void ztrti2(character *uplo, character *diag, integer *n, ilu_doublecomplex *a, integer *lda, integer *info, ftnlen uplolen, ftnlen diaglen);
void ztrtri(character *uplo, character *diag, integer *n, ilu_doublecomplex *a, integer *lda, integer *info, ftnlen uplolen, ftnlen diaglen);
void ztrtrs(character *uplo, character *trans, character *diag, integer *n, integer *nrhs, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *b, integer *ldb, integer *info, ftnlen uplolen, ftnlen translen, ftnlen diaglen);
void ztzrqf(integer *m, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, integer *info);
void ztzrzf(integer *m, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *lwork, integer *info);
void zung2l(integer *m, integer *n, integer *k, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *info);
void zung2r(integer *m, integer *n, integer *k, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *info);
void zungbr(character *vect, integer *m, integer *n, integer *k, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *lwork, integer *info, ftnlen vectlen);
void zunghr(integer *n, integer *ilo, integer *ihi, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *lwork, integer *info);
void zungl2(integer *m, integer *n, integer *k, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *info);
void zunglq(integer *m, integer *n, integer *k, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *lwork, integer *info);
void zungql(integer *m, integer *n, integer *k, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *lwork, integer *info);
void zungqr(integer *m, integer *n, integer *k, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *lwork, integer *info);
void zungr2(integer *m, integer *n, integer *k, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *info);
void zungrq(integer *m, integer *n, integer *k, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *lwork, integer *info);
void zungtr(character *uplo, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *work, integer *lwork, integer *info, ftnlen uplolen);
void zunm2l(character *side, character *trans, integer *m, integer *n, integer *k, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *c, integer *ldc, ilu_doublecomplex *work, integer *info, ftnlen sidelen, ftnlen translen);
void zunm2r(character *side, character *trans, integer *m, integer *n, integer *k, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *c, integer *ldc, ilu_doublecomplex *work, integer *info, ftnlen sidelen, ftnlen translen);
void zunmbr(character *vect, character *side, character *trans, integer *m, integer *n, integer *k, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *c, integer *ldc, ilu_doublecomplex *work, integer *lwork, integer *info, ftnlen vectlen, ftnlen sidelen, ftnlen translen);
void zunmhr(character *side, character *trans, integer *m, integer *n, integer *ilo, integer *ihi, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *c, integer *ldc, ilu_doublecomplex *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void zunml2(character *side, character *trans, integer *m, integer *n, integer *k, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *c, integer *ldc, ilu_doublecomplex *work, integer *info, ftnlen sidelen, ftnlen translen);
void zunmlq(character *side, character *trans, integer *m, integer *n, integer *k, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *c, integer *ldc, ilu_doublecomplex *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void zunmql(character *side, character *trans, integer *m, integer *n, integer *k, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *c, integer *ldc, ilu_doublecomplex *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void zunmqr(character *side, character *trans, integer *m, integer *n, integer *k, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *c, integer *ldc, ilu_doublecomplex *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void zunmr2(character *side, character *trans, integer *m, integer *n, integer *k, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *c, integer *ldc, ilu_doublecomplex *work, integer *info, ftnlen sidelen, ftnlen translen);
void zunmr3(character *side, character *trans, integer *m, integer *n, integer *k, integer *l, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *c, integer *ldc, ilu_doublecomplex *work, integer *info, ftnlen sidelen, ftnlen translen);
void zunmrq(character *side, character *trans, integer *m, integer *n, integer *k, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *c, integer *ldc, ilu_doublecomplex *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void zunmrz(character *side, character *trans, integer *m, integer *n, integer *k, integer *l, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *c, integer *ldc, ilu_doublecomplex *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen translen);
void zunmtr(character *side, character *uplo, character *trans, integer *m, integer *n, ilu_doublecomplex *a, integer *lda, ilu_doublecomplex *tau, ilu_doublecomplex *c, integer *ldc, ilu_doublecomplex *work, integer *lwork, integer *info, ftnlen sidelen, ftnlen uplolen, ftnlen translen);
void zupgtr(character *uplo, integer *n, ilu_doublecomplex *ap, ilu_doublecomplex *tau, ilu_doublecomplex *q, integer *ldq, ilu_doublecomplex *work, integer *info, ftnlen uplolen);
void zupmtr(character *side, character *uplo, character *trans, integer *m, integer *n, ilu_doublecomplex *ap, ilu_doublecomplex *tau, ilu_doublecomplex *c, integer *ldc, ilu_doublecomplex *work, integer *info, ftnlen sidelen, ftnlen uplolen, ftnlen translen);
 
#endif /* _LAPACK_H */
